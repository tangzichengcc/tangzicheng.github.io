{
    "version": "https://jsonfeed.org/version/1",
    "title": "唐仔橙 • All posts by \"逆向\" category",
    "description": "喜欢探索世界,在读研究生,计算机爱好者的成长记录",
    "home_page_url": "https://tangzichengcc.github.io",
    "items": [
        {
            "id": "https://tangzichengcc.github.io/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%B8%80-%E9%80%86%E5%90%91/",
            "url": "https://tangzichengcc.github.io/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%B8%80-%E9%80%86%E5%90%91/",
            "title": "ucas-高级网络攻防-实验一_逆向",
            "date_published": "2023-03-10T11:18:16.000Z",
            "content_html": "<p>[toc]</p>\n<h1 id=\"加花指令程序分析\"><a href=\"#加花指令程序分析\" class=\"headerlink\" title=\"加花指令程序分析\"></a>加花指令程序分析</h1><p><img src=\"/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%B8%80-%E9%80%86%E5%90%91/image-20230310191852772.png\" alt=\"image-20230310191852772\"></p>\n<h2 id=\"程序功能\"><a href=\"#程序功能\" class=\"headerlink\" title=\"程序功能\"></a>程序功能</h2><p>​\t\t根据解除花指令,反编译后的代码分析可知,该程序获取用户的一个输入,然后对该输入进行三次运算,每一次都是先将输入与0x1453异或,然后左移一位,得到最后的结果. 如果这个结果等于50138则输出win.</p>\n<h2 id=\"花指令分析\"><a href=\"#花指令分析\" class=\"headerlink\" title=\"花指令分析\"></a>花指令分析</h2><p>首先,在函数列表里没有main函数,但是汇编里面有,说明main函数没有被正确反汇编,这里有问题,</p>\n<p>在main前面按p解析函数发现报错,</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">.text:0000000000001257: The function has undefined instruction/data at the specified address.</span><br><span class=\"line\">Your request has been put in the autoanalysis queue.</span><br><span class=\"line\"></span><br><span class=\"line\">.text:0000000000001253                 jz      short label2</span><br><span class=\"line\">.text:0000000000001255                 jnz     short label2</span><br><span class=\"line\">.text:0000000000001255 ; ---------------------------------------------------------------------------</span><br><span class=\"line\">.text:0000000000001257                 db 0E9h</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>可以发现前面有 jz和jnz,肯定不会执行到1257,1257这里是花指令,改成nop即可</p>\n<p>edit - patch program - change word 把E9 改成90 (0x90也就是nop,什么也不执行,往下走 即可)</p>\n<p><img src=\"/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%B8%80-%E9%80%86%E5%90%91/image-20230310193522710.png\" alt=\"image-20230310193522710\"></p>\n<p>此时这里还是代表数据,用快捷键c转换成代码,然后再在开头用p转换成函数即可</p>\n<p>然后就可以F5反编译</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> v4; <span class=\"comment\">// [rsp+4h] [rbp-Ch] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v5; <span class=\"comment\">// [rsp+8h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v5 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  v4 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Input a number: &quot;</span>);</span><br><span class=\"line\">  __isoc99_scanf(<span class=\"string\">&quot;%d&quot;</span>, &amp;v4);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)encrypt(v4) == <span class=\"number\">50138</span> )</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;win&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以开到,关键函数是encrypt,进入这里,发现这里面也有问题,</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> __fastcall <span class=\"title function_\">encrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> a1)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( a1 &gt; <span class=\"number\">0x1000</span> )</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  JUMPOUT(<span class=\"number\">0x11EC</span>LL);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">.text:<span class=\"number\">00000000000011</span>EB                         loc_11EB:                               ; CODE XREF: encrypt+<span class=\"number\">58</span>↓j</span><br><span class=\"line\">.text:<span class=\"number\">00000000000011</span>EB                                                                 ; encrypt:loc_11EB↑j</span><br><span class=\"line\">.text:<span class=\"number\">00000000000011</span>EB EB FF                                   jmp     <span class=\"type\">short</span> near ptr loc_11EB+<span class=\"number\">1</span> ; Jump</span><br><span class=\"line\">.text:<span class=\"number\">00000000000011</span>ED                         ; ---------------------------------------------------------------------------</span><br><span class=\"line\">.text:<span class=\"number\">00000000000011</span>ED C0 FF C8                                sar     bh, <span class=\"number\">0</span>C8h        ; Shift Arithmetic Right</span><br><span class=\"line\">.text:<span class=\"number\">00000000000011F</span>0 <span class=\"number\">8B</span> <span class=\"number\">45</span> FC                                mov     eax, [rbp+var_4]</span><br><span class=\"line\">.text:<span class=\"number\">00000000000011F</span>3 <span class=\"number\">31</span> <span class=\"number\">45</span> EC                                xor     [rbp+var_14], eax ; Logical Exclusive OR</span><br><span class=\"line\">.text:<span class=\"number\">00000000000011F</span>6 D1 <span class=\"number\">45</span> EC                                rol     [rbp+var_14], <span class=\"number\">1</span> ; Rotate Left</span><br><span class=\"line\">.text:<span class=\"number\">00000000000011F</span>9 <span class=\"number\">83</span> <span class=\"number\">45</span> F8 <span class=\"number\">01</span>                             add     [rbp+var_8], <span class=\"number\">1</span>  ; Add</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t通过gdb动态调试发现, jmp     short near ptr loc_11EB+1  是要跳到00000000000011EC这里,(动态运行的话是0x5555555551ec,要加上装载地址),然后往下解析, 但是在ida里面,由于这条指令的存在,它会从00000000000011ED往后解析,(不太清楚这里面的机制原理),而jump到000011EC这里就jump错了地址,所以反编译有问题.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"number\">0x5555555551fd</span> &lt;encrypt+<span class=\"number\">84</span>&gt;    cmp    dword ptr [rbp - <span class=\"number\">8</span>], <span class=\"number\">2</span></span><br><span class=\"line\">  <span class=\"number\">0x555555555201</span> &lt;encrypt+<span class=\"number\">88</span>&gt;    jle    encrypt+<span class=\"number\">66</span>                &lt;encrypt+<span class=\"number\">66</span>&gt;</span><br><span class=\"line\">   ↓</span><br><span class=\"line\">  <span class=\"number\">0x5555555551eb</span> &lt;encrypt+<span class=\"number\">66</span>&gt;    jmp    encrypt+<span class=\"number\">67</span>                &lt;encrypt+<span class=\"number\">67</span>&gt;</span><br><span class=\"line\">   ↓</span><br><span class=\"line\">► <span class=\"number\">0x5555555551ec</span> &lt;encrypt+<span class=\"number\">67</span>&gt;    inc    eax</span><br><span class=\"line\">  <span class=\"number\">0x5555555551ee</span> &lt;encrypt+<span class=\"number\">69</span>&gt;    dec    eax</span><br><span class=\"line\">  <span class=\"number\">0x5555555551f0</span> &lt;encrypt+<span class=\"number\">71</span>&gt;    mov    eax, dword ptr [rbp - <span class=\"number\">4</span>]</span><br><span class=\"line\">  <span class=\"number\">0x5555555551f3</span> &lt;encrypt+<span class=\"number\">74</span>&gt;    xor    dword ptr [rbp - <span class=\"number\">0x14</span>], eax</span><br><span class=\"line\">  <span class=\"number\">0x5555555551f6</span> &lt;encrypt+<span class=\"number\">77</span>&gt;    rol    dword ptr [rbp - <span class=\"number\">0x14</span>], <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"number\">0x5555555551f9</span> &lt;encrypt+<span class=\"number\">80</span>&gt;    add    dword ptr [rbp - <span class=\"number\">8</span>], <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>​\t\t所以要想解决的话,有多个办法,一个是,jmp 到0000011ED就可以了,将FF改成00,也就再往前走一步,这样就可以了,第二个办法是都改成nop就可以了,让指令往下滑.</p>\n<p>​\t\t反编译结果</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> __fastcall <span class=\"title function_\">encrypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> a1)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> v1; <span class=\"comment\">// bh</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> v2; <span class=\"comment\">// [rsp+14h] [rbp-14h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [rsp+20h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v2 = a1;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( a1 &gt; <span class=\"number\">0x1000</span> )</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">2</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v1 &gt;&gt;= <span class=\"number\">7</span>;</span><br><span class=\"line\">    v2 = __ROL4__(v2 ^ <span class=\"number\">0x1453</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>​\t\ta1是输入的值,首先a1不能大于4096, 然后v1右移7位,v2 等于 v2和0x1453异或后 左移1位,( rol    dword ptr [rbp - 0x14], 1)</p>\n<p>​\t\t最后的结果是50138,逆向推导,右移一位,异或0x1453,这个操作做三次,就得到了答案789</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> input = <span class=\"number\">50138</span>;</span><br><span class=\"line\">  input &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">  input = input ^ <span class=\"number\">0x1453</span>;</span><br><span class=\"line\">  input &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">  input = input ^ <span class=\"number\">0x1453</span>;</span><br><span class=\"line\">  input &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">  input = input ^ <span class=\"number\">0x1453</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,input);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运行截图\"><a href=\"#运行截图\" class=\"headerlink\" title=\"运行截图\"></a>运行截图</h2><p><img src=\"/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%B8%80-%E9%80%86%E5%90%91/image-20230310200841386.png\" alt=\"image-20230310200841386\"></p>\n<h1 id=\"re1-asm\"><a href=\"#re1-asm\" class=\"headerlink\" title=\"re1 asm\"></a>re1 asm</h1><p>​\t\t得到一个asm.s文件,汇编文件,查看可以知道是由test.c汇编而来,可以选择硬读汇编来解,也可以进行编译成二进制文件后,再反汇编反编译成伪代码进行查看.</p>\n<p>​\t\tgcc asm.s 得到二进制文件 a.out,然后拖进ida进行反编译,得到结果</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( a == <span class=\"number\">29488</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;you win&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;you lose&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"re2-bits\"><a href=\"#re2-bits\" class=\"headerlink\" title=\"re2 bits\"></a>re2 bits</h1><h2 id=\"概要\"><a href=\"#概要\" class=\"headerlink\" title=\"概要\"></a>概要</h2><p>​\t\t这是一道ctf的逆向题目,给了二进制文件和远程服务器连接方式.二进制文件是elf 64位,通过给程序一个正确的输入,当验证输入正确的时候,会从flag文件中读取flag.flag文件在远程服务器上,所以在本地调试好后要和服务器进行交互拿到flag.</p>\n<p>​\t\t先对程序进行了逆向分析,对算法进行逆向编写,编写过程比较困难,最后失败.采取爆破的方法,利用angr工具求解.</p>\n<p><img src=\"/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%B8%80-%E9%80%86%E5%90%91/image-20230310200230541.png\" alt=\"image-20230310200230541\"></p>\n<h2 id=\"程序分析\"><a href=\"#程序分析\" class=\"headerlink\" title=\"程序分析\"></a>程序分析</h2><h3 id=\"程序伪代码\"><a href=\"#程序伪代码\" class=\"headerlink\" title=\"程序伪代码\"></a>程序伪代码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> __fastcall __noreturn <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> a1, <span class=\"type\">char</span> **a2, <span class=\"type\">char</span> **a3)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">__pid_t</span> v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">__pid_t</span> v4; <span class=\"comment\">// ebx</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v5; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> v6; <span class=\"comment\">// [rsp+0h] [rbp-40h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> v7; <span class=\"comment\">// [rsp+4h] [rbp-3Ch]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> size; <span class=\"comment\">// [rsp+8h] [rbp-38h]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> size_4; <span class=\"comment\">// [rsp+Ch] [rbp-34h]</span></span><br><span class=\"line\">  <span class=\"type\">void</span> *ptr; <span class=\"comment\">// [rsp+10h] [rbp-30h]</span></span><br><span class=\"line\">  <span class=\"type\">void</span> *s; <span class=\"comment\">// [rsp+18h] [rbp-28h]</span></span><br><span class=\"line\">  FILE *stream; <span class=\"comment\">// [rsp+20h] [rbp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v13; <span class=\"comment\">// [rsp+28h] [rbp-18h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v13 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( ptrace(PTRACE_TRACEME, <span class=\"number\">0LL</span>, <span class=\"number\">1LL</span>, <span class=\"number\">0LL</span>) &lt; <span class=\"number\">0</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Do not trace me!&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  v3 = getpid();</span><br><span class=\"line\">  v4 = getsid(v3);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v4 != getppid() )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Do not trace me!&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ptr = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  s = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  v7 = sub_BFA();</span><br><span class=\"line\">  stream = fopen(<span class=\"string\">&quot;code&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !stream )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    fwrite(<span class=\"string\">&quot;Could not open file code!\\n&quot;</span>, <span class=\"number\">1uLL</span>, <span class=\"number\">0x1A</span>uLL, <span class=\"built_in\">stderr</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fseek(stream, <span class=\"number\">0LL</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">  size = ftell(stream);</span><br><span class=\"line\">  fseek(stream, <span class=\"number\">0LL</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  ptr = <span class=\"built_in\">malloc</span>(size);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( fread(ptr, size, <span class=\"number\">1uLL</span>, stream) != <span class=\"number\">1</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    fwrite(<span class=\"string\">&quot;Error reading file code\\n&quot;</span>, <span class=\"number\">1uLL</span>, <span class=\"number\">0x18</span>uLL, <span class=\"built_in\">stderr</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  size_4 = sub_C31(v7, size, (__int64)ptr);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Your number is %u\\n&quot;</span>, size_4);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Your answer: &quot;</span>);</span><br><span class=\"line\">  __isoc99_scanf(<span class=\"string\">&quot;%d&quot;</span>, &amp;v6);</span><br><span class=\"line\">  v5 = sub_C31(v6, size, (__int64)ptr);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( size_4 == v5 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Congrats!&quot;</span>);</span><br><span class=\"line\">    s = <span class=\"built_in\">malloc</span>(<span class=\"number\">0x40</span>uLL);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(s, <span class=\"number\">0</span>, <span class=\"number\">0x40</span>uLL);</span><br><span class=\"line\">    stream = fopen(<span class=\"string\">&quot;flag.txt&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    fgets((<span class=\"type\">char</span> *)s, <span class=\"number\">64</span>, stream);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>((<span class=\"type\">const</span> <span class=\"type\">char</span> *)s);</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(s);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Thanks for coming!&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">free</span>(ptr);</span><br><span class=\"line\">  <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__int64 __fastcall <span class=\"title function_\">sub_C31</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> a1, <span class=\"type\">int</span> size, __int64 ptr)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int8 v7; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int8 v8; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int8 v9; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int8 v10; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int8 v11; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [rsp+14h] [rbp-1Ch]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> v14; <span class=\"comment\">// [rsp+18h] [rbp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> v15; <span class=\"comment\">// [rsp+1Ch] [rbp-14h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v16; <span class=\"comment\">// [rsp+20h] [rbp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [rsp+24h] [rbp-Ch]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [rsp+28h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v17 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v16 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v15 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v14 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v13 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; size; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v7 = *(_BYTE *)(i + ptr);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (v7 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      a1 ^= dword_202020[v13];</span><br><span class=\"line\">      v13 = ((_BYTE)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    v8 = v7 &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    v3 = v8 &amp; <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v3 == <span class=\"number\">2</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v15 = dword_202020[v13] &amp; <span class=\"number\">0xAABBCCDD</span>;</span><br><span class=\"line\">      v13 = ((_BYTE)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;</span><br><span class=\"line\">      v9 = v8 &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( v3 == <span class=\"number\">3</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      a1 += v14 + v15;</span><br><span class=\"line\">      v15 = <span class=\"number\">0</span>;</span><br><span class=\"line\">      v14 = <span class=\"number\">0</span>;</span><br><span class=\"line\">      v9 = v8 &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v3 == <span class=\"number\">1</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v14 = dword_202020[v13] | <span class=\"number\">0xABCDABCD</span>;</span><br><span class=\"line\">        v13 = ((_BYTE)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      v9 = v8 &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (v9 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">      a1 = ~a1;</span><br><span class=\"line\">    v10 = v9 &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (v10 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">      a1 ^= (((a1 &lt;&lt; <span class=\"number\">16</span>) ^ a1) &gt;&gt; <span class=\"number\">16</span>) ^ (a1 &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">    v11 = v10 &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    v4 = v11 &amp; <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v4 == <span class=\"number\">2</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v17 = dword_202020[v13] - <span class=\"number\">539034144</span>;</span><br><span class=\"line\">      v13 = ((_BYTE)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;</span><br><span class=\"line\">      v12 = v11 &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( v4 == <span class=\"number\">3</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      a1 += v16 + v17;</span><br><span class=\"line\">      v17 = <span class=\"number\">0</span>;</span><br><span class=\"line\">      v16 = <span class=\"number\">0</span>;</span><br><span class=\"line\">      v12 = v11 &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v4 == <span class=\"number\">1</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v16 = <span class=\"number\">539034132</span> * dword_202020[v13];</span><br><span class=\"line\">        v13 = ((_BYTE)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      v12 = v11 &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (v12 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">      a1 = a1 - (a1 &amp; <span class=\"number\">7</span>) - (a1 &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"程序执行流程分析\"><a href=\"#程序执行流程分析\" class=\"headerlink\" title=\"程序执行流程分析\"></a>程序执行流程分析</h3><p><img src=\"/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%B8%80-%E9%80%86%E5%90%91/image-20230310210811794.png\" alt=\"image-20230310210811794\"></p>\n<p>​\t\t关键流程在于,随机数v7和code经过计算后输出结果.需要根据结果反推随机值.</p>\n<h3 id=\"程序关键算法分析\"><a href=\"#程序关键算法分析\" class=\"headerlink\" title=\"程序关键算法分析\"></a>程序关键算法分析</h3><p>​\t\tsub_C31函数对code和随机值v7进行计算,运算过程较为复杂,包含了许多位移运算,与或运算.流程较长.采用直接逆向的方法较为困难.所以采用了angr爆破的方法.</p>\n<h2 id=\"工具使用\"><a href=\"#工具使用\" class=\"headerlink\" title=\"工具使用\"></a>工具使用</h2><h3 id=\"ida\"><a href=\"#ida\" class=\"headerlink\" title=\"ida\"></a>ida</h3><p>​\t\tida用于静态分析,得到反汇编代码.</p>\n<h3 id=\"gdb\"><a href=\"#gdb\" class=\"headerlink\" title=\"gdb\"></a>gdb</h3><p>​\t\tgdb用于动态分析,在编写利用代码以及分析程序时,可以观察运行到某一行代码时的内存、寄存器等值和状态.</p>\n<h3 id=\"angr\"><a href=\"#angr\" class=\"headerlink\" title=\"angr\"></a>angr</h3><p>​\t\tangr是一个基于python的二进制分析框架,能够实施动态符号执行,和不同的静态分析.对本题目来说,angr可以对key的各种约束条件进行求解,从而爆破得到key的值.</p>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><h3 id=\"减少循环、获取key的完整计算过程\"><a href=\"#减少循环、获取key的完整计算过程\" class=\"headerlink\" title=\"减少循环、获取key的完整计算过程\"></a>减少循环、获取key的完整计算过程</h3><p>​\t\tangr对于循环的处理较为复杂和缓慢,所以可以通过在混淆代码中加入输出key的运算过程的代码,得到完整的运算流程.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">hunxiao</span><span class=\"params\">(<span class=\"type\">int</span> randnum, <span class=\"type\">int</span> size,<span class=\"type\">int</span> *ptr)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> v3; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\"> <span class=\"type\">int</span> v7; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\"> <span class=\"type\">int</span> v8; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\"> <span class=\"type\">int</span> v9; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\"> <span class=\"type\">int</span> v10; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\"> <span class=\"type\">int</span> v11; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v12; <span class=\"comment\">// [rsp+13h] [rbp-1Dh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [rsp+14h] [rbp-1Ch]</span></span><br><span class=\"line\">   <span class=\"type\">int</span> v14; <span class=\"comment\">// [rsp+18h] [rbp-18h]</span></span><br><span class=\"line\">   <span class=\"type\">int</span> v15; <span class=\"comment\">// [rsp+1Ch] [rbp-14h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v16; <span class=\"comment\">// [rsp+20h] [rbp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17; <span class=\"comment\">// [rsp+24h] [rbp-Ch]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [rsp+28h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v17 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v16 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v15 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v14 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v13 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"type\">int</span> dword_202020[<span class=\"number\">16</span>] = &#123;<span class=\"number\">0x24DD20CF</span>, <span class=\"number\">0x3E4F0354</span>, <span class=\"number\">0x18B2E85F</span>, <span class=\"number\">0x2F2CAFB8</span>, <span class=\"number\">0x5810ADCB</span>,<span class=\"number\">0x42F7FF85</span>, <span class=\"number\">0x36E0D6C2</span>, <span class=\"number\">0x5F3EF93F</span>, <span class=\"number\">0x7F46E74A</span>, <span class=\"number\">0x44DDC864</span>,<span class=\"number\">0x64959795</span>, <span class=\"number\">0x39413451</span>, <span class=\"number\">0x5DC36C45</span>, <span class=\"number\">0x62037E7E</span>, <span class=\"number\">0x5AEA541F</span>,<span class=\"number\">0x153F8FAC</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;hunxiao里面的输出%p\\n&quot;</span>,*ptr); <span class=\"comment\">//这里输出的有问题</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;hunxiao里面的输出%p\\n&quot;</span>,*ptr); <span class=\"comment\">//这里输出的有问题</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"comment\">//v7 = ptr[i];</span></span><br><span class=\"line\">    v7 = *((<span class=\"type\">unsigned</span> <span class=\"type\">char</span>*)(i + (<span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span>)ptr));</span><br><span class=\"line\">    <span class=\"comment\">//printf(&quot;%02x\\n&quot;, *(ptr + i));</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;v7的值:%x\\n&quot;</span>,v7);</span><br><span class=\"line\">    <span class=\"comment\">//printf(&quot;v7 &amp; 1的值%x\\n&quot;,v7&amp;1);</span></span><br><span class=\"line\">    <span class=\"comment\">// 看code的每个字节的第一位是否是0,如果是0进行下面操作,</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (v7 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      randnum ^= dword_202020[v13];</span><br><span class=\"line\">    <span class=\"comment\">//printf(&quot;randnum:%x\\n&quot;,randnum);</span></span><br><span class=\"line\">    v13 = ((<span class=\"type\">unsigned</span> <span class=\"type\">char</span>)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;<span class=\"comment\">//这句话的作用是把它范围限制在0-15位</span></span><br><span class=\"line\">    <span class=\"comment\">//printf(&quot;v13:%x\\n&quot;,v13);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    v8 = v7 &gt;&gt; <span class=\"number\">1</span>; <span class=\"comment\">//code字节右移一位,</span></span><br><span class=\"line\">    <span class=\"comment\">//printf(&quot;v8:%x\\n&quot;,v8);</span></span><br><span class=\"line\">    v3 = v8 &amp; <span class=\"number\">3</span>; <span class=\"comment\">// &amp; 11,把v3限制在两位</span></span><br><span class=\"line\">    <span class=\"comment\">// 然后根据v3的值进行选择分支运算</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v3 == <span class=\"number\">1</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v14 = dword_202020[v13] | <span class=\"number\">0xABCDABCD</span>;</span><br><span class=\"line\">        v13 = ((<span class=\"type\">unsigned</span> <span class=\"type\">char</span>)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;<span class=\"comment\">//这句话的作用是把它范围限制在0-15位</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v3 == <span class=\"number\">2</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v15 = dword_202020[v13] &amp; <span class=\"number\">0xAABBCCDD</span>;</span><br><span class=\"line\">      v13 = ((<span class=\"type\">unsigned</span> <span class=\"type\">char</span>)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;<span class=\"comment\">//这句话的作用是把它范围限制在0-15位</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v3 == <span class=\"number\">3</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      randnum += v14 + v15;</span><br><span class=\"line\">      v15 = <span class=\"number\">0</span>;</span><br><span class=\"line\">      v14 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   v9 = v8 &gt;&gt; <span class=\"number\">2</span>;  <span class=\"comment\">//三个判断里都有,提出来</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//上面那一层判断完之后,再到下面,继续进行乱七八糟的操作</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (v9 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">      randnum = ~randnum;</span><br><span class=\"line\">    v10 = v9 &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (v10 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">      randnum ^= (((randnum &lt;&lt; <span class=\"number\">16</span>) ^ randnum) &gt;&gt; <span class=\"number\">16</span>) ^ (randnum &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 这一段和上面那个好像</span></span><br><span class=\"line\">    v11 = v10 &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    v4 = v11 &amp; <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v4 == <span class=\"number\">1</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v16 = <span class=\"number\">539034132</span> * dword_202020[v13]; <span class=\"comment\">//0x20210214</span></span><br><span class=\"line\">        v13 = ((<span class=\"type\">unsigned</span> <span class=\"type\">char</span>)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;<span class=\"comment\">//这句话的作用是把它范围限制在0-15位</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v4 == <span class=\"number\">2</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v17 = dword_202020[v13] - <span class=\"number\">539034144</span>; <span class=\"comment\">//0x20210220</span></span><br><span class=\"line\">      v13 = ((<span class=\"type\">unsigned</span> <span class=\"type\">char</span>)v13 + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xF</span>;<span class=\"comment\">//这句话的作用是把它范围限制在0-15位</span></span><br><span class=\"line\">      v12 = v11 &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v4 == <span class=\"number\">3</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      randnum += v16 + v17;</span><br><span class=\"line\">      v17 = <span class=\"number\">0</span>;</span><br><span class=\"line\">      v16 = <span class=\"number\">0</span>;</span><br><span class=\"line\">      v12 = v11 &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">      v12 = v11 &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (v12 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">      randnum = randnum - (randnum &amp; <span class=\"number\">7</span>) - (randnum &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> randnum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> *s;</span><br><span class=\"line\">FILE *stream;</span><br><span class=\"line\"><span class=\"type\">int</span> size;</span><br><span class=\"line\"><span class=\"type\">void</span> *ptr;</span><br><span class=\"line\"><span class=\"type\">int</span> size_4;</span><br><span class=\"line\"><span class=\"type\">int</span> v0 = time(<span class=\"number\">0</span>);</span><br><span class=\"line\">srand(v0);</span><br><span class=\"line\"><span class=\"type\">int</span> v2 = rand();</span><br><span class=\"line\"><span class=\"comment\">//printf(&quot;%d\\n&quot;,v2);</span></span><br><span class=\"line\">stream = fopen(<span class=\"string\">&quot;./code&quot;</span>,<span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">fseek(stream, <span class=\"number\">0</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">size = ftell(stream);</span><br><span class=\"line\">fseek(stream, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s\\n&quot;</span>,stream);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;size:%d\\n&quot;</span>,size);</span><br><span class=\"line\">ptr = <span class=\"built_in\">malloc</span>(size);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( fread(ptr, size, <span class=\"number\">1</span>, stream) != <span class=\"number\">1</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    fwrite(<span class=\"string\">&quot;Error reading file code\\n&quot;</span>, <span class=\"number\">1</span>, <span class=\"number\">0x18</span>, <span class=\"built_in\">stderr</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;在外面的输出:%x\\n&quot;</span>,&amp;ptr); <span class=\"comment\">//这里输出的有问题</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;ptr:%p\\n&quot;</span>,ptr);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;&amp;ptr:%p\\n&quot;</span>,&amp;ptr); <span class=\"comment\">//&amp;ptr的地址,里面存着ptr的地址,ptr地址里面存着数据</span></span><br><span class=\"line\">size_4 = hunxiao(v2,size,ptr);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t运行代码,得到key的处理代码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">key ^= dword_202020[<span class=\"number\">0</span>];</span><br><span class=\"line\">key=~key;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">3</span>];</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key=~key;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key += <span class=\"number\">1256252113</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">6</span>];</span><br><span class=\"line\">key += <span class=\"number\">636006435</span>;</span><br><span class=\"line\">key += <span class=\"number\">0</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">7</span>];</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">10</span>];</span><br><span class=\"line\">key=~key;</span><br><span class=\"line\">key += <span class=\"number\">1908961232</span>;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">12</span>];</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key += <span class=\"number\">0</span>;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">14</span>];</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">1</span>];</span><br><span class=\"line\">key += <span class=\"number\">3791846473</span>;</span><br><span class=\"line\">key=~key;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key=~key;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key += <span class=\"number\">3767795326</span>;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">7</span>];</span><br><span class=\"line\">key += <span class=\"number\">371756133</span>;</span><br><span class=\"line\">key=~key;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">8</span>];</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"编写key计算代码\"><a href=\"#编写key计算代码\" class=\"headerlink\" title=\"编写key计算代码\"></a>编写key计算代码</h3><p>​\t\t需要替换y值</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">int</span> dword_202020[<span class=\"number\">16</span>] = &#123;</span><br><span class=\"line\"><span class=\"number\">0x24DD20CF</span>, <span class=\"number\">0x3E4F0354</span>, <span class=\"number\">0x18B2E85F</span>, <span class=\"number\">0x2F2CAFB8</span>, <span class=\"number\">0x5810ADCB</span>, <span class=\"number\">0x42F7FF85</span>, <span class=\"number\">0x36E0D6C2</span>, <span class=\"number\">0x5F3EF93F</span>,</span><br><span class=\"line\"><span class=\"number\">0x7F46E74A</span>, <span class=\"number\">0x44DDC864</span>, <span class=\"number\">0x64959795</span>, <span class=\"number\">0x39413451</span>, <span class=\"number\">0x5DC36C45</span>, <span class=\"number\">0x62037E7E</span>, <span class=\"number\">0x5AEA541F</span>, <span class=\"number\">0x153F8FAC</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">calc</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> key)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">0</span>];</span><br><span class=\"line\">key = ~key;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">3</span>];</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key = ~key;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key += <span class=\"number\">1256252113</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">6</span>];</span><br><span class=\"line\">key += <span class=\"number\">636006435</span>;</span><br><span class=\"line\">key += <span class=\"number\">0</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">7</span>];</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">10</span>];</span><br><span class=\"line\">key = ~key;</span><br><span class=\"line\">key += <span class=\"number\">1908961232</span>;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">12</span>];</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key += <span class=\"number\">0</span>;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">14</span>];</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">1</span>];</span><br><span class=\"line\">key += <span class=\"number\">3791846473</span>;</span><br><span class=\"line\">key = ~key;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key = ~key;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key += <span class=\"number\">3767795326</span>;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">7</span>];</span><br><span class=\"line\">key += <span class=\"number\">371756133</span>;</span><br><span class=\"line\">key = ~key;</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\">key ^= dword_202020[<span class=\"number\">8</span>];</span><br><span class=\"line\">key ^= (((key &lt;&lt; <span class=\"number\">16</span>) ^ key) &gt;&gt; <span class=\"number\">16</span>) ^ (key &lt;&lt; <span class=\"number\">16</span>);</span><br><span class=\"line\">key = key - (key &amp; <span class=\"number\">7</span>) - (key &amp; <span class=\"number\">7</span>) + <span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"keyword\">return</span> key;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span> &#123;</span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">int</span> x = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">int</span> y = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%u&quot;</span>, &amp;x);</span><br><span class=\"line\">y = calc(x);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (y == <span class=\"number\">730447668</span>) &#123; <span class=\"comment\">//**比赛实际服务器返回的number**）</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;right\\n&quot;</span>);</span><br><span class=\"line\">&#125;  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;wrong\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>​\t\tgcc -o f fk.c 得到f二进制文件</p>\n<h3 id=\"angr脚本-得到随机值\"><a href=\"#angr脚本-得到随机值\" class=\"headerlink\" title=\"angr脚本,得到随机值\"></a>angr脚本,得到随机值</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> angr</span><br><span class=\"line\"><span class=\"keyword\">import</span> claripy</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot; solving :&quot;</span>, sys.argv[<span class=\"number\">1</span>])</span><br><span class=\"line\">    p = angr.Project(sys.argv[<span class=\"number\">1</span>], load_options=&#123;<span class=\"string\">&quot;auto_load_libs&quot;</span>: <span class=\"literal\">True</span>&#125;)</span><br><span class=\"line\">    state = p.factory.entry_state()</span><br><span class=\"line\"></span><br><span class=\"line\">    sm = p.factory.simgr(state)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">good</span>(<span class=\"params\">state</span>):</span><br><span class=\"line\">        stdout_output = state.posix.dumps(sys.stdout.fileno())</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;right&#x27;</span>.encode() <span class=\"keyword\">in</span> stdout_output  <span class=\"comment\"># :boolean</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bad</span>(<span class=\"params\">state</span>):</span><br><span class=\"line\">        stdout_output = state.posix.dumps(sys.stdout.fileno())</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;wrong&#x27;</span>.encode() <span class=\"keyword\">in</span> stdout_output</span><br><span class=\"line\">    sm.explore(find=good, avoid=bad)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> sm.found:</span><br><span class=\"line\">  <span class=\"comment\"># print(sm.found[0].solver.eval(flag, cast_to=bytes)</span></span><br><span class=\"line\">  <span class=\"comment\"># print(sm.found[0].posix.dumps(sys.stdout.fileno())</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(sm.found[<span class=\"number\">0</span>].posix.dumps(sys.stdin.fileno()))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Not found&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Done&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/ucas-%E9%AB%98%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2-%E5%AE%9E%E9%AA%8C%E4%B8%80-%E9%80%86%E5%90%91/image-20230310213131937.png\" alt=\"image-20230310213131937\"></p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>(一开始做了好久,硬逆向,发现确实不太好弄…本来想放弃了…搜了搜有原题..就参考了(抄)了一下)</p>\n<p><a href=\"https://www.52pojie.cn/thread-1717425-1-1.html\">https://www.52pojie.cn/thread-1717425-1-1.html</a></p>\n<p><a href=\"https://docs.angr.io/\">https://docs.angr.io</a></p>\n",
            "tags": [
                "研究生课程"
            ]
        }
    ]
}